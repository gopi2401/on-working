// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'widget.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

Widget _$WidgetFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'card':
      return Card.fromJson(json);
    case 'elevatedButton':
      return ElevatedButton.fromJson(json);
    case 'filledButton':
      return FilledButton.fromJson(json);
    case 'filledTonalButton':
      return FilledTonalButton.fromJson(json);
    case 'outlinedButton':
      return OutlinedButton.fromJson(json);
    case 'textButton':
      return TextButton.fromJson(json);
    case 'iconButton':
      return IconButton.fromJson(json);
    case 'scaffold':
      return Scaffold.fromJson(json);
    case 'floatingActionButton':
      return FloatingActionButton.fromJson(json);
    case 'floatingActionButtonExtended':
      return FloatingActionButtonExtended.fromJson(json);
    case 'text':
      return Text.fromJson(json);
    case 'container':
      return Container.fromJson(json);
    case 'sizedBox':
      return SizedBox.fromJson(json);
    case 'center':
      return Center.fromJson(json);
    case 'icon':
      return Icon.fromJson(json);
    case 'column':
      return Column.fromJson(json);
    case 'row':
      return Row.fromJson(json);
    case 'circularProgressIndicator':
      return CircularProgressIndicator.fromJson(json);
    case 'linearProgressIndicator':
      return LinearProgressIndicator.fromJson(json);
    case 'divider':
      return Divider.fromJson(json);
    case 'navigationRail':
      return NavigationRail.fromJson(json);
    case 'navigationBar':
      return NavigationBar.fromJson(json);
    case 'defaultTabController':
      return DefaultTabController.fromJson(json);
    case 'tab':
      return Tab.fromJson(json);
    case 'tabBarView':
      return TabBarView.fromJson(json);
    case 'customScrollView':
      return CustomScrollView.fromJson(json);
    case 'checkbox':
      return Checkbox.fromJson(json);
    case 'dropdownButtonFormField':
      return DropdownButtonFormField.fromJson(json);
    case 'popupMenuButton':
      return PopupMenuButton.fromJson(json);
    case 'navigationDestination':
      return NavigationDestination.fromJson(json);
    case 'actionChip':
      return ActionChip.fromJson(json);
    case 'filterChip':
      return FilterChip.fromJson(json);
    case 'inputChip':
      return InputChip.fromJson(json);
    case 'menuAnchor':
      return MenuAnchor.fromJson(json);
    case 'submenuButton':
      return SubmenuButton.fromJson(json);
    case 'menuItemButton':
      return MenuItemButton.fromJson(json);
    case 'materialSwitch':
      return Switch.fromJson(json);
    case 'bottomAppBar':
      return BottomAppBar.fromJson(json);
    case 'navigationDrawer':
      return NavigationDrawer.fromJson(json);
    case 'navigationDrawerDestination':
      return NavigationDrawerDestination.fromJson(json);
    case 'textField':
      return TextField.fromJson(json);
    case 'badgeCount':
      return BadgeCount.fromJson(json);
    case 'badge':
      return Badge.fromJson(json);
    case 'alertDialog':
      return AlertDialog.fromJson(json);
    case 'image':
      return Image.fromJson(json);
    case 'safeArea':
      return SafeArea.fromJson(json);
    case 'singleChildScrollView':
      return SingleChildScrollView.fromJson(json);
    case 'align':
      return Align.fromJson(json);
    case 'padding':
      return Padding.fromJson(json);
    case 'clipRRect':
      return ClipRRect.fromJson(json);
    case 'materialApp':
      return MaterialApp.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'Widget',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$Widget {
  Key? get key => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $WidgetCopyWith<Widget> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $WidgetCopyWith<$Res> {
  factory $WidgetCopyWith(Widget value, $Res Function(Widget) then) =
      _$WidgetCopyWithImpl<$Res, Widget>;
  @useResult
  $Res call({Key? key});

  $KeyCopyWith<$Res>? get key;
}

/// @nodoc
class _$WidgetCopyWithImpl<$Res, $Val extends Widget>
    implements $WidgetCopyWith<$Res> {
  _$WidgetCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
  }) {
    return _then(_value.copyWith(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
    ) as $Val);
  }

  @override
  @pragma('vm:prefer-inline')
  $KeyCopyWith<$Res>? get key {
    if (_value.key == null) {
      return null;
    }

    return $KeyCopyWith<$Res>(_value.key!, (value) {
      return _then(_value.copyWith(key: value) as $Val);
    });
  }
}

/// @nodoc
abstract class _$$CardCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$CardCopyWith(_$Card value, $Res Function(_$Card) then) =
      __$$CardCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Color? color,
      Color? shadowColor,
      Color? surfaceTintColor,
      double? elevation,
      ShapeBorder? shape,
      bool borderOnForeground,
      EdgeInsets? margin,
      Clip? clipBehavior,
      Widget? child,
      bool semanticContainer});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get color;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $ShapeBorderCopyWith<$Res>? get shape;
  $EdgeInsetsCopyWith<$Res>? get margin;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$CardCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Card>
    implements _$$CardCopyWith<$Res> {
  __$$CardCopyWithImpl(_$Card _value, $Res Function(_$Card) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? color = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? elevation = freezed,
    Object? shape = freezed,
    Object? borderOnForeground = null,
    Object? margin = freezed,
    Object? clipBehavior = freezed,
    Object? child = freezed,
    Object? semanticContainer = null,
  }) {
    return _then(_$Card(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      borderOnForeground: null == borderOnForeground
          ? _value.borderOnForeground
          : borderOnForeground // ignore: cast_nullable_to_non_nullable
              as bool,
      margin: freezed == margin
          ? _value.margin
          : margin // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      clipBehavior: freezed == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
      semanticContainer: null == semanticContainer
          ? _value.semanticContainer
          : semanticContainer // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get margin {
    if (_value.margin == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.margin!, (value) {
      return _then(_value.copyWith(margin: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Card implements Card {
  const _$Card(
      {this.key,
      this.color,
      this.shadowColor,
      this.surfaceTintColor,
      this.elevation,
      this.shape,
      this.borderOnForeground = true,
      this.margin,
      this.clipBehavior,
      this.child,
      this.semanticContainer = true,
      final String? $type})
      : $type = $type ?? 'card';

  factory _$Card.fromJson(Map<String, dynamic> json) => _$$CardFromJson(json);

  @override
  final Key? key;
  @override
  final Color? color;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final double? elevation;
  @override
  final ShapeBorder? shape;
  @override
  @JsonKey()
  final bool borderOnForeground;
  @override
  final EdgeInsets? margin;
  @override
  final Clip? clipBehavior;
  @override
  final Widget? child;
  @override
  @JsonKey()
  final bool semanticContainer;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.card(key: $key, color: $color, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, elevation: $elevation, shape: $shape, borderOnForeground: $borderOnForeground, margin: $margin, clipBehavior: $clipBehavior, child: $child, semanticContainer: $semanticContainer)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Card &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.borderOnForeground, borderOnForeground) ||
                other.borderOnForeground == borderOnForeground) &&
            (identical(other.margin, margin) || other.margin == margin) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.semanticContainer, semanticContainer) ||
                other.semanticContainer == semanticContainer));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      color,
      shadowColor,
      surfaceTintColor,
      elevation,
      shape,
      borderOnForeground,
      margin,
      clipBehavior,
      child,
      semanticContainer);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CardCopyWith<_$Card> get copyWith =>
      __$$CardCopyWithImpl<_$Card>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return card(key, color, shadowColor, surfaceTintColor, elevation, shape,
        borderOnForeground, margin, clipBehavior, child, semanticContainer);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return card?.call(
        key,
        color,
        shadowColor,
        surfaceTintColor,
        elevation,
        shape,
        borderOnForeground,
        margin,
        clipBehavior,
        child,
        semanticContainer);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (card != null) {
      return card(key, color, shadowColor, surfaceTintColor, elevation, shape,
          borderOnForeground, margin, clipBehavior, child, semanticContainer);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return card(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return card?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (card != null) {
      return card(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CardToJson(
      this,
    );
  }
}

abstract class Card implements Widget {
  const factory Card(
      {final Key? key,
      final Color? color,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final double? elevation,
      final ShapeBorder? shape,
      final bool borderOnForeground,
      final EdgeInsets? margin,
      final Clip? clipBehavior,
      final Widget? child,
      final bool semanticContainer}) = _$Card;

  factory Card.fromJson(Map<String, dynamic> json) = _$Card.fromJson;

  @override
  Key? get key;
  Color? get color;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  double? get elevation;
  ShapeBorder? get shape;
  bool get borderOnForeground;
  EdgeInsets? get margin;
  Clip? get clipBehavior;
  Widget? get child;
  bool get semanticContainer;
  @override
  @JsonKey(ignore: true)
  _$$CardCopyWith<_$Card> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ElevatedButtonCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$ElevatedButtonCopyWith(
          _$ElevatedButton value, $Res Function(_$ElevatedButton) then) =
      __$$ElevatedButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Callback? onPressed,
      Callback? onLongPress,
      bool autofocus,
      Clip clipBehavior,
      Widget child,
      ButtonStyle? style});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onPressed;
  $CallbackCopyWith<$Res>? get onLongPress;
  $WidgetCopyWith<$Res> get child;
  $ButtonStyleCopyWith<$Res>? get style;
}

/// @nodoc
class __$$ElevatedButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$ElevatedButton>
    implements _$$ElevatedButtonCopyWith<$Res> {
  __$$ElevatedButtonCopyWithImpl(
      _$ElevatedButton _value, $Res Function(_$ElevatedButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onPressed = freezed,
    Object? onLongPress = freezed,
    Object? autofocus = null,
    Object? clipBehavior = null,
    Object? child = null,
    Object? style = freezed,
  }) {
    return _then(_$ElevatedButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onLongPress: freezed == onLongPress
          ? _value.onLongPress
          : onLongPress // ignore: cast_nullable_to_non_nullable
              as Callback?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
      style: freezed == style
          ? _value.style
          : style // ignore: cast_nullable_to_non_nullable
              as ButtonStyle?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onLongPress {
    if (_value.onLongPress == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onLongPress!, (value) {
      return _then(_value.copyWith(onLongPress: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ButtonStyleCopyWith<$Res>? get style {
    if (_value.style == null) {
      return null;
    }

    return $ButtonStyleCopyWith<$Res>(_value.style!, (value) {
      return _then(_value.copyWith(style: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$ElevatedButton implements ElevatedButton {
  const _$ElevatedButton(
      {this.key,
      required this.onPressed,
      this.onLongPress,
      this.autofocus = false,
      this.clipBehavior = Clip.none,
      required this.child,
      this.style,
      final String? $type})
      : $type = $type ?? 'elevatedButton';

  factory _$ElevatedButton.fromJson(Map<String, dynamic> json) =>
      _$$ElevatedButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Callback? onPressed;
  @override
  final Callback? onLongPress;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget child;
  @override
  final ButtonStyle? style;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.elevatedButton(key: $key, onPressed: $onPressed, onLongPress: $onLongPress, autofocus: $autofocus, clipBehavior: $clipBehavior, child: $child, style: $style)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ElevatedButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.onLongPress, onLongPress) ||
                other.onLongPress == onLongPress) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.style, style) || other.style == style));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, key, onPressed, onLongPress,
      autofocus, clipBehavior, child, style);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ElevatedButtonCopyWith<_$ElevatedButton> get copyWith =>
      __$$ElevatedButtonCopyWithImpl<_$ElevatedButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return elevatedButton(
        key, onPressed, onLongPress, autofocus, clipBehavior, child, style);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return elevatedButton?.call(
        key, onPressed, onLongPress, autofocus, clipBehavior, child, style);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (elevatedButton != null) {
      return elevatedButton(
          key, onPressed, onLongPress, autofocus, clipBehavior, child, style);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return elevatedButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return elevatedButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (elevatedButton != null) {
      return elevatedButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ElevatedButtonToJson(
      this,
    );
  }
}

abstract class ElevatedButton implements Widget {
  const factory ElevatedButton(
      {final Key? key,
      required final Callback? onPressed,
      final Callback? onLongPress,
      final bool autofocus,
      final Clip clipBehavior,
      required final Widget child,
      final ButtonStyle? style}) = _$ElevatedButton;

  factory ElevatedButton.fromJson(Map<String, dynamic> json) =
      _$ElevatedButton.fromJson;

  @override
  Key? get key;
  Callback? get onPressed;
  Callback? get onLongPress;
  bool get autofocus;
  Clip get clipBehavior;
  Widget get child;
  ButtonStyle? get style;
  @override
  @JsonKey(ignore: true)
  _$$ElevatedButtonCopyWith<_$ElevatedButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FilledButtonCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$FilledButtonCopyWith(
          _$FilledButton value, $Res Function(_$FilledButton) then) =
      __$$FilledButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Callback? onPressed,
      Callback? onLongPress,
      bool autofocus,
      Clip clipBehavior,
      Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onPressed;
  $CallbackCopyWith<$Res>? get onLongPress;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$FilledButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$FilledButton>
    implements _$$FilledButtonCopyWith<$Res> {
  __$$FilledButtonCopyWithImpl(
      _$FilledButton _value, $Res Function(_$FilledButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onPressed = freezed,
    Object? onLongPress = freezed,
    Object? autofocus = null,
    Object? clipBehavior = null,
    Object? child = null,
  }) {
    return _then(_$FilledButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onLongPress: freezed == onLongPress
          ? _value.onLongPress
          : onLongPress // ignore: cast_nullable_to_non_nullable
              as Callback?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onLongPress {
    if (_value.onLongPress == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onLongPress!, (value) {
      return _then(_value.copyWith(onLongPress: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$FilledButton implements FilledButton {
  const _$FilledButton(
      {this.key,
      required this.onPressed,
      this.onLongPress,
      this.autofocus = false,
      this.clipBehavior = Clip.none,
      required this.child,
      final String? $type})
      : $type = $type ?? 'filledButton';

  factory _$FilledButton.fromJson(Map<String, dynamic> json) =>
      _$$FilledButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Callback? onPressed;
  @override
  final Callback? onLongPress;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.filledButton(key: $key, onPressed: $onPressed, onLongPress: $onLongPress, autofocus: $autofocus, clipBehavior: $clipBehavior, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FilledButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.onLongPress, onLongPress) ||
                other.onLongPress == onLongPress) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, onPressed, onLongPress, autofocus, clipBehavior, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FilledButtonCopyWith<_$FilledButton> get copyWith =>
      __$$FilledButtonCopyWithImpl<_$FilledButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return filledButton(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return filledButton?.call(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (filledButton != null) {
      return filledButton(
          key, onPressed, onLongPress, autofocus, clipBehavior, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return filledButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return filledButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (filledButton != null) {
      return filledButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FilledButtonToJson(
      this,
    );
  }
}

abstract class FilledButton implements Widget {
  const factory FilledButton(
      {final Key? key,
      required final Callback? onPressed,
      final Callback? onLongPress,
      final bool autofocus,
      final Clip clipBehavior,
      required final Widget child}) = _$FilledButton;

  factory FilledButton.fromJson(Map<String, dynamic> json) =
      _$FilledButton.fromJson;

  @override
  Key? get key;
  Callback? get onPressed;
  Callback? get onLongPress;
  bool get autofocus;
  Clip get clipBehavior;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$FilledButtonCopyWith<_$FilledButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FilledTonalButtonCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$FilledTonalButtonCopyWith(
          _$FilledTonalButton value, $Res Function(_$FilledTonalButton) then) =
      __$$FilledTonalButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Callback? onPressed,
      Callback? onLongPress,
      bool autofocus,
      Clip clipBehavior,
      Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onPressed;
  $CallbackCopyWith<$Res>? get onLongPress;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$FilledTonalButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$FilledTonalButton>
    implements _$$FilledTonalButtonCopyWith<$Res> {
  __$$FilledTonalButtonCopyWithImpl(
      _$FilledTonalButton _value, $Res Function(_$FilledTonalButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onPressed = freezed,
    Object? onLongPress = freezed,
    Object? autofocus = null,
    Object? clipBehavior = null,
    Object? child = null,
  }) {
    return _then(_$FilledTonalButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onLongPress: freezed == onLongPress
          ? _value.onLongPress
          : onLongPress // ignore: cast_nullable_to_non_nullable
              as Callback?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onLongPress {
    if (_value.onLongPress == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onLongPress!, (value) {
      return _then(_value.copyWith(onLongPress: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$FilledTonalButton implements FilledTonalButton {
  const _$FilledTonalButton(
      {this.key,
      required this.onPressed,
      this.onLongPress,
      this.autofocus = false,
      this.clipBehavior = Clip.none,
      required this.child,
      final String? $type})
      : $type = $type ?? 'filledTonalButton';

  factory _$FilledTonalButton.fromJson(Map<String, dynamic> json) =>
      _$$FilledTonalButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Callback? onPressed;
  @override
  final Callback? onLongPress;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.filledTonalButton(key: $key, onPressed: $onPressed, onLongPress: $onLongPress, autofocus: $autofocus, clipBehavior: $clipBehavior, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FilledTonalButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.onLongPress, onLongPress) ||
                other.onLongPress == onLongPress) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, onPressed, onLongPress, autofocus, clipBehavior, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FilledTonalButtonCopyWith<_$FilledTonalButton> get copyWith =>
      __$$FilledTonalButtonCopyWithImpl<_$FilledTonalButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return filledTonalButton(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return filledTonalButton?.call(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (filledTonalButton != null) {
      return filledTonalButton(
          key, onPressed, onLongPress, autofocus, clipBehavior, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return filledTonalButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return filledTonalButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (filledTonalButton != null) {
      return filledTonalButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FilledTonalButtonToJson(
      this,
    );
  }
}

abstract class FilledTonalButton implements Widget {
  const factory FilledTonalButton(
      {final Key? key,
      required final Callback? onPressed,
      final Callback? onLongPress,
      final bool autofocus,
      final Clip clipBehavior,
      required final Widget child}) = _$FilledTonalButton;

  factory FilledTonalButton.fromJson(Map<String, dynamic> json) =
      _$FilledTonalButton.fromJson;

  @override
  Key? get key;
  Callback? get onPressed;
  Callback? get onLongPress;
  bool get autofocus;
  Clip get clipBehavior;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$FilledTonalButtonCopyWith<_$FilledTonalButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$OutlinedButtonCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$OutlinedButtonCopyWith(
          _$OutlinedButton value, $Res Function(_$OutlinedButton) then) =
      __$$OutlinedButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Callback? onPressed,
      Callback? onLongPress,
      bool autofocus,
      Clip clipBehavior,
      Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onPressed;
  $CallbackCopyWith<$Res>? get onLongPress;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$OutlinedButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$OutlinedButton>
    implements _$$OutlinedButtonCopyWith<$Res> {
  __$$OutlinedButtonCopyWithImpl(
      _$OutlinedButton _value, $Res Function(_$OutlinedButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onPressed = freezed,
    Object? onLongPress = freezed,
    Object? autofocus = null,
    Object? clipBehavior = null,
    Object? child = null,
  }) {
    return _then(_$OutlinedButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onLongPress: freezed == onLongPress
          ? _value.onLongPress
          : onLongPress // ignore: cast_nullable_to_non_nullable
              as Callback?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onLongPress {
    if (_value.onLongPress == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onLongPress!, (value) {
      return _then(_value.copyWith(onLongPress: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$OutlinedButton implements OutlinedButton {
  const _$OutlinedButton(
      {this.key,
      required this.onPressed,
      this.onLongPress,
      this.autofocus = false,
      this.clipBehavior = Clip.none,
      required this.child,
      final String? $type})
      : $type = $type ?? 'outlinedButton';

  factory _$OutlinedButton.fromJson(Map<String, dynamic> json) =>
      _$$OutlinedButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Callback? onPressed;
  @override
  final Callback? onLongPress;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.outlinedButton(key: $key, onPressed: $onPressed, onLongPress: $onLongPress, autofocus: $autofocus, clipBehavior: $clipBehavior, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$OutlinedButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.onLongPress, onLongPress) ||
                other.onLongPress == onLongPress) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, onPressed, onLongPress, autofocus, clipBehavior, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$OutlinedButtonCopyWith<_$OutlinedButton> get copyWith =>
      __$$OutlinedButtonCopyWithImpl<_$OutlinedButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return outlinedButton(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return outlinedButton?.call(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (outlinedButton != null) {
      return outlinedButton(
          key, onPressed, onLongPress, autofocus, clipBehavior, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return outlinedButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return outlinedButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (outlinedButton != null) {
      return outlinedButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$OutlinedButtonToJson(
      this,
    );
  }
}

abstract class OutlinedButton implements Widget {
  const factory OutlinedButton(
      {final Key? key,
      required final Callback? onPressed,
      final Callback? onLongPress,
      final bool autofocus,
      final Clip clipBehavior,
      required final Widget child}) = _$OutlinedButton;

  factory OutlinedButton.fromJson(Map<String, dynamic> json) =
      _$OutlinedButton.fromJson;

  @override
  Key? get key;
  Callback? get onPressed;
  Callback? get onLongPress;
  bool get autofocus;
  Clip get clipBehavior;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$OutlinedButtonCopyWith<_$OutlinedButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TextButtonCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$TextButtonCopyWith(
          _$TextButton value, $Res Function(_$TextButton) then) =
      __$$TextButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Callback? onPressed,
      Callback? onLongPress,
      bool autofocus,
      Clip clipBehavior,
      Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onPressed;
  $CallbackCopyWith<$Res>? get onLongPress;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$TextButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$TextButton>
    implements _$$TextButtonCopyWith<$Res> {
  __$$TextButtonCopyWithImpl(
      _$TextButton _value, $Res Function(_$TextButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onPressed = freezed,
    Object? onLongPress = freezed,
    Object? autofocus = null,
    Object? clipBehavior = null,
    Object? child = null,
  }) {
    return _then(_$TextButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onLongPress: freezed == onLongPress
          ? _value.onLongPress
          : onLongPress // ignore: cast_nullable_to_non_nullable
              as Callback?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onLongPress {
    if (_value.onLongPress == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onLongPress!, (value) {
      return _then(_value.copyWith(onLongPress: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$TextButton implements TextButton {
  const _$TextButton(
      {this.key,
      required this.onPressed,
      this.onLongPress,
      this.autofocus = false,
      this.clipBehavior = Clip.none,
      required this.child,
      final String? $type})
      : $type = $type ?? 'textButton';

  factory _$TextButton.fromJson(Map<String, dynamic> json) =>
      _$$TextButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Callback? onPressed;
  @override
  final Callback? onLongPress;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.textButton(key: $key, onPressed: $onPressed, onLongPress: $onLongPress, autofocus: $autofocus, clipBehavior: $clipBehavior, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TextButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.onLongPress, onLongPress) ||
                other.onLongPress == onLongPress) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, onPressed, onLongPress, autofocus, clipBehavior, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TextButtonCopyWith<_$TextButton> get copyWith =>
      __$$TextButtonCopyWithImpl<_$TextButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return textButton(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return textButton?.call(
        key, onPressed, onLongPress, autofocus, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (textButton != null) {
      return textButton(
          key, onPressed, onLongPress, autofocus, clipBehavior, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return textButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return textButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (textButton != null) {
      return textButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TextButtonToJson(
      this,
    );
  }
}

abstract class TextButton implements Widget {
  const factory TextButton(
      {final Key? key,
      required final Callback? onPressed,
      final Callback? onLongPress,
      final bool autofocus,
      final Clip clipBehavior,
      required final Widget child}) = _$TextButton;

  factory TextButton.fromJson(Map<String, dynamic> json) =
      _$TextButton.fromJson;

  @override
  Key? get key;
  Callback? get onPressed;
  Callback? get onLongPress;
  bool get autofocus;
  Clip get clipBehavior;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$TextButtonCopyWith<_$TextButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$IconButtonCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$IconButtonCopyWith(
          _$IconButton value, $Res Function(_$IconButton) then) =
      __$$IconButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      double? iconSize,
      VisualDensity? visualDensity,
      EdgeInsets? padding,
      Alignment? alignment,
      double? splashRadius,
      Color? color,
      Color? focusColor,
      Color? hoverColor,
      Color? highlightColor,
      Color? splashColor,
      Color? disabledColor,
      Callback onPressed,
      MouseCursor? mouseCursor,
      bool autofocus,
      String? tooltip,
      bool? enableFeedback,
      BoxConstraints? constraints,
      bool? isSelected,
      Widget? selectedIcon,
      Widget icon});

  @override
  $KeyCopyWith<$Res>? get key;
  $VisualDensityCopyWith<$Res>? get visualDensity;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $AlignmentCopyWith<$Res>? get alignment;
  $ColorCopyWith<$Res>? get color;
  $ColorCopyWith<$Res>? get focusColor;
  $ColorCopyWith<$Res>? get hoverColor;
  $ColorCopyWith<$Res>? get highlightColor;
  $ColorCopyWith<$Res>? get splashColor;
  $ColorCopyWith<$Res>? get disabledColor;
  $CallbackCopyWith<$Res> get onPressed;
  $MouseCursorCopyWith<$Res>? get mouseCursor;
  $BoxConstraintsCopyWith<$Res>? get constraints;
  $WidgetCopyWith<$Res>? get selectedIcon;
  $WidgetCopyWith<$Res> get icon;
}

/// @nodoc
class __$$IconButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$IconButton>
    implements _$$IconButtonCopyWith<$Res> {
  __$$IconButtonCopyWithImpl(
      _$IconButton _value, $Res Function(_$IconButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? iconSize = freezed,
    Object? visualDensity = freezed,
    Object? padding = freezed,
    Object? alignment = freezed,
    Object? splashRadius = freezed,
    Object? color = freezed,
    Object? focusColor = freezed,
    Object? hoverColor = freezed,
    Object? highlightColor = freezed,
    Object? splashColor = freezed,
    Object? disabledColor = freezed,
    Object? onPressed = null,
    Object? mouseCursor = freezed,
    Object? autofocus = null,
    Object? tooltip = freezed,
    Object? enableFeedback = freezed,
    Object? constraints = freezed,
    Object? isSelected = freezed,
    Object? selectedIcon = freezed,
    Object? icon = null,
  }) {
    return _then(_$IconButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      iconSize: freezed == iconSize
          ? _value.iconSize
          : iconSize // ignore: cast_nullable_to_non_nullable
              as double?,
      visualDensity: freezed == visualDensity
          ? _value.visualDensity
          : visualDensity // ignore: cast_nullable_to_non_nullable
              as VisualDensity?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      alignment: freezed == alignment
          ? _value.alignment
          : alignment // ignore: cast_nullable_to_non_nullable
              as Alignment?,
      splashRadius: freezed == splashRadius
          ? _value.splashRadius
          : splashRadius // ignore: cast_nullable_to_non_nullable
              as double?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      focusColor: freezed == focusColor
          ? _value.focusColor
          : focusColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      hoverColor: freezed == hoverColor
          ? _value.hoverColor
          : hoverColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      highlightColor: freezed == highlightColor
          ? _value.highlightColor
          : highlightColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      splashColor: freezed == splashColor
          ? _value.splashColor
          : splashColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      disabledColor: freezed == disabledColor
          ? _value.disabledColor
          : disabledColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      onPressed: null == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback,
      mouseCursor: freezed == mouseCursor
          ? _value.mouseCursor
          : mouseCursor // ignore: cast_nullable_to_non_nullable
              as MouseCursor?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      enableFeedback: freezed == enableFeedback
          ? _value.enableFeedback
          : enableFeedback // ignore: cast_nullable_to_non_nullable
              as bool?,
      constraints: freezed == constraints
          ? _value.constraints
          : constraints // ignore: cast_nullable_to_non_nullable
              as BoxConstraints?,
      isSelected: freezed == isSelected
          ? _value.isSelected
          : isSelected // ignore: cast_nullable_to_non_nullable
              as bool?,
      selectedIcon: freezed == selectedIcon
          ? _value.selectedIcon
          : selectedIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      icon: null == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $VisualDensityCopyWith<$Res>? get visualDensity {
    if (_value.visualDensity == null) {
      return null;
    }

    return $VisualDensityCopyWith<$Res>(_value.visualDensity!, (value) {
      return _then(_value.copyWith(visualDensity: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res>? get alignment {
    if (_value.alignment == null) {
      return null;
    }

    return $AlignmentCopyWith<$Res>(_value.alignment!, (value) {
      return _then(_value.copyWith(alignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get focusColor {
    if (_value.focusColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.focusColor!, (value) {
      return _then(_value.copyWith(focusColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get hoverColor {
    if (_value.hoverColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.hoverColor!, (value) {
      return _then(_value.copyWith(hoverColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get highlightColor {
    if (_value.highlightColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.highlightColor!, (value) {
      return _then(_value.copyWith(highlightColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get splashColor {
    if (_value.splashColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.splashColor!, (value) {
      return _then(_value.copyWith(splashColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get disabledColor {
    if (_value.disabledColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.disabledColor!, (value) {
      return _then(_value.copyWith(disabledColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res> get onPressed {
    return $CallbackCopyWith<$Res>(_value.onPressed, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MouseCursorCopyWith<$Res>? get mouseCursor {
    if (_value.mouseCursor == null) {
      return null;
    }

    return $MouseCursorCopyWith<$Res>(_value.mouseCursor!, (value) {
      return _then(_value.copyWith(mouseCursor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BoxConstraintsCopyWith<$Res>? get constraints {
    if (_value.constraints == null) {
      return null;
    }

    return $BoxConstraintsCopyWith<$Res>(_value.constraints!, (value) {
      return _then(_value.copyWith(constraints: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get selectedIcon {
    if (_value.selectedIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.selectedIcon!, (value) {
      return _then(_value.copyWith(selectedIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get icon {
    return $WidgetCopyWith<$Res>(_value.icon, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$IconButton implements IconButton {
  const _$IconButton(
      {this.key,
      this.iconSize,
      this.visualDensity,
      this.padding,
      this.alignment,
      this.splashRadius,
      this.color,
      this.focusColor,
      this.hoverColor,
      this.highlightColor,
      this.splashColor,
      this.disabledColor,
      required this.onPressed,
      this.mouseCursor,
      this.autofocus = false,
      this.tooltip,
      this.enableFeedback,
      this.constraints,
      this.isSelected,
      this.selectedIcon,
      required this.icon,
      final String? $type})
      : $type = $type ?? 'iconButton';

  factory _$IconButton.fromJson(Map<String, dynamic> json) =>
      _$$IconButtonFromJson(json);

  @override
  final Key? key;
  @override
  final double? iconSize;
  @override
  final VisualDensity? visualDensity;
  @override
  final EdgeInsets? padding;
  @override
  final Alignment? alignment;
  @override
  final double? splashRadius;
  @override
  final Color? color;
  @override
  final Color? focusColor;
  @override
  final Color? hoverColor;
  @override
  final Color? highlightColor;
  @override
  final Color? splashColor;
  @override
  final Color? disabledColor;
  @override
  final Callback onPressed;
  @override
  final MouseCursor? mouseCursor;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final String? tooltip;
  @override
  final bool? enableFeedback;
  @override
  final BoxConstraints? constraints;
  @override
  final bool? isSelected;
  @override
  final Widget? selectedIcon;
  @override
  final Widget icon;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.iconButton(key: $key, iconSize: $iconSize, visualDensity: $visualDensity, padding: $padding, alignment: $alignment, splashRadius: $splashRadius, color: $color, focusColor: $focusColor, hoverColor: $hoverColor, highlightColor: $highlightColor, splashColor: $splashColor, disabledColor: $disabledColor, onPressed: $onPressed, mouseCursor: $mouseCursor, autofocus: $autofocus, tooltip: $tooltip, enableFeedback: $enableFeedback, constraints: $constraints, isSelected: $isSelected, selectedIcon: $selectedIcon, icon: $icon)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$IconButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.iconSize, iconSize) ||
                other.iconSize == iconSize) &&
            (identical(other.visualDensity, visualDensity) ||
                other.visualDensity == visualDensity) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.alignment, alignment) ||
                other.alignment == alignment) &&
            (identical(other.splashRadius, splashRadius) ||
                other.splashRadius == splashRadius) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.focusColor, focusColor) ||
                other.focusColor == focusColor) &&
            (identical(other.hoverColor, hoverColor) ||
                other.hoverColor == hoverColor) &&
            (identical(other.highlightColor, highlightColor) ||
                other.highlightColor == highlightColor) &&
            (identical(other.splashColor, splashColor) ||
                other.splashColor == splashColor) &&
            (identical(other.disabledColor, disabledColor) ||
                other.disabledColor == disabledColor) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.mouseCursor, mouseCursor) ||
                other.mouseCursor == mouseCursor) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.enableFeedback, enableFeedback) ||
                other.enableFeedback == enableFeedback) &&
            (identical(other.constraints, constraints) ||
                other.constraints == constraints) &&
            (identical(other.isSelected, isSelected) ||
                other.isSelected == isSelected) &&
            (identical(other.selectedIcon, selectedIcon) ||
                other.selectedIcon == selectedIcon) &&
            (identical(other.icon, icon) || other.icon == icon));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        iconSize,
        visualDensity,
        padding,
        alignment,
        splashRadius,
        color,
        focusColor,
        hoverColor,
        highlightColor,
        splashColor,
        disabledColor,
        onPressed,
        mouseCursor,
        autofocus,
        tooltip,
        enableFeedback,
        constraints,
        isSelected,
        selectedIcon,
        icon
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$IconButtonCopyWith<_$IconButton> get copyWith =>
      __$$IconButtonCopyWithImpl<_$IconButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return iconButton(
        key,
        iconSize,
        visualDensity,
        this.padding,
        alignment,
        splashRadius,
        color,
        focusColor,
        hoverColor,
        highlightColor,
        splashColor,
        disabledColor,
        onPressed,
        mouseCursor,
        autofocus,
        tooltip,
        enableFeedback,
        constraints,
        isSelected,
        selectedIcon,
        this.icon);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return iconButton?.call(
        key,
        iconSize,
        visualDensity,
        this.padding,
        alignment,
        splashRadius,
        color,
        focusColor,
        hoverColor,
        highlightColor,
        splashColor,
        disabledColor,
        onPressed,
        mouseCursor,
        autofocus,
        tooltip,
        enableFeedback,
        constraints,
        isSelected,
        selectedIcon,
        this.icon);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (iconButton != null) {
      return iconButton(
          key,
          iconSize,
          visualDensity,
          this.padding,
          alignment,
          splashRadius,
          color,
          focusColor,
          hoverColor,
          highlightColor,
          splashColor,
          disabledColor,
          onPressed,
          mouseCursor,
          autofocus,
          tooltip,
          enableFeedback,
          constraints,
          isSelected,
          selectedIcon,
          this.icon);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return iconButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return iconButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (iconButton != null) {
      return iconButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$IconButtonToJson(
      this,
    );
  }
}

abstract class IconButton implements Widget {
  const factory IconButton(
      {final Key? key,
      final double? iconSize,
      final VisualDensity? visualDensity,
      final EdgeInsets? padding,
      final Alignment? alignment,
      final double? splashRadius,
      final Color? color,
      final Color? focusColor,
      final Color? hoverColor,
      final Color? highlightColor,
      final Color? splashColor,
      final Color? disabledColor,
      required final Callback onPressed,
      final MouseCursor? mouseCursor,
      final bool autofocus,
      final String? tooltip,
      final bool? enableFeedback,
      final BoxConstraints? constraints,
      final bool? isSelected,
      final Widget? selectedIcon,
      required final Widget icon}) = _$IconButton;

  factory IconButton.fromJson(Map<String, dynamic> json) =
      _$IconButton.fromJson;

  @override
  Key? get key;
  double? get iconSize;
  VisualDensity? get visualDensity;
  EdgeInsets? get padding;
  Alignment? get alignment;
  double? get splashRadius;
  Color? get color;
  Color? get focusColor;
  Color? get hoverColor;
  Color? get highlightColor;
  Color? get splashColor;
  Color? get disabledColor;
  Callback get onPressed;
  MouseCursor? get mouseCursor;
  bool get autofocus;
  String? get tooltip;
  bool? get enableFeedback;
  BoxConstraints? get constraints;
  bool? get isSelected;
  Widget? get selectedIcon;
  Widget get icon;
  @override
  @JsonKey(ignore: true)
  _$$IconButtonCopyWith<_$IconButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ScaffoldCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$ScaffoldCopyWith(
          _$Scaffold value, $Res Function(_$Scaffold) then) =
      __$$ScaffoldCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      PreferredSizeWidget? appBar,
      Widget? body,
      Widget? floatingActionButton,
      FloatingActionButtonLocation? floatingActionButtonLocation,
      List<Widget>? persistentFooterButtons,
      Alignment persistentFooterAlignment,
      Widget? drawer,
      Widget? endDrawer,
      Widget? bottomNavigationBar,
      Widget? bottomSheet,
      Color? backgroundColor,
      bool? resizeToAvoidBottomInset,
      bool primary,
      bool extendBody,
      bool extendBodyBehindAppBar,
      Color? drawerScrimColor,
      double? drawerEdgeDragWidth,
      bool drawerEnableOpenDragGesture,
      bool endDrawerEnableOpenDragGesture,
      String? restorationId});

  @override
  $KeyCopyWith<$Res>? get key;
  $PreferredSizeWidgetCopyWith<$Res>? get appBar;
  $WidgetCopyWith<$Res>? get body;
  $WidgetCopyWith<$Res>? get floatingActionButton;
  $FloatingActionButtonLocationCopyWith<$Res>? get floatingActionButtonLocation;
  $AlignmentCopyWith<$Res> get persistentFooterAlignment;
  $WidgetCopyWith<$Res>? get drawer;
  $WidgetCopyWith<$Res>? get endDrawer;
  $WidgetCopyWith<$Res>? get bottomNavigationBar;
  $WidgetCopyWith<$Res>? get bottomSheet;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get drawerScrimColor;
}

/// @nodoc
class __$$ScaffoldCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$Scaffold>
    implements _$$ScaffoldCopyWith<$Res> {
  __$$ScaffoldCopyWithImpl(_$Scaffold _value, $Res Function(_$Scaffold) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? appBar = freezed,
    Object? body = freezed,
    Object? floatingActionButton = freezed,
    Object? floatingActionButtonLocation = freezed,
    Object? persistentFooterButtons = freezed,
    Object? persistentFooterAlignment = null,
    Object? drawer = freezed,
    Object? endDrawer = freezed,
    Object? bottomNavigationBar = freezed,
    Object? bottomSheet = freezed,
    Object? backgroundColor = freezed,
    Object? resizeToAvoidBottomInset = freezed,
    Object? primary = null,
    Object? extendBody = null,
    Object? extendBodyBehindAppBar = null,
    Object? drawerScrimColor = freezed,
    Object? drawerEdgeDragWidth = freezed,
    Object? drawerEnableOpenDragGesture = null,
    Object? endDrawerEnableOpenDragGesture = null,
    Object? restorationId = freezed,
  }) {
    return _then(_$Scaffold(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      appBar: freezed == appBar
          ? _value.appBar
          : appBar // ignore: cast_nullable_to_non_nullable
              as PreferredSizeWidget?,
      body: freezed == body
          ? _value.body
          : body // ignore: cast_nullable_to_non_nullable
              as Widget?,
      floatingActionButton: freezed == floatingActionButton
          ? _value.floatingActionButton
          : floatingActionButton // ignore: cast_nullable_to_non_nullable
              as Widget?,
      floatingActionButtonLocation: freezed == floatingActionButtonLocation
          ? _value.floatingActionButtonLocation
          : floatingActionButtonLocation // ignore: cast_nullable_to_non_nullable
              as FloatingActionButtonLocation?,
      persistentFooterButtons: freezed == persistentFooterButtons
          ? _value._persistentFooterButtons
          : persistentFooterButtons // ignore: cast_nullable_to_non_nullable
              as List<Widget>?,
      persistentFooterAlignment: null == persistentFooterAlignment
          ? _value.persistentFooterAlignment
          : persistentFooterAlignment // ignore: cast_nullable_to_non_nullable
              as Alignment,
      drawer: freezed == drawer
          ? _value.drawer
          : drawer // ignore: cast_nullable_to_non_nullable
              as Widget?,
      endDrawer: freezed == endDrawer
          ? _value.endDrawer
          : endDrawer // ignore: cast_nullable_to_non_nullable
              as Widget?,
      bottomNavigationBar: freezed == bottomNavigationBar
          ? _value.bottomNavigationBar
          : bottomNavigationBar // ignore: cast_nullable_to_non_nullable
              as Widget?,
      bottomSheet: freezed == bottomSheet
          ? _value.bottomSheet
          : bottomSheet // ignore: cast_nullable_to_non_nullable
              as Widget?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      resizeToAvoidBottomInset: freezed == resizeToAvoidBottomInset
          ? _value.resizeToAvoidBottomInset
          : resizeToAvoidBottomInset // ignore: cast_nullable_to_non_nullable
              as bool?,
      primary: null == primary
          ? _value.primary
          : primary // ignore: cast_nullable_to_non_nullable
              as bool,
      extendBody: null == extendBody
          ? _value.extendBody
          : extendBody // ignore: cast_nullable_to_non_nullable
              as bool,
      extendBodyBehindAppBar: null == extendBodyBehindAppBar
          ? _value.extendBodyBehindAppBar
          : extendBodyBehindAppBar // ignore: cast_nullable_to_non_nullable
              as bool,
      drawerScrimColor: freezed == drawerScrimColor
          ? _value.drawerScrimColor
          : drawerScrimColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      drawerEdgeDragWidth: freezed == drawerEdgeDragWidth
          ? _value.drawerEdgeDragWidth
          : drawerEdgeDragWidth // ignore: cast_nullable_to_non_nullable
              as double?,
      drawerEnableOpenDragGesture: null == drawerEnableOpenDragGesture
          ? _value.drawerEnableOpenDragGesture
          : drawerEnableOpenDragGesture // ignore: cast_nullable_to_non_nullable
              as bool,
      endDrawerEnableOpenDragGesture: null == endDrawerEnableOpenDragGesture
          ? _value.endDrawerEnableOpenDragGesture
          : endDrawerEnableOpenDragGesture // ignore: cast_nullable_to_non_nullable
              as bool,
      restorationId: freezed == restorationId
          ? _value.restorationId
          : restorationId // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $PreferredSizeWidgetCopyWith<$Res>? get appBar {
    if (_value.appBar == null) {
      return null;
    }

    return $PreferredSizeWidgetCopyWith<$Res>(_value.appBar!, (value) {
      return _then(_value.copyWith(appBar: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get body {
    if (_value.body == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.body!, (value) {
      return _then(_value.copyWith(body: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get floatingActionButton {
    if (_value.floatingActionButton == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.floatingActionButton!, (value) {
      return _then(_value.copyWith(floatingActionButton: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $FloatingActionButtonLocationCopyWith<$Res>?
      get floatingActionButtonLocation {
    if (_value.floatingActionButtonLocation == null) {
      return null;
    }

    return $FloatingActionButtonLocationCopyWith<$Res>(
        _value.floatingActionButtonLocation!, (value) {
      return _then(_value.copyWith(floatingActionButtonLocation: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res> get persistentFooterAlignment {
    return $AlignmentCopyWith<$Res>(_value.persistentFooterAlignment, (value) {
      return _then(_value.copyWith(persistentFooterAlignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get drawer {
    if (_value.drawer == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.drawer!, (value) {
      return _then(_value.copyWith(drawer: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get endDrawer {
    if (_value.endDrawer == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.endDrawer!, (value) {
      return _then(_value.copyWith(endDrawer: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get bottomNavigationBar {
    if (_value.bottomNavigationBar == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.bottomNavigationBar!, (value) {
      return _then(_value.copyWith(bottomNavigationBar: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get bottomSheet {
    if (_value.bottomSheet == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.bottomSheet!, (value) {
      return _then(_value.copyWith(bottomSheet: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get drawerScrimColor {
    if (_value.drawerScrimColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.drawerScrimColor!, (value) {
      return _then(_value.copyWith(drawerScrimColor: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Scaffold implements Scaffold {
  const _$Scaffold(
      {this.key,
      this.appBar,
      this.body,
      this.floatingActionButton,
      this.floatingActionButtonLocation,
      final List<Widget>? persistentFooterButtons,
      this.persistentFooterAlignment = Alignment.centerRight,
      this.drawer,
      this.endDrawer,
      this.bottomNavigationBar,
      this.bottomSheet,
      this.backgroundColor,
      this.resizeToAvoidBottomInset,
      this.primary = true,
      this.extendBody = false,
      this.extendBodyBehindAppBar = false,
      this.drawerScrimColor,
      this.drawerEdgeDragWidth,
      this.drawerEnableOpenDragGesture = true,
      this.endDrawerEnableOpenDragGesture = true,
      this.restorationId,
      final String? $type})
      : _persistentFooterButtons = persistentFooterButtons,
        $type = $type ?? 'scaffold';

  factory _$Scaffold.fromJson(Map<String, dynamic> json) =>
      _$$ScaffoldFromJson(json);

  @override
  final Key? key;
  @override
  final PreferredSizeWidget? appBar;
  @override
  final Widget? body;
  @override
  final Widget? floatingActionButton;
  @override
  final FloatingActionButtonLocation? floatingActionButtonLocation;
  final List<Widget>? _persistentFooterButtons;
  @override
  List<Widget>? get persistentFooterButtons {
    final value = _persistentFooterButtons;
    if (value == null) return null;
    if (_persistentFooterButtons is EqualUnmodifiableListView)
      return _persistentFooterButtons;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  @JsonKey()
  final Alignment persistentFooterAlignment;
  @override
  final Widget? drawer;
  @override
  final Widget? endDrawer;
  @override
  final Widget? bottomNavigationBar;
  @override
  final Widget? bottomSheet;
  @override
  final Color? backgroundColor;
  @override
  final bool? resizeToAvoidBottomInset;
  @override
  @JsonKey()
  final bool primary;
  @override
  @JsonKey()
  final bool extendBody;
  @override
  @JsonKey()
  final bool extendBodyBehindAppBar;
  @override
  final Color? drawerScrimColor;
  @override
  final double? drawerEdgeDragWidth;
  @override
  @JsonKey()
  final bool drawerEnableOpenDragGesture;
  @override
  @JsonKey()
  final bool endDrawerEnableOpenDragGesture;
  @override
  final String? restorationId;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.scaffold(key: $key, appBar: $appBar, body: $body, floatingActionButton: $floatingActionButton, floatingActionButtonLocation: $floatingActionButtonLocation, persistentFooterButtons: $persistentFooterButtons, persistentFooterAlignment: $persistentFooterAlignment, drawer: $drawer, endDrawer: $endDrawer, bottomNavigationBar: $bottomNavigationBar, bottomSheet: $bottomSheet, backgroundColor: $backgroundColor, resizeToAvoidBottomInset: $resizeToAvoidBottomInset, primary: $primary, extendBody: $extendBody, extendBodyBehindAppBar: $extendBodyBehindAppBar, drawerScrimColor: $drawerScrimColor, drawerEdgeDragWidth: $drawerEdgeDragWidth, drawerEnableOpenDragGesture: $drawerEnableOpenDragGesture, endDrawerEnableOpenDragGesture: $endDrawerEnableOpenDragGesture, restorationId: $restorationId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Scaffold &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.appBar, appBar) || other.appBar == appBar) &&
            (identical(other.body, body) || other.body == body) &&
            (identical(other.floatingActionButton, floatingActionButton) ||
                other.floatingActionButton == floatingActionButton) &&
            (identical(other.floatingActionButtonLocation,
                    floatingActionButtonLocation) ||
                other.floatingActionButtonLocation ==
                    floatingActionButtonLocation) &&
            const DeepCollectionEquality().equals(
                other._persistentFooterButtons, _persistentFooterButtons) &&
            (identical(other.persistentFooterAlignment, persistentFooterAlignment) ||
                other.persistentFooterAlignment == persistentFooterAlignment) &&
            (identical(other.drawer, drawer) || other.drawer == drawer) &&
            (identical(other.endDrawer, endDrawer) ||
                other.endDrawer == endDrawer) &&
            (identical(other.bottomNavigationBar, bottomNavigationBar) ||
                other.bottomNavigationBar == bottomNavigationBar) &&
            (identical(other.bottomSheet, bottomSheet) ||
                other.bottomSheet == bottomSheet) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.resizeToAvoidBottomInset, resizeToAvoidBottomInset) ||
                other.resizeToAvoidBottomInset == resizeToAvoidBottomInset) &&
            (identical(other.primary, primary) || other.primary == primary) &&
            (identical(other.extendBody, extendBody) ||
                other.extendBody == extendBody) &&
            (identical(other.extendBodyBehindAppBar, extendBodyBehindAppBar) ||
                other.extendBodyBehindAppBar == extendBodyBehindAppBar) &&
            (identical(other.drawerScrimColor, drawerScrimColor) ||
                other.drawerScrimColor == drawerScrimColor) &&
            (identical(other.drawerEdgeDragWidth, drawerEdgeDragWidth) ||
                other.drawerEdgeDragWidth == drawerEdgeDragWidth) &&
            (identical(other.drawerEnableOpenDragGesture, drawerEnableOpenDragGesture) ||
                other.drawerEnableOpenDragGesture ==
                    drawerEnableOpenDragGesture) &&
            (identical(other.endDrawerEnableOpenDragGesture,
                    endDrawerEnableOpenDragGesture) ||
                other.endDrawerEnableOpenDragGesture ==
                    endDrawerEnableOpenDragGesture) &&
            (identical(other.restorationId, restorationId) ||
                other.restorationId == restorationId));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        appBar,
        body,
        floatingActionButton,
        floatingActionButtonLocation,
        const DeepCollectionEquality().hash(_persistentFooterButtons),
        persistentFooterAlignment,
        drawer,
        endDrawer,
        bottomNavigationBar,
        bottomSheet,
        backgroundColor,
        resizeToAvoidBottomInset,
        primary,
        extendBody,
        extendBodyBehindAppBar,
        drawerScrimColor,
        drawerEdgeDragWidth,
        drawerEnableOpenDragGesture,
        endDrawerEnableOpenDragGesture,
        restorationId
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ScaffoldCopyWith<_$Scaffold> get copyWith =>
      __$$ScaffoldCopyWithImpl<_$Scaffold>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return scaffold(
        key,
        appBar,
        body,
        this.floatingActionButton,
        floatingActionButtonLocation,
        persistentFooterButtons,
        persistentFooterAlignment,
        drawer,
        endDrawer,
        bottomNavigationBar,
        bottomSheet,
        backgroundColor,
        resizeToAvoidBottomInset,
        primary,
        extendBody,
        extendBodyBehindAppBar,
        drawerScrimColor,
        drawerEdgeDragWidth,
        drawerEnableOpenDragGesture,
        endDrawerEnableOpenDragGesture,
        restorationId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return scaffold?.call(
        key,
        appBar,
        body,
        this.floatingActionButton,
        floatingActionButtonLocation,
        persistentFooterButtons,
        persistentFooterAlignment,
        drawer,
        endDrawer,
        bottomNavigationBar,
        bottomSheet,
        backgroundColor,
        resizeToAvoidBottomInset,
        primary,
        extendBody,
        extendBodyBehindAppBar,
        drawerScrimColor,
        drawerEdgeDragWidth,
        drawerEnableOpenDragGesture,
        endDrawerEnableOpenDragGesture,
        restorationId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (scaffold != null) {
      return scaffold(
          key,
          appBar,
          body,
          this.floatingActionButton,
          floatingActionButtonLocation,
          persistentFooterButtons,
          persistentFooterAlignment,
          drawer,
          endDrawer,
          bottomNavigationBar,
          bottomSheet,
          backgroundColor,
          resizeToAvoidBottomInset,
          primary,
          extendBody,
          extendBodyBehindAppBar,
          drawerScrimColor,
          drawerEdgeDragWidth,
          drawerEnableOpenDragGesture,
          endDrawerEnableOpenDragGesture,
          restorationId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return scaffold(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return scaffold?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (scaffold != null) {
      return scaffold(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ScaffoldToJson(
      this,
    );
  }
}

abstract class Scaffold implements Widget {
  const factory Scaffold(
      {final Key? key,
      final PreferredSizeWidget? appBar,
      final Widget? body,
      final Widget? floatingActionButton,
      final FloatingActionButtonLocation? floatingActionButtonLocation,
      final List<Widget>? persistentFooterButtons,
      final Alignment persistentFooterAlignment,
      final Widget? drawer,
      final Widget? endDrawer,
      final Widget? bottomNavigationBar,
      final Widget? bottomSheet,
      final Color? backgroundColor,
      final bool? resizeToAvoidBottomInset,
      final bool primary,
      final bool extendBody,
      final bool extendBodyBehindAppBar,
      final Color? drawerScrimColor,
      final double? drawerEdgeDragWidth,
      final bool drawerEnableOpenDragGesture,
      final bool endDrawerEnableOpenDragGesture,
      final String? restorationId}) = _$Scaffold;

  factory Scaffold.fromJson(Map<String, dynamic> json) = _$Scaffold.fromJson;

  @override
  Key? get key;
  PreferredSizeWidget? get appBar;
  Widget? get body;
  Widget? get floatingActionButton;
  FloatingActionButtonLocation? get floatingActionButtonLocation;
  List<Widget>? get persistentFooterButtons;
  Alignment get persistentFooterAlignment;
  Widget? get drawer;
  Widget? get endDrawer;
  Widget? get bottomNavigationBar;
  Widget? get bottomSheet;
  Color? get backgroundColor;
  bool? get resizeToAvoidBottomInset;
  bool get primary;
  bool get extendBody;
  bool get extendBodyBehindAppBar;
  Color? get drawerScrimColor;
  double? get drawerEdgeDragWidth;
  bool get drawerEnableOpenDragGesture;
  bool get endDrawerEnableOpenDragGesture;
  String? get restorationId;
  @override
  @JsonKey(ignore: true)
  _$$ScaffoldCopyWith<_$Scaffold> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FloatingActionButtonCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$FloatingActionButtonCopyWith(_$FloatingActionButton value,
          $Res Function(_$FloatingActionButton) then) =
      __$$FloatingActionButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget? child,
      String? tooltip,
      Color? foregroundColor,
      Color? backgroundColor,
      Color? focusColor,
      Color? hoverColor,
      Color? splashColor,
      double? elevation,
      double? focusElevation,
      double? hoverElevation,
      double? highlightElevation,
      double? disabledElevation,
      Callback? onPressed,
      MouseCursor? mouseCursor,
      bool mini,
      ShapeBorder? shape,
      Clip clipBehavior,
      bool autofocus,
      MaterialTapTargetSize? materialTapTargetSize,
      bool isExtended,
      bool? enableFeedback});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get child;
  $ColorCopyWith<$Res>? get foregroundColor;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get focusColor;
  $ColorCopyWith<$Res>? get hoverColor;
  $ColorCopyWith<$Res>? get splashColor;
  $CallbackCopyWith<$Res>? get onPressed;
  $MouseCursorCopyWith<$Res>? get mouseCursor;
  $ShapeBorderCopyWith<$Res>? get shape;
}

/// @nodoc
class __$$FloatingActionButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$FloatingActionButton>
    implements _$$FloatingActionButtonCopyWith<$Res> {
  __$$FloatingActionButtonCopyWithImpl(_$FloatingActionButton _value,
      $Res Function(_$FloatingActionButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? child = freezed,
    Object? tooltip = freezed,
    Object? foregroundColor = freezed,
    Object? backgroundColor = freezed,
    Object? focusColor = freezed,
    Object? hoverColor = freezed,
    Object? splashColor = freezed,
    Object? elevation = freezed,
    Object? focusElevation = freezed,
    Object? hoverElevation = freezed,
    Object? highlightElevation = freezed,
    Object? disabledElevation = freezed,
    Object? onPressed = freezed,
    Object? mouseCursor = freezed,
    Object? mini = null,
    Object? shape = freezed,
    Object? clipBehavior = null,
    Object? autofocus = null,
    Object? materialTapTargetSize = freezed,
    Object? isExtended = null,
    Object? enableFeedback = freezed,
  }) {
    return _then(_$FloatingActionButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      foregroundColor: freezed == foregroundColor
          ? _value.foregroundColor
          : foregroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      focusColor: freezed == focusColor
          ? _value.focusColor
          : focusColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      hoverColor: freezed == hoverColor
          ? _value.hoverColor
          : hoverColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      splashColor: freezed == splashColor
          ? _value.splashColor
          : splashColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      focusElevation: freezed == focusElevation
          ? _value.focusElevation
          : focusElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      hoverElevation: freezed == hoverElevation
          ? _value.hoverElevation
          : hoverElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      highlightElevation: freezed == highlightElevation
          ? _value.highlightElevation
          : highlightElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      disabledElevation: freezed == disabledElevation
          ? _value.disabledElevation
          : disabledElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      mouseCursor: freezed == mouseCursor
          ? _value.mouseCursor
          : mouseCursor // ignore: cast_nullable_to_non_nullable
              as MouseCursor?,
      mini: null == mini
          ? _value.mini
          : mini // ignore: cast_nullable_to_non_nullable
              as bool,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      isExtended: null == isExtended
          ? _value.isExtended
          : isExtended // ignore: cast_nullable_to_non_nullable
              as bool,
      enableFeedback: freezed == enableFeedback
          ? _value.enableFeedback
          : enableFeedback // ignore: cast_nullable_to_non_nullable
              as bool?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get foregroundColor {
    if (_value.foregroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.foregroundColor!, (value) {
      return _then(_value.copyWith(foregroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get focusColor {
    if (_value.focusColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.focusColor!, (value) {
      return _then(_value.copyWith(focusColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get hoverColor {
    if (_value.hoverColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.hoverColor!, (value) {
      return _then(_value.copyWith(hoverColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get splashColor {
    if (_value.splashColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.splashColor!, (value) {
      return _then(_value.copyWith(splashColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MouseCursorCopyWith<$Res>? get mouseCursor {
    if (_value.mouseCursor == null) {
      return null;
    }

    return $MouseCursorCopyWith<$Res>(_value.mouseCursor!, (value) {
      return _then(_value.copyWith(mouseCursor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$FloatingActionButton implements FloatingActionButton {
  const _$FloatingActionButton(
      {this.key,
      this.child,
      this.tooltip,
      this.foregroundColor,
      this.backgroundColor,
      this.focusColor,
      this.hoverColor,
      this.splashColor,
      this.elevation,
      this.focusElevation,
      this.hoverElevation,
      this.highlightElevation,
      this.disabledElevation,
      required this.onPressed,
      this.mouseCursor,
      this.mini = false,
      this.shape,
      this.clipBehavior = Clip.none,
      this.autofocus = false,
      this.materialTapTargetSize,
      this.isExtended = false,
      this.enableFeedback,
      final String? $type})
      : $type = $type ?? 'floatingActionButton';

  factory _$FloatingActionButton.fromJson(Map<String, dynamic> json) =>
      _$$FloatingActionButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Widget? child;
  @override
  final String? tooltip;
  @override
  final Color? foregroundColor;
  @override
  final Color? backgroundColor;
  @override
  final Color? focusColor;
  @override
  final Color? hoverColor;
  @override
  final Color? splashColor;
  @override
  final double? elevation;
  @override
  final double? focusElevation;
  @override
  final double? hoverElevation;
  @override
  final double? highlightElevation;
  @override
  final double? disabledElevation;
  @override
  final Callback? onPressed;
  @override
  final MouseCursor? mouseCursor;
  @override
  @JsonKey()
  final bool mini;
  @override
  final ShapeBorder? shape;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  @JsonKey()
  final bool isExtended;
  @override
  final bool? enableFeedback;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.floatingActionButton(key: $key, child: $child, tooltip: $tooltip, foregroundColor: $foregroundColor, backgroundColor: $backgroundColor, focusColor: $focusColor, hoverColor: $hoverColor, splashColor: $splashColor, elevation: $elevation, focusElevation: $focusElevation, hoverElevation: $hoverElevation, highlightElevation: $highlightElevation, disabledElevation: $disabledElevation, onPressed: $onPressed, mouseCursor: $mouseCursor, mini: $mini, shape: $shape, clipBehavior: $clipBehavior, autofocus: $autofocus, materialTapTargetSize: $materialTapTargetSize, isExtended: $isExtended, enableFeedback: $enableFeedback)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FloatingActionButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.foregroundColor, foregroundColor) ||
                other.foregroundColor == foregroundColor) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.focusColor, focusColor) ||
                other.focusColor == focusColor) &&
            (identical(other.hoverColor, hoverColor) ||
                other.hoverColor == hoverColor) &&
            (identical(other.splashColor, splashColor) ||
                other.splashColor == splashColor) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.focusElevation, focusElevation) ||
                other.focusElevation == focusElevation) &&
            (identical(other.hoverElevation, hoverElevation) ||
                other.hoverElevation == hoverElevation) &&
            (identical(other.highlightElevation, highlightElevation) ||
                other.highlightElevation == highlightElevation) &&
            (identical(other.disabledElevation, disabledElevation) ||
                other.disabledElevation == disabledElevation) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.mouseCursor, mouseCursor) ||
                other.mouseCursor == mouseCursor) &&
            (identical(other.mini, mini) || other.mini == mini) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.isExtended, isExtended) ||
                other.isExtended == isExtended) &&
            (identical(other.enableFeedback, enableFeedback) ||
                other.enableFeedback == enableFeedback));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        child,
        tooltip,
        foregroundColor,
        backgroundColor,
        focusColor,
        hoverColor,
        splashColor,
        elevation,
        focusElevation,
        hoverElevation,
        highlightElevation,
        disabledElevation,
        onPressed,
        mouseCursor,
        mini,
        shape,
        clipBehavior,
        autofocus,
        materialTapTargetSize,
        isExtended,
        enableFeedback
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FloatingActionButtonCopyWith<_$FloatingActionButton> get copyWith =>
      __$$FloatingActionButtonCopyWithImpl<_$FloatingActionButton>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return floatingActionButton(
        key,
        child,
        tooltip,
        foregroundColor,
        backgroundColor,
        focusColor,
        hoverColor,
        splashColor,
        elevation,
        focusElevation,
        hoverElevation,
        highlightElevation,
        disabledElevation,
        onPressed,
        mouseCursor,
        mini,
        shape,
        clipBehavior,
        autofocus,
        materialTapTargetSize,
        isExtended,
        enableFeedback);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return floatingActionButton?.call(
        key,
        child,
        tooltip,
        foregroundColor,
        backgroundColor,
        focusColor,
        hoverColor,
        splashColor,
        elevation,
        focusElevation,
        hoverElevation,
        highlightElevation,
        disabledElevation,
        onPressed,
        mouseCursor,
        mini,
        shape,
        clipBehavior,
        autofocus,
        materialTapTargetSize,
        isExtended,
        enableFeedback);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (floatingActionButton != null) {
      return floatingActionButton(
          key,
          child,
          tooltip,
          foregroundColor,
          backgroundColor,
          focusColor,
          hoverColor,
          splashColor,
          elevation,
          focusElevation,
          hoverElevation,
          highlightElevation,
          disabledElevation,
          onPressed,
          mouseCursor,
          mini,
          shape,
          clipBehavior,
          autofocus,
          materialTapTargetSize,
          isExtended,
          enableFeedback);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return floatingActionButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return floatingActionButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (floatingActionButton != null) {
      return floatingActionButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FloatingActionButtonToJson(
      this,
    );
  }
}

abstract class FloatingActionButton implements Widget {
  const factory FloatingActionButton(
      {final Key? key,
      final Widget? child,
      final String? tooltip,
      final Color? foregroundColor,
      final Color? backgroundColor,
      final Color? focusColor,
      final Color? hoverColor,
      final Color? splashColor,
      final double? elevation,
      final double? focusElevation,
      final double? hoverElevation,
      final double? highlightElevation,
      final double? disabledElevation,
      required final Callback? onPressed,
      final MouseCursor? mouseCursor,
      final bool mini,
      final ShapeBorder? shape,
      final Clip clipBehavior,
      final bool autofocus,
      final MaterialTapTargetSize? materialTapTargetSize,
      final bool isExtended,
      final bool? enableFeedback}) = _$FloatingActionButton;

  factory FloatingActionButton.fromJson(Map<String, dynamic> json) =
      _$FloatingActionButton.fromJson;

  @override
  Key? get key;
  Widget? get child;
  String? get tooltip;
  Color? get foregroundColor;
  Color? get backgroundColor;
  Color? get focusColor;
  Color? get hoverColor;
  Color? get splashColor;
  double? get elevation;
  double? get focusElevation;
  double? get hoverElevation;
  double? get highlightElevation;
  double? get disabledElevation;
  Callback? get onPressed;
  MouseCursor? get mouseCursor;
  bool get mini;
  ShapeBorder? get shape;
  Clip get clipBehavior;
  bool get autofocus;
  MaterialTapTargetSize? get materialTapTargetSize;
  bool get isExtended;
  bool? get enableFeedback;
  @override
  @JsonKey(ignore: true)
  _$$FloatingActionButtonCopyWith<_$FloatingActionButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FloatingActionButtonExtendedCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$FloatingActionButtonExtendedCopyWith(
          _$FloatingActionButtonExtended value,
          $Res Function(_$FloatingActionButtonExtended) then) =
      __$$FloatingActionButtonExtendedCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget label,
      Widget? icon,
      String? tooltip,
      Color? foregroundColor,
      Color? backgroundColor,
      Color? focusColor,
      Color? hoverColor,
      Color? splashColor,
      double? elevation,
      double? focusElevation,
      double? hoverElevation,
      double? highlightElevation,
      double? disabledElevation,
      Callback? onPressed,
      MouseCursor? mouseCursor,
      ShapeBorder? shape,
      Clip clipBehavior,
      bool autofocus,
      MaterialTapTargetSize? materialTapTargetSize,
      bool isExtended,
      bool? enableFeedback});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res> get label;
  $WidgetCopyWith<$Res>? get icon;
  $ColorCopyWith<$Res>? get foregroundColor;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get focusColor;
  $ColorCopyWith<$Res>? get hoverColor;
  $ColorCopyWith<$Res>? get splashColor;
  $CallbackCopyWith<$Res>? get onPressed;
  $MouseCursorCopyWith<$Res>? get mouseCursor;
  $ShapeBorderCopyWith<$Res>? get shape;
}

/// @nodoc
class __$$FloatingActionButtonExtendedCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$FloatingActionButtonExtended>
    implements _$$FloatingActionButtonExtendedCopyWith<$Res> {
  __$$FloatingActionButtonExtendedCopyWithImpl(
      _$FloatingActionButtonExtended _value,
      $Res Function(_$FloatingActionButtonExtended) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? label = null,
    Object? icon = freezed,
    Object? tooltip = freezed,
    Object? foregroundColor = freezed,
    Object? backgroundColor = freezed,
    Object? focusColor = freezed,
    Object? hoverColor = freezed,
    Object? splashColor = freezed,
    Object? elevation = freezed,
    Object? focusElevation = freezed,
    Object? hoverElevation = freezed,
    Object? highlightElevation = freezed,
    Object? disabledElevation = freezed,
    Object? onPressed = freezed,
    Object? mouseCursor = freezed,
    Object? shape = freezed,
    Object? clipBehavior = null,
    Object? autofocus = null,
    Object? materialTapTargetSize = freezed,
    Object? isExtended = null,
    Object? enableFeedback = freezed,
  }) {
    return _then(_$FloatingActionButtonExtended(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      label: null == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as Widget,
      icon: freezed == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      foregroundColor: freezed == foregroundColor
          ? _value.foregroundColor
          : foregroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      focusColor: freezed == focusColor
          ? _value.focusColor
          : focusColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      hoverColor: freezed == hoverColor
          ? _value.hoverColor
          : hoverColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      splashColor: freezed == splashColor
          ? _value.splashColor
          : splashColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      focusElevation: freezed == focusElevation
          ? _value.focusElevation
          : focusElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      hoverElevation: freezed == hoverElevation
          ? _value.hoverElevation
          : hoverElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      highlightElevation: freezed == highlightElevation
          ? _value.highlightElevation
          : highlightElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      disabledElevation: freezed == disabledElevation
          ? _value.disabledElevation
          : disabledElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      mouseCursor: freezed == mouseCursor
          ? _value.mouseCursor
          : mouseCursor // ignore: cast_nullable_to_non_nullable
              as MouseCursor?,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      isExtended: null == isExtended
          ? _value.isExtended
          : isExtended // ignore: cast_nullable_to_non_nullable
              as bool,
      enableFeedback: freezed == enableFeedback
          ? _value.enableFeedback
          : enableFeedback // ignore: cast_nullable_to_non_nullable
              as bool?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get label {
    return $WidgetCopyWith<$Res>(_value.label, (value) {
      return _then(_value.copyWith(label: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get icon {
    if (_value.icon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.icon!, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get foregroundColor {
    if (_value.foregroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.foregroundColor!, (value) {
      return _then(_value.copyWith(foregroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get focusColor {
    if (_value.focusColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.focusColor!, (value) {
      return _then(_value.copyWith(focusColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get hoverColor {
    if (_value.hoverColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.hoverColor!, (value) {
      return _then(_value.copyWith(hoverColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get splashColor {
    if (_value.splashColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.splashColor!, (value) {
      return _then(_value.copyWith(splashColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MouseCursorCopyWith<$Res>? get mouseCursor {
    if (_value.mouseCursor == null) {
      return null;
    }

    return $MouseCursorCopyWith<$Res>(_value.mouseCursor!, (value) {
      return _then(_value.copyWith(mouseCursor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$FloatingActionButtonExtended implements FloatingActionButtonExtended {
  const _$FloatingActionButtonExtended(
      {this.key,
      required this.label,
      this.icon,
      this.tooltip,
      this.foregroundColor,
      this.backgroundColor,
      this.focusColor,
      this.hoverColor,
      this.splashColor,
      this.elevation,
      this.focusElevation,
      this.hoverElevation,
      this.highlightElevation,
      this.disabledElevation,
      required this.onPressed,
      this.mouseCursor,
      this.shape,
      this.clipBehavior = Clip.none,
      this.autofocus = false,
      this.materialTapTargetSize,
      this.isExtended = true,
      this.enableFeedback,
      final String? $type})
      : $type = $type ?? 'floatingActionButtonExtended';

  factory _$FloatingActionButtonExtended.fromJson(Map<String, dynamic> json) =>
      _$$FloatingActionButtonExtendedFromJson(json);

  @override
  final Key? key;
  @override
  final Widget label;
  @override
  final Widget? icon;
  @override
  final String? tooltip;
  @override
  final Color? foregroundColor;
  @override
  final Color? backgroundColor;
  @override
  final Color? focusColor;
  @override
  final Color? hoverColor;
  @override
  final Color? splashColor;
  @override
  final double? elevation;
  @override
  final double? focusElevation;
  @override
  final double? hoverElevation;
  @override
  final double? highlightElevation;
  @override
  final double? disabledElevation;
  @override
  final Callback? onPressed;
  @override
  final MouseCursor? mouseCursor;
  @override
  final ShapeBorder? shape;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  @JsonKey()
  final bool isExtended;
  @override
  final bool? enableFeedback;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.floatingActionButtonExtended(key: $key, label: $label, icon: $icon, tooltip: $tooltip, foregroundColor: $foregroundColor, backgroundColor: $backgroundColor, focusColor: $focusColor, hoverColor: $hoverColor, splashColor: $splashColor, elevation: $elevation, focusElevation: $focusElevation, hoverElevation: $hoverElevation, highlightElevation: $highlightElevation, disabledElevation: $disabledElevation, onPressed: $onPressed, mouseCursor: $mouseCursor, shape: $shape, clipBehavior: $clipBehavior, autofocus: $autofocus, materialTapTargetSize: $materialTapTargetSize, isExtended: $isExtended, enableFeedback: $enableFeedback)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FloatingActionButtonExtended &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.label, label) || other.label == label) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.foregroundColor, foregroundColor) ||
                other.foregroundColor == foregroundColor) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.focusColor, focusColor) ||
                other.focusColor == focusColor) &&
            (identical(other.hoverColor, hoverColor) ||
                other.hoverColor == hoverColor) &&
            (identical(other.splashColor, splashColor) ||
                other.splashColor == splashColor) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.focusElevation, focusElevation) ||
                other.focusElevation == focusElevation) &&
            (identical(other.hoverElevation, hoverElevation) ||
                other.hoverElevation == hoverElevation) &&
            (identical(other.highlightElevation, highlightElevation) ||
                other.highlightElevation == highlightElevation) &&
            (identical(other.disabledElevation, disabledElevation) ||
                other.disabledElevation == disabledElevation) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.mouseCursor, mouseCursor) ||
                other.mouseCursor == mouseCursor) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.isExtended, isExtended) ||
                other.isExtended == isExtended) &&
            (identical(other.enableFeedback, enableFeedback) ||
                other.enableFeedback == enableFeedback));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        label,
        icon,
        tooltip,
        foregroundColor,
        backgroundColor,
        focusColor,
        hoverColor,
        splashColor,
        elevation,
        focusElevation,
        hoverElevation,
        highlightElevation,
        disabledElevation,
        onPressed,
        mouseCursor,
        shape,
        clipBehavior,
        autofocus,
        materialTapTargetSize,
        isExtended,
        enableFeedback
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FloatingActionButtonExtendedCopyWith<_$FloatingActionButtonExtended>
      get copyWith => __$$FloatingActionButtonExtendedCopyWithImpl<
          _$FloatingActionButtonExtended>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return floatingActionButtonExtended(
        key,
        label,
        this.icon,
        tooltip,
        foregroundColor,
        backgroundColor,
        focusColor,
        hoverColor,
        splashColor,
        elevation,
        focusElevation,
        hoverElevation,
        highlightElevation,
        disabledElevation,
        onPressed,
        mouseCursor,
        shape,
        clipBehavior,
        autofocus,
        materialTapTargetSize,
        isExtended,
        enableFeedback);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return floatingActionButtonExtended?.call(
        key,
        label,
        this.icon,
        tooltip,
        foregroundColor,
        backgroundColor,
        focusColor,
        hoverColor,
        splashColor,
        elevation,
        focusElevation,
        hoverElevation,
        highlightElevation,
        disabledElevation,
        onPressed,
        mouseCursor,
        shape,
        clipBehavior,
        autofocus,
        materialTapTargetSize,
        isExtended,
        enableFeedback);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (floatingActionButtonExtended != null) {
      return floatingActionButtonExtended(
          key,
          label,
          this.icon,
          tooltip,
          foregroundColor,
          backgroundColor,
          focusColor,
          hoverColor,
          splashColor,
          elevation,
          focusElevation,
          hoverElevation,
          highlightElevation,
          disabledElevation,
          onPressed,
          mouseCursor,
          shape,
          clipBehavior,
          autofocus,
          materialTapTargetSize,
          isExtended,
          enableFeedback);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return floatingActionButtonExtended(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return floatingActionButtonExtended?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (floatingActionButtonExtended != null) {
      return floatingActionButtonExtended(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FloatingActionButtonExtendedToJson(
      this,
    );
  }
}

abstract class FloatingActionButtonExtended implements Widget {
  const factory FloatingActionButtonExtended(
      {final Key? key,
      required final Widget label,
      final Widget? icon,
      final String? tooltip,
      final Color? foregroundColor,
      final Color? backgroundColor,
      final Color? focusColor,
      final Color? hoverColor,
      final Color? splashColor,
      final double? elevation,
      final double? focusElevation,
      final double? hoverElevation,
      final double? highlightElevation,
      final double? disabledElevation,
      required final Callback? onPressed,
      final MouseCursor? mouseCursor,
      final ShapeBorder? shape,
      final Clip clipBehavior,
      final bool autofocus,
      final MaterialTapTargetSize? materialTapTargetSize,
      final bool isExtended,
      final bool? enableFeedback}) = _$FloatingActionButtonExtended;

  factory FloatingActionButtonExtended.fromJson(Map<String, dynamic> json) =
      _$FloatingActionButtonExtended.fromJson;

  @override
  Key? get key;
  Widget get label;
  Widget? get icon;
  String? get tooltip;
  Color? get foregroundColor;
  Color? get backgroundColor;
  Color? get focusColor;
  Color? get hoverColor;
  Color? get splashColor;
  double? get elevation;
  double? get focusElevation;
  double? get hoverElevation;
  double? get highlightElevation;
  double? get disabledElevation;
  Callback? get onPressed;
  MouseCursor? get mouseCursor;
  ShapeBorder? get shape;
  Clip get clipBehavior;
  bool get autofocus;
  MaterialTapTargetSize? get materialTapTargetSize;
  bool get isExtended;
  bool? get enableFeedback;
  @override
  @JsonKey(ignore: true)
  _$$FloatingActionButtonExtendedCopyWith<_$FloatingActionButtonExtended>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TextCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$TextCopyWith(_$Text value, $Res Function(_$Text) then) =
      __$$TextCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String data,
      Key? key,
      TextStyle? style,
      StrutStyle? strutStyle,
      TextAlign? textAlign,
      TextDirection? textDirection,
      Locale? locale,
      bool? softWrap,
      TextOverflow? overflow,
      double? textScaleFactor,
      int? maxLines,
      String? semanticsLabel,
      TextWidthBasis? textWidthBasis,
      TextHeightBehavior? textHeightBehavior,
      Color? selectionColor});

  @override
  $KeyCopyWith<$Res>? get key;
  $TextStyleCopyWith<$Res>? get style;
  $StrutStyleCopyWith<$Res>? get strutStyle;
  $LocaleCopyWith<$Res>? get locale;
  $TextHeightBehaviorCopyWith<$Res>? get textHeightBehavior;
  $ColorCopyWith<$Res>? get selectionColor;
}

/// @nodoc
class __$$TextCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Text>
    implements _$$TextCopyWith<$Res> {
  __$$TextCopyWithImpl(_$Text _value, $Res Function(_$Text) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? data = null,
    Object? key = freezed,
    Object? style = freezed,
    Object? strutStyle = freezed,
    Object? textAlign = freezed,
    Object? textDirection = freezed,
    Object? locale = freezed,
    Object? softWrap = freezed,
    Object? overflow = freezed,
    Object? textScaleFactor = freezed,
    Object? maxLines = freezed,
    Object? semanticsLabel = freezed,
    Object? textWidthBasis = freezed,
    Object? textHeightBehavior = freezed,
    Object? selectionColor = freezed,
  }) {
    return _then(_$Text(
      null == data
          ? _value.data
          : data // ignore: cast_nullable_to_non_nullable
              as String,
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      style: freezed == style
          ? _value.style
          : style // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      strutStyle: freezed == strutStyle
          ? _value.strutStyle
          : strutStyle // ignore: cast_nullable_to_non_nullable
              as StrutStyle?,
      textAlign: freezed == textAlign
          ? _value.textAlign
          : textAlign // ignore: cast_nullable_to_non_nullable
              as TextAlign?,
      textDirection: freezed == textDirection
          ? _value.textDirection
          : textDirection // ignore: cast_nullable_to_non_nullable
              as TextDirection?,
      locale: freezed == locale
          ? _value.locale
          : locale // ignore: cast_nullable_to_non_nullable
              as Locale?,
      softWrap: freezed == softWrap
          ? _value.softWrap
          : softWrap // ignore: cast_nullable_to_non_nullable
              as bool?,
      overflow: freezed == overflow
          ? _value.overflow
          : overflow // ignore: cast_nullable_to_non_nullable
              as TextOverflow?,
      textScaleFactor: freezed == textScaleFactor
          ? _value.textScaleFactor
          : textScaleFactor // ignore: cast_nullable_to_non_nullable
              as double?,
      maxLines: freezed == maxLines
          ? _value.maxLines
          : maxLines // ignore: cast_nullable_to_non_nullable
              as int?,
      semanticsLabel: freezed == semanticsLabel
          ? _value.semanticsLabel
          : semanticsLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      textWidthBasis: freezed == textWidthBasis
          ? _value.textWidthBasis
          : textWidthBasis // ignore: cast_nullable_to_non_nullable
              as TextWidthBasis?,
      textHeightBehavior: freezed == textHeightBehavior
          ? _value.textHeightBehavior
          : textHeightBehavior // ignore: cast_nullable_to_non_nullable
              as TextHeightBehavior?,
      selectionColor: freezed == selectionColor
          ? _value.selectionColor
          : selectionColor // ignore: cast_nullable_to_non_nullable
              as Color?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get style {
    if (_value.style == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.style!, (value) {
      return _then(_value.copyWith(style: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $StrutStyleCopyWith<$Res>? get strutStyle {
    if (_value.strutStyle == null) {
      return null;
    }

    return $StrutStyleCopyWith<$Res>(_value.strutStyle!, (value) {
      return _then(_value.copyWith(strutStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $LocaleCopyWith<$Res>? get locale {
    if (_value.locale == null) {
      return null;
    }

    return $LocaleCopyWith<$Res>(_value.locale!, (value) {
      return _then(_value.copyWith(locale: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextHeightBehaviorCopyWith<$Res>? get textHeightBehavior {
    if (_value.textHeightBehavior == null) {
      return null;
    }

    return $TextHeightBehaviorCopyWith<$Res>(_value.textHeightBehavior!,
        (value) {
      return _then(_value.copyWith(textHeightBehavior: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get selectionColor {
    if (_value.selectionColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.selectionColor!, (value) {
      return _then(_value.copyWith(selectionColor: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Text implements Text {
  const _$Text(this.data,
      {this.key,
      this.style,
      this.strutStyle,
      this.textAlign,
      this.textDirection,
      this.locale,
      this.softWrap,
      this.overflow,
      this.textScaleFactor,
      this.maxLines,
      this.semanticsLabel,
      this.textWidthBasis,
      this.textHeightBehavior,
      this.selectionColor,
      final String? $type})
      : $type = $type ?? 'text';

  factory _$Text.fromJson(Map<String, dynamic> json) => _$$TextFromJson(json);

  @override
  final String data;
  @override
  final Key? key;
  @override
  final TextStyle? style;
  @override
  final StrutStyle? strutStyle;
  @override
  final TextAlign? textAlign;
  @override
  final TextDirection? textDirection;
  @override
  final Locale? locale;
  @override
  final bool? softWrap;
  @override
  final TextOverflow? overflow;
  @override
  final double? textScaleFactor;
  @override
  final int? maxLines;
  @override
  final String? semanticsLabel;
  @override
  final TextWidthBasis? textWidthBasis;
  @override
  final TextHeightBehavior? textHeightBehavior;
  @override
  final Color? selectionColor;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.text(data: $data, key: $key, style: $style, strutStyle: $strutStyle, textAlign: $textAlign, textDirection: $textDirection, locale: $locale, softWrap: $softWrap, overflow: $overflow, textScaleFactor: $textScaleFactor, maxLines: $maxLines, semanticsLabel: $semanticsLabel, textWidthBasis: $textWidthBasis, textHeightBehavior: $textHeightBehavior, selectionColor: $selectionColor)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Text &&
            (identical(other.data, data) || other.data == data) &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.style, style) || other.style == style) &&
            (identical(other.strutStyle, strutStyle) ||
                other.strutStyle == strutStyle) &&
            (identical(other.textAlign, textAlign) ||
                other.textAlign == textAlign) &&
            (identical(other.textDirection, textDirection) ||
                other.textDirection == textDirection) &&
            (identical(other.locale, locale) || other.locale == locale) &&
            (identical(other.softWrap, softWrap) ||
                other.softWrap == softWrap) &&
            (identical(other.overflow, overflow) ||
                other.overflow == overflow) &&
            (identical(other.textScaleFactor, textScaleFactor) ||
                other.textScaleFactor == textScaleFactor) &&
            (identical(other.maxLines, maxLines) ||
                other.maxLines == maxLines) &&
            (identical(other.semanticsLabel, semanticsLabel) ||
                other.semanticsLabel == semanticsLabel) &&
            (identical(other.textWidthBasis, textWidthBasis) ||
                other.textWidthBasis == textWidthBasis) &&
            (identical(other.textHeightBehavior, textHeightBehavior) ||
                other.textHeightBehavior == textHeightBehavior) &&
            (identical(other.selectionColor, selectionColor) ||
                other.selectionColor == selectionColor));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      data,
      key,
      style,
      strutStyle,
      textAlign,
      textDirection,
      locale,
      softWrap,
      overflow,
      textScaleFactor,
      maxLines,
      semanticsLabel,
      textWidthBasis,
      textHeightBehavior,
      selectionColor);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TextCopyWith<_$Text> get copyWith =>
      __$$TextCopyWithImpl<_$Text>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return text(
        data,
        key,
        style,
        strutStyle,
        textAlign,
        textDirection,
        locale,
        softWrap,
        overflow,
        textScaleFactor,
        maxLines,
        semanticsLabel,
        textWidthBasis,
        textHeightBehavior,
        selectionColor);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return text?.call(
        data,
        key,
        style,
        strutStyle,
        textAlign,
        textDirection,
        locale,
        softWrap,
        overflow,
        textScaleFactor,
        maxLines,
        semanticsLabel,
        textWidthBasis,
        textHeightBehavior,
        selectionColor);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (text != null) {
      return text(
          data,
          key,
          style,
          strutStyle,
          textAlign,
          textDirection,
          locale,
          softWrap,
          overflow,
          textScaleFactor,
          maxLines,
          semanticsLabel,
          textWidthBasis,
          textHeightBehavior,
          selectionColor);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return text(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return text?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (text != null) {
      return text(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TextToJson(
      this,
    );
  }
}

abstract class Text implements Widget {
  const factory Text(final String data,
      {final Key? key,
      final TextStyle? style,
      final StrutStyle? strutStyle,
      final TextAlign? textAlign,
      final TextDirection? textDirection,
      final Locale? locale,
      final bool? softWrap,
      final TextOverflow? overflow,
      final double? textScaleFactor,
      final int? maxLines,
      final String? semanticsLabel,
      final TextWidthBasis? textWidthBasis,
      final TextHeightBehavior? textHeightBehavior,
      final Color? selectionColor}) = _$Text;

  factory Text.fromJson(Map<String, dynamic> json) = _$Text.fromJson;

  String get data;
  @override
  Key? get key;
  TextStyle? get style;
  StrutStyle? get strutStyle;
  TextAlign? get textAlign;
  TextDirection? get textDirection;
  Locale? get locale;
  bool? get softWrap;
  TextOverflow? get overflow;
  double? get textScaleFactor;
  int? get maxLines;
  String? get semanticsLabel;
  TextWidthBasis? get textWidthBasis;
  TextHeightBehavior? get textHeightBehavior;
  Color? get selectionColor;
  @override
  @JsonKey(ignore: true)
  _$$TextCopyWith<_$Text> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ContainerCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$ContainerCopyWith(
          _$Container value, $Res Function(_$Container) then) =
      __$$ContainerCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Alignment? alignment,
      EdgeInsets? padding,
      Color? color,
      Decoration? decoration,
      Decoration? foregroundDecoration,
      double? width,
      double? height,
      BoxConstraints? constraints,
      EdgeInsets? margin,
      @matrixConverter Matrix4? transform,
      Alignment? transformAlignment,
      Widget? child,
      Clip clipBehavior});

  @override
  $KeyCopyWith<$Res>? get key;
  $AlignmentCopyWith<$Res>? get alignment;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $ColorCopyWith<$Res>? get color;
  $DecorationCopyWith<$Res>? get decoration;
  $DecorationCopyWith<$Res>? get foregroundDecoration;
  $BoxConstraintsCopyWith<$Res>? get constraints;
  $EdgeInsetsCopyWith<$Res>? get margin;
  $AlignmentCopyWith<$Res>? get transformAlignment;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$ContainerCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$Container>
    implements _$$ContainerCopyWith<$Res> {
  __$$ContainerCopyWithImpl(
      _$Container _value, $Res Function(_$Container) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? alignment = freezed,
    Object? padding = freezed,
    Object? color = freezed,
    Object? decoration = freezed,
    Object? foregroundDecoration = freezed,
    Object? width = freezed,
    Object? height = freezed,
    Object? constraints = freezed,
    Object? margin = freezed,
    Object? transform = freezed,
    Object? transformAlignment = freezed,
    Object? child = freezed,
    Object? clipBehavior = null,
  }) {
    return _then(_$Container(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      alignment: freezed == alignment
          ? _value.alignment
          : alignment // ignore: cast_nullable_to_non_nullable
              as Alignment?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      decoration: freezed == decoration
          ? _value.decoration
          : decoration // ignore: cast_nullable_to_non_nullable
              as Decoration?,
      foregroundDecoration: freezed == foregroundDecoration
          ? _value.foregroundDecoration
          : foregroundDecoration // ignore: cast_nullable_to_non_nullable
              as Decoration?,
      width: freezed == width
          ? _value.width
          : width // ignore: cast_nullable_to_non_nullable
              as double?,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
      constraints: freezed == constraints
          ? _value.constraints
          : constraints // ignore: cast_nullable_to_non_nullable
              as BoxConstraints?,
      margin: freezed == margin
          ? _value.margin
          : margin // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      transform: freezed == transform
          ? _value.transform
          : transform // ignore: cast_nullable_to_non_nullable
              as Matrix4?,
      transformAlignment: freezed == transformAlignment
          ? _value.transformAlignment
          : transformAlignment // ignore: cast_nullable_to_non_nullable
              as Alignment?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res>? get alignment {
    if (_value.alignment == null) {
      return null;
    }

    return $AlignmentCopyWith<$Res>(_value.alignment!, (value) {
      return _then(_value.copyWith(alignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DecorationCopyWith<$Res>? get decoration {
    if (_value.decoration == null) {
      return null;
    }

    return $DecorationCopyWith<$Res>(_value.decoration!, (value) {
      return _then(_value.copyWith(decoration: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DecorationCopyWith<$Res>? get foregroundDecoration {
    if (_value.foregroundDecoration == null) {
      return null;
    }

    return $DecorationCopyWith<$Res>(_value.foregroundDecoration!, (value) {
      return _then(_value.copyWith(foregroundDecoration: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BoxConstraintsCopyWith<$Res>? get constraints {
    if (_value.constraints == null) {
      return null;
    }

    return $BoxConstraintsCopyWith<$Res>(_value.constraints!, (value) {
      return _then(_value.copyWith(constraints: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get margin {
    if (_value.margin == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.margin!, (value) {
      return _then(_value.copyWith(margin: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res>? get transformAlignment {
    if (_value.transformAlignment == null) {
      return null;
    }

    return $AlignmentCopyWith<$Res>(_value.transformAlignment!, (value) {
      return _then(_value.copyWith(transformAlignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Container implements Container {
  const _$Container(
      {this.key,
      this.alignment,
      this.padding,
      this.color,
      this.decoration,
      this.foregroundDecoration,
      this.width,
      this.height,
      this.constraints,
      this.margin,
      @matrixConverter this.transform,
      this.transformAlignment,
      this.child,
      this.clipBehavior = Clip.none,
      final String? $type})
      : $type = $type ?? 'container';

  factory _$Container.fromJson(Map<String, dynamic> json) =>
      _$$ContainerFromJson(json);

  @override
  final Key? key;
  @override
  final Alignment? alignment;
  @override
  final EdgeInsets? padding;
  @override
  final Color? color;
  @override
  final Decoration? decoration;
  @override
  final Decoration? foregroundDecoration;
  @override
  final double? width;
  @override
  final double? height;
  @override
  final BoxConstraints? constraints;
  @override
  final EdgeInsets? margin;
  @override
  @matrixConverter
  final Matrix4? transform;
  @override
  final Alignment? transformAlignment;
  @override
  final Widget? child;
  @override
  @JsonKey()
  final Clip clipBehavior;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.container(key: $key, alignment: $alignment, padding: $padding, color: $color, decoration: $decoration, foregroundDecoration: $foregroundDecoration, width: $width, height: $height, constraints: $constraints, margin: $margin, transform: $transform, transformAlignment: $transformAlignment, child: $child, clipBehavior: $clipBehavior)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Container &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.alignment, alignment) ||
                other.alignment == alignment) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.decoration, decoration) ||
                other.decoration == decoration) &&
            (identical(other.foregroundDecoration, foregroundDecoration) ||
                other.foregroundDecoration == foregroundDecoration) &&
            (identical(other.width, width) || other.width == width) &&
            (identical(other.height, height) || other.height == height) &&
            (identical(other.constraints, constraints) ||
                other.constraints == constraints) &&
            (identical(other.margin, margin) || other.margin == margin) &&
            (identical(other.transform, transform) ||
                other.transform == transform) &&
            (identical(other.transformAlignment, transformAlignment) ||
                other.transformAlignment == transformAlignment) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      alignment,
      padding,
      color,
      decoration,
      foregroundDecoration,
      width,
      height,
      constraints,
      margin,
      transform,
      transformAlignment,
      child,
      clipBehavior);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ContainerCopyWith<_$Container> get copyWith =>
      __$$ContainerCopyWithImpl<_$Container>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return container(
        key,
        alignment,
        this.padding,
        color,
        decoration,
        foregroundDecoration,
        width,
        height,
        constraints,
        margin,
        transform,
        transformAlignment,
        child,
        clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return container?.call(
        key,
        alignment,
        this.padding,
        color,
        decoration,
        foregroundDecoration,
        width,
        height,
        constraints,
        margin,
        transform,
        transformAlignment,
        child,
        clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (container != null) {
      return container(
          key,
          alignment,
          this.padding,
          color,
          decoration,
          foregroundDecoration,
          width,
          height,
          constraints,
          margin,
          transform,
          transformAlignment,
          child,
          clipBehavior);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return container(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return container?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (container != null) {
      return container(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ContainerToJson(
      this,
    );
  }
}

abstract class Container implements Widget {
  const factory Container(
      {final Key? key,
      final Alignment? alignment,
      final EdgeInsets? padding,
      final Color? color,
      final Decoration? decoration,
      final Decoration? foregroundDecoration,
      final double? width,
      final double? height,
      final BoxConstraints? constraints,
      final EdgeInsets? margin,
      @matrixConverter final Matrix4? transform,
      final Alignment? transformAlignment,
      final Widget? child,
      final Clip clipBehavior}) = _$Container;

  factory Container.fromJson(Map<String, dynamic> json) = _$Container.fromJson;

  @override
  Key? get key;
  Alignment? get alignment;
  EdgeInsets? get padding;
  Color? get color;
  Decoration? get decoration;
  Decoration? get foregroundDecoration;
  double? get width;
  double? get height;
  BoxConstraints? get constraints;
  EdgeInsets? get margin;
  @matrixConverter
  Matrix4? get transform;
  Alignment? get transformAlignment;
  Widget? get child;
  Clip get clipBehavior;
  @override
  @JsonKey(ignore: true)
  _$$ContainerCopyWith<_$Container> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SizedBoxCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$SizedBoxCopyWith(
          _$SizedBox value, $Res Function(_$SizedBox) then) =
      __$$SizedBoxCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({Key? key, double? width, double? height, Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$SizedBoxCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$SizedBox>
    implements _$$SizedBoxCopyWith<$Res> {
  __$$SizedBoxCopyWithImpl(_$SizedBox _value, $Res Function(_$SizedBox) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? width = freezed,
    Object? height = freezed,
    Object? child = freezed,
  }) {
    return _then(_$SizedBox(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      width: freezed == width
          ? _value.width
          : width // ignore: cast_nullable_to_non_nullable
              as double?,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$SizedBox implements SizedBox {
  const _$SizedBox(
      {this.key, this.width, this.height, this.child, final String? $type})
      : $type = $type ?? 'sizedBox';

  factory _$SizedBox.fromJson(Map<String, dynamic> json) =>
      _$$SizedBoxFromJson(json);

  @override
  final Key? key;
  @override
  final double? width;
  @override
  final double? height;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.sizedBox(key: $key, width: $width, height: $height, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SizedBox &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.width, width) || other.width == width) &&
            (identical(other.height, height) || other.height == height) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, key, width, height, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SizedBoxCopyWith<_$SizedBox> get copyWith =>
      __$$SizedBoxCopyWithImpl<_$SizedBox>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return sizedBox(key, width, height, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return sizedBox?.call(key, width, height, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (sizedBox != null) {
      return sizedBox(key, width, height, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return sizedBox(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return sizedBox?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (sizedBox != null) {
      return sizedBox(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SizedBoxToJson(
      this,
    );
  }
}

abstract class SizedBox implements Widget {
  const factory SizedBox(
      {final Key? key,
      final double? width,
      final double? height,
      final Widget? child}) = _$SizedBox;

  factory SizedBox.fromJson(Map<String, dynamic> json) = _$SizedBox.fromJson;

  @override
  Key? get key;
  double? get width;
  double? get height;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$SizedBoxCopyWith<_$SizedBox> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CenterCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$CenterCopyWith(_$Center value, $Res Function(_$Center) then) =
      __$$CenterCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key, double? widthFactor, double? heightFactor, Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$CenterCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Center>
    implements _$$CenterCopyWith<$Res> {
  __$$CenterCopyWithImpl(_$Center _value, $Res Function(_$Center) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? widthFactor = freezed,
    Object? heightFactor = freezed,
    Object? child = null,
  }) {
    return _then(_$Center(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      widthFactor: freezed == widthFactor
          ? _value.widthFactor
          : widthFactor // ignore: cast_nullable_to_non_nullable
              as double?,
      heightFactor: freezed == heightFactor
          ? _value.heightFactor
          : heightFactor // ignore: cast_nullable_to_non_nullable
              as double?,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Center implements Center {
  const _$Center(
      {this.key,
      this.widthFactor,
      this.heightFactor,
      required this.child,
      final String? $type})
      : $type = $type ?? 'center';

  factory _$Center.fromJson(Map<String, dynamic> json) =>
      _$$CenterFromJson(json);

  @override
  final Key? key;
  @override
  final double? widthFactor;
  @override
  final double? heightFactor;
  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.center(key: $key, widthFactor: $widthFactor, heightFactor: $heightFactor, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Center &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.widthFactor, widthFactor) ||
                other.widthFactor == widthFactor) &&
            (identical(other.heightFactor, heightFactor) ||
                other.heightFactor == heightFactor) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, key, widthFactor, heightFactor, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CenterCopyWith<_$Center> get copyWith =>
      __$$CenterCopyWithImpl<_$Center>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return center(key, widthFactor, heightFactor, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return center?.call(key, widthFactor, heightFactor, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (center != null) {
      return center(key, widthFactor, heightFactor, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return center(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return center?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (center != null) {
      return center(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CenterToJson(
      this,
    );
  }
}

abstract class Center implements Widget {
  const factory Center(
      {final Key? key,
      final double? widthFactor,
      final double? heightFactor,
      required final Widget child}) = _$Center;

  factory Center.fromJson(Map<String, dynamic> json) = _$Center.fromJson;

  @override
  Key? get key;
  double? get widthFactor;
  double? get heightFactor;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$CenterCopyWith<_$Center> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$IconCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$IconCopyWith(_$Icon value, $Res Function(_$Icon) then) =
      __$$IconCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {IconData? icon,
      Key? key,
      double? size,
      double? fill,
      double? weight,
      double? grade,
      double? opticalSize,
      Color? color,
      List<Shadow>? shadows,
      String? semanticLabel,
      TextDirection? textDirection});

  $IconDataCopyWith<$Res>? get icon;
  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get color;
}

/// @nodoc
class __$$IconCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Icon>
    implements _$$IconCopyWith<$Res> {
  __$$IconCopyWithImpl(_$Icon _value, $Res Function(_$Icon) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? icon = freezed,
    Object? key = freezed,
    Object? size = freezed,
    Object? fill = freezed,
    Object? weight = freezed,
    Object? grade = freezed,
    Object? opticalSize = freezed,
    Object? color = freezed,
    Object? shadows = freezed,
    Object? semanticLabel = freezed,
    Object? textDirection = freezed,
  }) {
    return _then(_$Icon(
      freezed == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as IconData?,
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      size: freezed == size
          ? _value.size
          : size // ignore: cast_nullable_to_non_nullable
              as double?,
      fill: freezed == fill
          ? _value.fill
          : fill // ignore: cast_nullable_to_non_nullable
              as double?,
      weight: freezed == weight
          ? _value.weight
          : weight // ignore: cast_nullable_to_non_nullable
              as double?,
      grade: freezed == grade
          ? _value.grade
          : grade // ignore: cast_nullable_to_non_nullable
              as double?,
      opticalSize: freezed == opticalSize
          ? _value.opticalSize
          : opticalSize // ignore: cast_nullable_to_non_nullable
              as double?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      shadows: freezed == shadows
          ? _value._shadows
          : shadows // ignore: cast_nullable_to_non_nullable
              as List<Shadow>?,
      semanticLabel: freezed == semanticLabel
          ? _value.semanticLabel
          : semanticLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      textDirection: freezed == textDirection
          ? _value.textDirection
          : textDirection // ignore: cast_nullable_to_non_nullable
              as TextDirection?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $IconDataCopyWith<$Res>? get icon {
    if (_value.icon == null) {
      return null;
    }

    return $IconDataCopyWith<$Res>(_value.icon!, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Icon implements Icon {
  const _$Icon(this.icon,
      {this.key,
      this.size,
      this.fill,
      this.weight,
      this.grade,
      this.opticalSize,
      this.color,
      final List<Shadow>? shadows,
      this.semanticLabel,
      this.textDirection,
      final String? $type})
      : _shadows = shadows,
        $type = $type ?? 'icon';

  factory _$Icon.fromJson(Map<String, dynamic> json) => _$$IconFromJson(json);

  @override
  final IconData? icon;
  @override
  final Key? key;
  @override
  final double? size;
  @override
  final double? fill;
  @override
  final double? weight;
  @override
  final double? grade;
  @override
  final double? opticalSize;
  @override
  final Color? color;
  final List<Shadow>? _shadows;
  @override
  List<Shadow>? get shadows {
    final value = _shadows;
    if (value == null) return null;
    if (_shadows is EqualUnmodifiableListView) return _shadows;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  final String? semanticLabel;
  @override
  final TextDirection? textDirection;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.icon(icon: $icon, key: $key, size: $size, fill: $fill, weight: $weight, grade: $grade, opticalSize: $opticalSize, color: $color, shadows: $shadows, semanticLabel: $semanticLabel, textDirection: $textDirection)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Icon &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.size, size) || other.size == size) &&
            (identical(other.fill, fill) || other.fill == fill) &&
            (identical(other.weight, weight) || other.weight == weight) &&
            (identical(other.grade, grade) || other.grade == grade) &&
            (identical(other.opticalSize, opticalSize) ||
                other.opticalSize == opticalSize) &&
            (identical(other.color, color) || other.color == color) &&
            const DeepCollectionEquality().equals(other._shadows, _shadows) &&
            (identical(other.semanticLabel, semanticLabel) ||
                other.semanticLabel == semanticLabel) &&
            (identical(other.textDirection, textDirection) ||
                other.textDirection == textDirection));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      icon,
      key,
      size,
      fill,
      weight,
      grade,
      opticalSize,
      color,
      const DeepCollectionEquality().hash(_shadows),
      semanticLabel,
      textDirection);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$IconCopyWith<_$Icon> get copyWith =>
      __$$IconCopyWithImpl<_$Icon>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return icon(this.icon, key, size, fill, weight, grade, opticalSize, color,
        shadows, semanticLabel, textDirection);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return icon?.call(this.icon, key, size, fill, weight, grade, opticalSize,
        color, shadows, semanticLabel, textDirection);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (icon != null) {
      return icon(this.icon, key, size, fill, weight, grade, opticalSize, color,
          shadows, semanticLabel, textDirection);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return icon(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return icon?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (icon != null) {
      return icon(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$IconToJson(
      this,
    );
  }
}

abstract class Icon implements Widget {
  const factory Icon(final IconData? icon,
      {final Key? key,
      final double? size,
      final double? fill,
      final double? weight,
      final double? grade,
      final double? opticalSize,
      final Color? color,
      final List<Shadow>? shadows,
      final String? semanticLabel,
      final TextDirection? textDirection}) = _$Icon;

  factory Icon.fromJson(Map<String, dynamic> json) = _$Icon.fromJson;

  IconData? get icon;
  @override
  Key? get key;
  double? get size;
  double? get fill;
  double? get weight;
  double? get grade;
  double? get opticalSize;
  Color? get color;
  List<Shadow>? get shadows;
  String? get semanticLabel;
  TextDirection? get textDirection;
  @override
  @JsonKey(ignore: true)
  _$$IconCopyWith<_$Icon> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ColumnCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$ColumnCopyWith(_$Column value, $Res Function(_$Column) then) =
      __$$ColumnCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      MainAxisAlignment mainAxisAlignment,
      MainAxisSize mainAxisSize,
      CrossAxisAlignment crossAxisAlignment,
      TextDirection? textDirection,
      VerticalDirection verticalDirection,
      TextBaseline? textBaseline,
      List<Widget> children});

  @override
  $KeyCopyWith<$Res>? get key;
}

/// @nodoc
class __$$ColumnCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Column>
    implements _$$ColumnCopyWith<$Res> {
  __$$ColumnCopyWithImpl(_$Column _value, $Res Function(_$Column) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? mainAxisAlignment = null,
    Object? mainAxisSize = null,
    Object? crossAxisAlignment = null,
    Object? textDirection = freezed,
    Object? verticalDirection = null,
    Object? textBaseline = freezed,
    Object? children = null,
  }) {
    return _then(_$Column(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      mainAxisAlignment: null == mainAxisAlignment
          ? _value.mainAxisAlignment
          : mainAxisAlignment // ignore: cast_nullable_to_non_nullable
              as MainAxisAlignment,
      mainAxisSize: null == mainAxisSize
          ? _value.mainAxisSize
          : mainAxisSize // ignore: cast_nullable_to_non_nullable
              as MainAxisSize,
      crossAxisAlignment: null == crossAxisAlignment
          ? _value.crossAxisAlignment
          : crossAxisAlignment // ignore: cast_nullable_to_non_nullable
              as CrossAxisAlignment,
      textDirection: freezed == textDirection
          ? _value.textDirection
          : textDirection // ignore: cast_nullable_to_non_nullable
              as TextDirection?,
      verticalDirection: null == verticalDirection
          ? _value.verticalDirection
          : verticalDirection // ignore: cast_nullable_to_non_nullable
              as VerticalDirection,
      textBaseline: freezed == textBaseline
          ? _value.textBaseline
          : textBaseline // ignore: cast_nullable_to_non_nullable
              as TextBaseline?,
      children: null == children
          ? _value._children
          : children // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$Column implements Column {
  const _$Column(
      {this.key,
      this.mainAxisAlignment = MainAxisAlignment.start,
      this.mainAxisSize = MainAxisSize.max,
      this.crossAxisAlignment = CrossAxisAlignment.center,
      this.textDirection,
      this.verticalDirection = VerticalDirection.down,
      this.textBaseline,
      final List<Widget> children = const [],
      final String? $type})
      : _children = children,
        $type = $type ?? 'column';

  factory _$Column.fromJson(Map<String, dynamic> json) =>
      _$$ColumnFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final MainAxisAlignment mainAxisAlignment;
  @override
  @JsonKey()
  final MainAxisSize mainAxisSize;
  @override
  @JsonKey()
  final CrossAxisAlignment crossAxisAlignment;
  @override
  final TextDirection? textDirection;
  @override
  @JsonKey()
  final VerticalDirection verticalDirection;
  @override
  final TextBaseline? textBaseline;
  final List<Widget> _children;
  @override
  @JsonKey()
  List<Widget> get children {
    if (_children is EqualUnmodifiableListView) return _children;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_children);
  }

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.column(key: $key, mainAxisAlignment: $mainAxisAlignment, mainAxisSize: $mainAxisSize, crossAxisAlignment: $crossAxisAlignment, textDirection: $textDirection, verticalDirection: $verticalDirection, textBaseline: $textBaseline, children: $children)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Column &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.mainAxisAlignment, mainAxisAlignment) ||
                other.mainAxisAlignment == mainAxisAlignment) &&
            (identical(other.mainAxisSize, mainAxisSize) ||
                other.mainAxisSize == mainAxisSize) &&
            (identical(other.crossAxisAlignment, crossAxisAlignment) ||
                other.crossAxisAlignment == crossAxisAlignment) &&
            (identical(other.textDirection, textDirection) ||
                other.textDirection == textDirection) &&
            (identical(other.verticalDirection, verticalDirection) ||
                other.verticalDirection == verticalDirection) &&
            (identical(other.textBaseline, textBaseline) ||
                other.textBaseline == textBaseline) &&
            const DeepCollectionEquality().equals(other._children, _children));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      mainAxisAlignment,
      mainAxisSize,
      crossAxisAlignment,
      textDirection,
      verticalDirection,
      textBaseline,
      const DeepCollectionEquality().hash(_children));

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ColumnCopyWith<_$Column> get copyWith =>
      __$$ColumnCopyWithImpl<_$Column>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return column(key, mainAxisAlignment, mainAxisSize, crossAxisAlignment,
        textDirection, verticalDirection, textBaseline, children);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return column?.call(
        key,
        mainAxisAlignment,
        mainAxisSize,
        crossAxisAlignment,
        textDirection,
        verticalDirection,
        textBaseline,
        children);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (column != null) {
      return column(key, mainAxisAlignment, mainAxisSize, crossAxisAlignment,
          textDirection, verticalDirection, textBaseline, children);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return column(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return column?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (column != null) {
      return column(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ColumnToJson(
      this,
    );
  }
}

abstract class Column implements Widget {
  const factory Column(
      {final Key? key,
      final MainAxisAlignment mainAxisAlignment,
      final MainAxisSize mainAxisSize,
      final CrossAxisAlignment crossAxisAlignment,
      final TextDirection? textDirection,
      final VerticalDirection verticalDirection,
      final TextBaseline? textBaseline,
      final List<Widget> children}) = _$Column;

  factory Column.fromJson(Map<String, dynamic> json) = _$Column.fromJson;

  @override
  Key? get key;
  MainAxisAlignment get mainAxisAlignment;
  MainAxisSize get mainAxisSize;
  CrossAxisAlignment get crossAxisAlignment;
  TextDirection? get textDirection;
  VerticalDirection get verticalDirection;
  TextBaseline? get textBaseline;
  List<Widget> get children;
  @override
  @JsonKey(ignore: true)
  _$$ColumnCopyWith<_$Column> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$RowCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$RowCopyWith(_$Row value, $Res Function(_$Row) then) =
      __$$RowCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      MainAxisAlignment mainAxisAlignment,
      MainAxisSize mainAxisSize,
      CrossAxisAlignment crossAxisAlignment,
      TextDirection? textDirection,
      VerticalDirection verticalDirection,
      TextBaseline? textBaseline,
      List<Widget> children});

  @override
  $KeyCopyWith<$Res>? get key;
}

/// @nodoc
class __$$RowCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Row>
    implements _$$RowCopyWith<$Res> {
  __$$RowCopyWithImpl(_$Row _value, $Res Function(_$Row) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? mainAxisAlignment = null,
    Object? mainAxisSize = null,
    Object? crossAxisAlignment = null,
    Object? textDirection = freezed,
    Object? verticalDirection = null,
    Object? textBaseline = freezed,
    Object? children = null,
  }) {
    return _then(_$Row(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      mainAxisAlignment: null == mainAxisAlignment
          ? _value.mainAxisAlignment
          : mainAxisAlignment // ignore: cast_nullable_to_non_nullable
              as MainAxisAlignment,
      mainAxisSize: null == mainAxisSize
          ? _value.mainAxisSize
          : mainAxisSize // ignore: cast_nullable_to_non_nullable
              as MainAxisSize,
      crossAxisAlignment: null == crossAxisAlignment
          ? _value.crossAxisAlignment
          : crossAxisAlignment // ignore: cast_nullable_to_non_nullable
              as CrossAxisAlignment,
      textDirection: freezed == textDirection
          ? _value.textDirection
          : textDirection // ignore: cast_nullable_to_non_nullable
              as TextDirection?,
      verticalDirection: null == verticalDirection
          ? _value.verticalDirection
          : verticalDirection // ignore: cast_nullable_to_non_nullable
              as VerticalDirection,
      textBaseline: freezed == textBaseline
          ? _value.textBaseline
          : textBaseline // ignore: cast_nullable_to_non_nullable
              as TextBaseline?,
      children: null == children
          ? _value._children
          : children // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$Row implements Row {
  const _$Row(
      {this.key,
      this.mainAxisAlignment = MainAxisAlignment.start,
      this.mainAxisSize = MainAxisSize.max,
      this.crossAxisAlignment = CrossAxisAlignment.center,
      this.textDirection,
      this.verticalDirection = VerticalDirection.down,
      this.textBaseline,
      final List<Widget> children = const [],
      final String? $type})
      : _children = children,
        $type = $type ?? 'row';

  factory _$Row.fromJson(Map<String, dynamic> json) => _$$RowFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final MainAxisAlignment mainAxisAlignment;
  @override
  @JsonKey()
  final MainAxisSize mainAxisSize;
  @override
  @JsonKey()
  final CrossAxisAlignment crossAxisAlignment;
  @override
  final TextDirection? textDirection;
  @override
  @JsonKey()
  final VerticalDirection verticalDirection;
  @override
  final TextBaseline? textBaseline;
  final List<Widget> _children;
  @override
  @JsonKey()
  List<Widget> get children {
    if (_children is EqualUnmodifiableListView) return _children;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_children);
  }

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.row(key: $key, mainAxisAlignment: $mainAxisAlignment, mainAxisSize: $mainAxisSize, crossAxisAlignment: $crossAxisAlignment, textDirection: $textDirection, verticalDirection: $verticalDirection, textBaseline: $textBaseline, children: $children)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Row &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.mainAxisAlignment, mainAxisAlignment) ||
                other.mainAxisAlignment == mainAxisAlignment) &&
            (identical(other.mainAxisSize, mainAxisSize) ||
                other.mainAxisSize == mainAxisSize) &&
            (identical(other.crossAxisAlignment, crossAxisAlignment) ||
                other.crossAxisAlignment == crossAxisAlignment) &&
            (identical(other.textDirection, textDirection) ||
                other.textDirection == textDirection) &&
            (identical(other.verticalDirection, verticalDirection) ||
                other.verticalDirection == verticalDirection) &&
            (identical(other.textBaseline, textBaseline) ||
                other.textBaseline == textBaseline) &&
            const DeepCollectionEquality().equals(other._children, _children));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      mainAxisAlignment,
      mainAxisSize,
      crossAxisAlignment,
      textDirection,
      verticalDirection,
      textBaseline,
      const DeepCollectionEquality().hash(_children));

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$RowCopyWith<_$Row> get copyWith =>
      __$$RowCopyWithImpl<_$Row>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return row(key, mainAxisAlignment, mainAxisSize, crossAxisAlignment,
        textDirection, verticalDirection, textBaseline, children);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return row?.call(key, mainAxisAlignment, mainAxisSize, crossAxisAlignment,
        textDirection, verticalDirection, textBaseline, children);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (row != null) {
      return row(key, mainAxisAlignment, mainAxisSize, crossAxisAlignment,
          textDirection, verticalDirection, textBaseline, children);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return row(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return row?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (row != null) {
      return row(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$RowToJson(
      this,
    );
  }
}

abstract class Row implements Widget {
  const factory Row(
      {final Key? key,
      final MainAxisAlignment mainAxisAlignment,
      final MainAxisSize mainAxisSize,
      final CrossAxisAlignment crossAxisAlignment,
      final TextDirection? textDirection,
      final VerticalDirection verticalDirection,
      final TextBaseline? textBaseline,
      final List<Widget> children}) = _$Row;

  factory Row.fromJson(Map<String, dynamic> json) = _$Row.fromJson;

  @override
  Key? get key;
  MainAxisAlignment get mainAxisAlignment;
  MainAxisSize get mainAxisSize;
  CrossAxisAlignment get crossAxisAlignment;
  TextDirection? get textDirection;
  VerticalDirection get verticalDirection;
  TextBaseline? get textBaseline;
  List<Widget> get children;
  @override
  @JsonKey(ignore: true)
  _$$RowCopyWith<_$Row> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CircularProgressIndicatorCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$CircularProgressIndicatorCopyWith(
          _$CircularProgressIndicator value,
          $Res Function(_$CircularProgressIndicator) then) =
      __$$CircularProgressIndicatorCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      double? value,
      Color? backgroundColor,
      Color? color,
      double strokeWidth,
      String? semanticsLabel,
      String? semanticsValue});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get color;
}

/// @nodoc
class __$$CircularProgressIndicatorCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$CircularProgressIndicator>
    implements _$$CircularProgressIndicatorCopyWith<$Res> {
  __$$CircularProgressIndicatorCopyWithImpl(_$CircularProgressIndicator _value,
      $Res Function(_$CircularProgressIndicator) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? value = freezed,
    Object? backgroundColor = freezed,
    Object? color = freezed,
    Object? strokeWidth = null,
    Object? semanticsLabel = freezed,
    Object? semanticsValue = freezed,
  }) {
    return _then(_$CircularProgressIndicator(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      value: freezed == value
          ? _value.value
          : value // ignore: cast_nullable_to_non_nullable
              as double?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      strokeWidth: null == strokeWidth
          ? _value.strokeWidth
          : strokeWidth // ignore: cast_nullable_to_non_nullable
              as double,
      semanticsLabel: freezed == semanticsLabel
          ? _value.semanticsLabel
          : semanticsLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      semanticsValue: freezed == semanticsValue
          ? _value.semanticsValue
          : semanticsValue // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$CircularProgressIndicator implements CircularProgressIndicator {
  const _$CircularProgressIndicator(
      {this.key,
      this.value,
      this.backgroundColor,
      this.color,
      this.strokeWidth = 4.0,
      this.semanticsLabel,
      this.semanticsValue,
      final String? $type})
      : $type = $type ?? 'circularProgressIndicator';

  factory _$CircularProgressIndicator.fromJson(Map<String, dynamic> json) =>
      _$$CircularProgressIndicatorFromJson(json);

  @override
  final Key? key;
  @override
  final double? value;
  @override
  final Color? backgroundColor;
  @override
  final Color? color;
  @override
  @JsonKey()
  final double strokeWidth;
  @override
  final String? semanticsLabel;
  @override
  final String? semanticsValue;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.circularProgressIndicator(key: $key, value: $value, backgroundColor: $backgroundColor, color: $color, strokeWidth: $strokeWidth, semanticsLabel: $semanticsLabel, semanticsValue: $semanticsValue)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CircularProgressIndicator &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.value, value) || other.value == value) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.strokeWidth, strokeWidth) ||
                other.strokeWidth == strokeWidth) &&
            (identical(other.semanticsLabel, semanticsLabel) ||
                other.semanticsLabel == semanticsLabel) &&
            (identical(other.semanticsValue, semanticsValue) ||
                other.semanticsValue == semanticsValue));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, key, value, backgroundColor,
      color, strokeWidth, semanticsLabel, semanticsValue);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CircularProgressIndicatorCopyWith<_$CircularProgressIndicator>
      get copyWith => __$$CircularProgressIndicatorCopyWithImpl<
          _$CircularProgressIndicator>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return circularProgressIndicator(key, value, backgroundColor, color,
        strokeWidth, semanticsLabel, semanticsValue);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return circularProgressIndicator?.call(key, value, backgroundColor, color,
        strokeWidth, semanticsLabel, semanticsValue);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (circularProgressIndicator != null) {
      return circularProgressIndicator(key, value, backgroundColor, color,
          strokeWidth, semanticsLabel, semanticsValue);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return circularProgressIndicator(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return circularProgressIndicator?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (circularProgressIndicator != null) {
      return circularProgressIndicator(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CircularProgressIndicatorToJson(
      this,
    );
  }
}

abstract class CircularProgressIndicator implements Widget {
  const factory CircularProgressIndicator(
      {final Key? key,
      final double? value,
      final Color? backgroundColor,
      final Color? color,
      final double strokeWidth,
      final String? semanticsLabel,
      final String? semanticsValue}) = _$CircularProgressIndicator;

  factory CircularProgressIndicator.fromJson(Map<String, dynamic> json) =
      _$CircularProgressIndicator.fromJson;

  @override
  Key? get key;
  double? get value;
  Color? get backgroundColor;
  Color? get color;
  double get strokeWidth;
  String? get semanticsLabel;
  String? get semanticsValue;
  @override
  @JsonKey(ignore: true)
  _$$CircularProgressIndicatorCopyWith<_$CircularProgressIndicator>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LinearProgressIndicatorCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$LinearProgressIndicatorCopyWith(_$LinearProgressIndicator value,
          $Res Function(_$LinearProgressIndicator) then) =
      __$$LinearProgressIndicatorCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      double? value,
      Color? backgroundColor,
      Color? color,
      double? minHeight,
      String? semanticsLabel,
      String? semanticsValue});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get color;
}

/// @nodoc
class __$$LinearProgressIndicatorCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$LinearProgressIndicator>
    implements _$$LinearProgressIndicatorCopyWith<$Res> {
  __$$LinearProgressIndicatorCopyWithImpl(_$LinearProgressIndicator _value,
      $Res Function(_$LinearProgressIndicator) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? value = freezed,
    Object? backgroundColor = freezed,
    Object? color = freezed,
    Object? minHeight = freezed,
    Object? semanticsLabel = freezed,
    Object? semanticsValue = freezed,
  }) {
    return _then(_$LinearProgressIndicator(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      value: freezed == value
          ? _value.value
          : value // ignore: cast_nullable_to_non_nullable
              as double?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      minHeight: freezed == minHeight
          ? _value.minHeight
          : minHeight // ignore: cast_nullable_to_non_nullable
              as double?,
      semanticsLabel: freezed == semanticsLabel
          ? _value.semanticsLabel
          : semanticsLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      semanticsValue: freezed == semanticsValue
          ? _value.semanticsValue
          : semanticsValue // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$LinearProgressIndicator implements LinearProgressIndicator {
  const _$LinearProgressIndicator(
      {this.key,
      this.value,
      this.backgroundColor,
      this.color,
      this.minHeight,
      this.semanticsLabel,
      this.semanticsValue,
      final String? $type})
      : $type = $type ?? 'linearProgressIndicator';

  factory _$LinearProgressIndicator.fromJson(Map<String, dynamic> json) =>
      _$$LinearProgressIndicatorFromJson(json);

  @override
  final Key? key;
  @override
  final double? value;
  @override
  final Color? backgroundColor;
  @override
  final Color? color;
  @override
  final double? minHeight;
  @override
  final String? semanticsLabel;
  @override
  final String? semanticsValue;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.linearProgressIndicator(key: $key, value: $value, backgroundColor: $backgroundColor, color: $color, minHeight: $minHeight, semanticsLabel: $semanticsLabel, semanticsValue: $semanticsValue)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LinearProgressIndicator &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.value, value) || other.value == value) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.minHeight, minHeight) ||
                other.minHeight == minHeight) &&
            (identical(other.semanticsLabel, semanticsLabel) ||
                other.semanticsLabel == semanticsLabel) &&
            (identical(other.semanticsValue, semanticsValue) ||
                other.semanticsValue == semanticsValue));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, key, value, backgroundColor,
      color, minHeight, semanticsLabel, semanticsValue);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$LinearProgressIndicatorCopyWith<_$LinearProgressIndicator> get copyWith =>
      __$$LinearProgressIndicatorCopyWithImpl<_$LinearProgressIndicator>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return linearProgressIndicator(key, value, backgroundColor, color,
        minHeight, semanticsLabel, semanticsValue);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return linearProgressIndicator?.call(key, value, backgroundColor, color,
        minHeight, semanticsLabel, semanticsValue);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (linearProgressIndicator != null) {
      return linearProgressIndicator(key, value, backgroundColor, color,
          minHeight, semanticsLabel, semanticsValue);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return linearProgressIndicator(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return linearProgressIndicator?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (linearProgressIndicator != null) {
      return linearProgressIndicator(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$LinearProgressIndicatorToJson(
      this,
    );
  }
}

abstract class LinearProgressIndicator implements Widget {
  const factory LinearProgressIndicator(
      {final Key? key,
      final double? value,
      final Color? backgroundColor,
      final Color? color,
      final double? minHeight,
      final String? semanticsLabel,
      final String? semanticsValue}) = _$LinearProgressIndicator;

  factory LinearProgressIndicator.fromJson(Map<String, dynamic> json) =
      _$LinearProgressIndicator.fromJson;

  @override
  Key? get key;
  double? get value;
  Color? get backgroundColor;
  Color? get color;
  double? get minHeight;
  String? get semanticsLabel;
  String? get semanticsValue;
  @override
  @JsonKey(ignore: true)
  _$$LinearProgressIndicatorCopyWith<_$LinearProgressIndicator> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DividerCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$DividerCopyWith(_$Divider value, $Res Function(_$Divider) then) =
      __$$DividerCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      double? height,
      double? thickness,
      double? indent,
      double? endIndent,
      Color? color});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get color;
}

/// @nodoc
class __$$DividerCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$Divider>
    implements _$$DividerCopyWith<$Res> {
  __$$DividerCopyWithImpl(_$Divider _value, $Res Function(_$Divider) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? height = freezed,
    Object? thickness = freezed,
    Object? indent = freezed,
    Object? endIndent = freezed,
    Object? color = freezed,
  }) {
    return _then(_$Divider(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
      thickness: freezed == thickness
          ? _value.thickness
          : thickness // ignore: cast_nullable_to_non_nullable
              as double?,
      indent: freezed == indent
          ? _value.indent
          : indent // ignore: cast_nullable_to_non_nullable
              as double?,
      endIndent: freezed == endIndent
          ? _value.endIndent
          : endIndent // ignore: cast_nullable_to_non_nullable
              as double?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Divider implements Divider {
  const _$Divider(
      {this.key,
      this.height,
      this.thickness,
      this.indent,
      this.endIndent,
      this.color,
      final String? $type})
      : $type = $type ?? 'divider';

  factory _$Divider.fromJson(Map<String, dynamic> json) =>
      _$$DividerFromJson(json);

  @override
  final Key? key;
  @override
  final double? height;
  @override
  final double? thickness;
  @override
  final double? indent;
  @override
  final double? endIndent;
  @override
  final Color? color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.divider(key: $key, height: $height, thickness: $thickness, indent: $indent, endIndent: $endIndent, color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Divider &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.height, height) || other.height == height) &&
            (identical(other.thickness, thickness) ||
                other.thickness == thickness) &&
            (identical(other.indent, indent) || other.indent == indent) &&
            (identical(other.endIndent, endIndent) ||
                other.endIndent == endIndent) &&
            (identical(other.color, color) || other.color == color));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, height, thickness, indent, endIndent, color);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DividerCopyWith<_$Divider> get copyWith =>
      __$$DividerCopyWithImpl<_$Divider>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return divider(key, height, thickness, indent, endIndent, color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return divider?.call(key, height, thickness, indent, endIndent, color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (divider != null) {
      return divider(key, height, thickness, indent, endIndent, color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return divider(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return divider?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (divider != null) {
      return divider(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DividerToJson(
      this,
    );
  }
}

abstract class Divider implements Widget {
  const factory Divider(
      {final Key? key,
      final double? height,
      final double? thickness,
      final double? indent,
      final double? endIndent,
      final Color? color}) = _$Divider;

  factory Divider.fromJson(Map<String, dynamic> json) = _$Divider.fromJson;

  @override
  Key? get key;
  double? get height;
  double? get thickness;
  double? get indent;
  double? get endIndent;
  Color? get color;
  @override
  @JsonKey(ignore: true)
  _$$DividerCopyWith<_$Divider> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NavigationRailCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$NavigationRailCopyWith(
          _$NavigationRail value, $Res Function(_$NavigationRail) then) =
      __$$NavigationRailCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Color? backgroundColor,
      bool extended,
      Widget? leading,
      Widget? trailing,
      List<NavigationRailDestination> destinations,
      int? selectedIndex,
      IntSelectionCallback? onDestinationSelected,
      double? elevation,
      double? groupAlignment,
      NavigationRailLabelType? labelType,
      TextStyle? unselectedLabelTextStyle,
      TextStyle? selectedLabelTextStyle,
      IconThemeData? unselectedIconTheme,
      IconThemeData? selectedIconTheme,
      double? minWidth,
      double? minExtendedWidth,
      bool? useIndicator,
      Color? indicatorColor,
      ShapeBorder? indicatorShape});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $WidgetCopyWith<$Res>? get leading;
  $WidgetCopyWith<$Res>? get trailing;
  $TextStyleCopyWith<$Res>? get unselectedLabelTextStyle;
  $TextStyleCopyWith<$Res>? get selectedLabelTextStyle;
  $IconThemeDataCopyWith<$Res>? get unselectedIconTheme;
  $IconThemeDataCopyWith<$Res>? get selectedIconTheme;
  $ColorCopyWith<$Res>? get indicatorColor;
  $ShapeBorderCopyWith<$Res>? get indicatorShape;
}

/// @nodoc
class __$$NavigationRailCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$NavigationRail>
    implements _$$NavigationRailCopyWith<$Res> {
  __$$NavigationRailCopyWithImpl(
      _$NavigationRail _value, $Res Function(_$NavigationRail) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? backgroundColor = freezed,
    Object? extended = null,
    Object? leading = freezed,
    Object? trailing = freezed,
    Object? destinations = null,
    Object? selectedIndex = freezed,
    Object? onDestinationSelected = freezed,
    Object? elevation = freezed,
    Object? groupAlignment = freezed,
    Object? labelType = freezed,
    Object? unselectedLabelTextStyle = freezed,
    Object? selectedLabelTextStyle = freezed,
    Object? unselectedIconTheme = freezed,
    Object? selectedIconTheme = freezed,
    Object? minWidth = freezed,
    Object? minExtendedWidth = freezed,
    Object? useIndicator = freezed,
    Object? indicatorColor = freezed,
    Object? indicatorShape = freezed,
  }) {
    return _then(_$NavigationRail(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      extended: null == extended
          ? _value.extended
          : extended // ignore: cast_nullable_to_non_nullable
              as bool,
      leading: freezed == leading
          ? _value.leading
          : leading // ignore: cast_nullable_to_non_nullable
              as Widget?,
      trailing: freezed == trailing
          ? _value.trailing
          : trailing // ignore: cast_nullable_to_non_nullable
              as Widget?,
      destinations: null == destinations
          ? _value._destinations
          : destinations // ignore: cast_nullable_to_non_nullable
              as List<NavigationRailDestination>,
      selectedIndex: freezed == selectedIndex
          ? _value.selectedIndex
          : selectedIndex // ignore: cast_nullable_to_non_nullable
              as int?,
      onDestinationSelected: freezed == onDestinationSelected
          ? _value.onDestinationSelected
          : onDestinationSelected // ignore: cast_nullable_to_non_nullable
              as IntSelectionCallback?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      groupAlignment: freezed == groupAlignment
          ? _value.groupAlignment
          : groupAlignment // ignore: cast_nullable_to_non_nullable
              as double?,
      labelType: freezed == labelType
          ? _value.labelType
          : labelType // ignore: cast_nullable_to_non_nullable
              as NavigationRailLabelType?,
      unselectedLabelTextStyle: freezed == unselectedLabelTextStyle
          ? _value.unselectedLabelTextStyle
          : unselectedLabelTextStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      selectedLabelTextStyle: freezed == selectedLabelTextStyle
          ? _value.selectedLabelTextStyle
          : selectedLabelTextStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      unselectedIconTheme: freezed == unselectedIconTheme
          ? _value.unselectedIconTheme
          : unselectedIconTheme // ignore: cast_nullable_to_non_nullable
              as IconThemeData?,
      selectedIconTheme: freezed == selectedIconTheme
          ? _value.selectedIconTheme
          : selectedIconTheme // ignore: cast_nullable_to_non_nullable
              as IconThemeData?,
      minWidth: freezed == minWidth
          ? _value.minWidth
          : minWidth // ignore: cast_nullable_to_non_nullable
              as double?,
      minExtendedWidth: freezed == minExtendedWidth
          ? _value.minExtendedWidth
          : minExtendedWidth // ignore: cast_nullable_to_non_nullable
              as double?,
      useIndicator: freezed == useIndicator
          ? _value.useIndicator
          : useIndicator // ignore: cast_nullable_to_non_nullable
              as bool?,
      indicatorColor: freezed == indicatorColor
          ? _value.indicatorColor
          : indicatorColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      indicatorShape: freezed == indicatorShape
          ? _value.indicatorShape
          : indicatorShape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get leading {
    if (_value.leading == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.leading!, (value) {
      return _then(_value.copyWith(leading: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get trailing {
    if (_value.trailing == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.trailing!, (value) {
      return _then(_value.copyWith(trailing: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get unselectedLabelTextStyle {
    if (_value.unselectedLabelTextStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.unselectedLabelTextStyle!, (value) {
      return _then(_value.copyWith(unselectedLabelTextStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get selectedLabelTextStyle {
    if (_value.selectedLabelTextStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.selectedLabelTextStyle!, (value) {
      return _then(_value.copyWith(selectedLabelTextStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $IconThemeDataCopyWith<$Res>? get unselectedIconTheme {
    if (_value.unselectedIconTheme == null) {
      return null;
    }

    return $IconThemeDataCopyWith<$Res>(_value.unselectedIconTheme!, (value) {
      return _then(_value.copyWith(unselectedIconTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $IconThemeDataCopyWith<$Res>? get selectedIconTheme {
    if (_value.selectedIconTheme == null) {
      return null;
    }

    return $IconThemeDataCopyWith<$Res>(_value.selectedIconTheme!, (value) {
      return _then(_value.copyWith(selectedIconTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get indicatorColor {
    if (_value.indicatorColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.indicatorColor!, (value) {
      return _then(_value.copyWith(indicatorColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get indicatorShape {
    if (_value.indicatorShape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.indicatorShape!, (value) {
      return _then(_value.copyWith(indicatorShape: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$NavigationRail implements NavigationRail {
  const _$NavigationRail(
      {this.key,
      this.backgroundColor,
      this.extended = false,
      this.leading,
      this.trailing,
      required final List<NavigationRailDestination> destinations,
      required this.selectedIndex,
      this.onDestinationSelected,
      this.elevation,
      this.groupAlignment,
      this.labelType,
      this.unselectedLabelTextStyle,
      this.selectedLabelTextStyle,
      this.unselectedIconTheme,
      this.selectedIconTheme,
      this.minWidth,
      this.minExtendedWidth,
      this.useIndicator,
      this.indicatorColor,
      this.indicatorShape,
      final String? $type})
      : _destinations = destinations,
        $type = $type ?? 'navigationRail';

  factory _$NavigationRail.fromJson(Map<String, dynamic> json) =>
      _$$NavigationRailFromJson(json);

  @override
  final Key? key;
  @override
  final Color? backgroundColor;
  @override
  @JsonKey()
  final bool extended;
  @override
  final Widget? leading;
  @override
  final Widget? trailing;
  final List<NavigationRailDestination> _destinations;
  @override
  List<NavigationRailDestination> get destinations {
    if (_destinations is EqualUnmodifiableListView) return _destinations;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_destinations);
  }

  @override
  final int? selectedIndex;
  @override
  final IntSelectionCallback? onDestinationSelected;
  @override
  final double? elevation;
  @override
  final double? groupAlignment;
  @override
  final NavigationRailLabelType? labelType;
  @override
  final TextStyle? unselectedLabelTextStyle;
  @override
  final TextStyle? selectedLabelTextStyle;
  @override
  final IconThemeData? unselectedIconTheme;
  @override
  final IconThemeData? selectedIconTheme;
  @override
  final double? minWidth;
  @override
  final double? minExtendedWidth;
  @override
  final bool? useIndicator;
  @override
  final Color? indicatorColor;
  @override
  final ShapeBorder? indicatorShape;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.navigationRail(key: $key, backgroundColor: $backgroundColor, extended: $extended, leading: $leading, trailing: $trailing, destinations: $destinations, selectedIndex: $selectedIndex, onDestinationSelected: $onDestinationSelected, elevation: $elevation, groupAlignment: $groupAlignment, labelType: $labelType, unselectedLabelTextStyle: $unselectedLabelTextStyle, selectedLabelTextStyle: $selectedLabelTextStyle, unselectedIconTheme: $unselectedIconTheme, selectedIconTheme: $selectedIconTheme, minWidth: $minWidth, minExtendedWidth: $minExtendedWidth, useIndicator: $useIndicator, indicatorColor: $indicatorColor, indicatorShape: $indicatorShape)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NavigationRail &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.extended, extended) ||
                other.extended == extended) &&
            (identical(other.leading, leading) || other.leading == leading) &&
            (identical(other.trailing, trailing) ||
                other.trailing == trailing) &&
            const DeepCollectionEquality()
                .equals(other._destinations, _destinations) &&
            (identical(other.selectedIndex, selectedIndex) ||
                other.selectedIndex == selectedIndex) &&
            const DeepCollectionEquality()
                .equals(other.onDestinationSelected, onDestinationSelected) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.groupAlignment, groupAlignment) ||
                other.groupAlignment == groupAlignment) &&
            (identical(other.labelType, labelType) ||
                other.labelType == labelType) &&
            (identical(
                    other.unselectedLabelTextStyle, unselectedLabelTextStyle) ||
                other.unselectedLabelTextStyle == unselectedLabelTextStyle) &&
            (identical(other.selectedLabelTextStyle, selectedLabelTextStyle) ||
                other.selectedLabelTextStyle == selectedLabelTextStyle) &&
            (identical(other.unselectedIconTheme, unselectedIconTheme) ||
                other.unselectedIconTheme == unselectedIconTheme) &&
            (identical(other.selectedIconTheme, selectedIconTheme) ||
                other.selectedIconTheme == selectedIconTheme) &&
            (identical(other.minWidth, minWidth) ||
                other.minWidth == minWidth) &&
            (identical(other.minExtendedWidth, minExtendedWidth) ||
                other.minExtendedWidth == minExtendedWidth) &&
            (identical(other.useIndicator, useIndicator) ||
                other.useIndicator == useIndicator) &&
            (identical(other.indicatorColor, indicatorColor) ||
                other.indicatorColor == indicatorColor) &&
            (identical(other.indicatorShape, indicatorShape) ||
                other.indicatorShape == indicatorShape));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        backgroundColor,
        extended,
        leading,
        trailing,
        const DeepCollectionEquality().hash(_destinations),
        selectedIndex,
        const DeepCollectionEquality().hash(onDestinationSelected),
        elevation,
        groupAlignment,
        labelType,
        unselectedLabelTextStyle,
        selectedLabelTextStyle,
        unselectedIconTheme,
        selectedIconTheme,
        minWidth,
        minExtendedWidth,
        useIndicator,
        indicatorColor,
        indicatorShape
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NavigationRailCopyWith<_$NavigationRail> get copyWith =>
      __$$NavigationRailCopyWithImpl<_$NavigationRail>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return navigationRail(
        key,
        backgroundColor,
        extended,
        leading,
        trailing,
        destinations,
        selectedIndex,
        onDestinationSelected,
        elevation,
        groupAlignment,
        labelType,
        unselectedLabelTextStyle,
        selectedLabelTextStyle,
        unselectedIconTheme,
        selectedIconTheme,
        minWidth,
        minExtendedWidth,
        useIndicator,
        indicatorColor,
        indicatorShape);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return navigationRail?.call(
        key,
        backgroundColor,
        extended,
        leading,
        trailing,
        destinations,
        selectedIndex,
        onDestinationSelected,
        elevation,
        groupAlignment,
        labelType,
        unselectedLabelTextStyle,
        selectedLabelTextStyle,
        unselectedIconTheme,
        selectedIconTheme,
        minWidth,
        minExtendedWidth,
        useIndicator,
        indicatorColor,
        indicatorShape);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationRail != null) {
      return navigationRail(
          key,
          backgroundColor,
          extended,
          leading,
          trailing,
          destinations,
          selectedIndex,
          onDestinationSelected,
          elevation,
          groupAlignment,
          labelType,
          unselectedLabelTextStyle,
          selectedLabelTextStyle,
          unselectedIconTheme,
          selectedIconTheme,
          minWidth,
          minExtendedWidth,
          useIndicator,
          indicatorColor,
          indicatorShape);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return navigationRail(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return navigationRail?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationRail != null) {
      return navigationRail(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NavigationRailToJson(
      this,
    );
  }
}

abstract class NavigationRail implements Widget {
  const factory NavigationRail(
      {final Key? key,
      final Color? backgroundColor,
      final bool extended,
      final Widget? leading,
      final Widget? trailing,
      required final List<NavigationRailDestination> destinations,
      required final int? selectedIndex,
      final IntSelectionCallback? onDestinationSelected,
      final double? elevation,
      final double? groupAlignment,
      final NavigationRailLabelType? labelType,
      final TextStyle? unselectedLabelTextStyle,
      final TextStyle? selectedLabelTextStyle,
      final IconThemeData? unselectedIconTheme,
      final IconThemeData? selectedIconTheme,
      final double? minWidth,
      final double? minExtendedWidth,
      final bool? useIndicator,
      final Color? indicatorColor,
      final ShapeBorder? indicatorShape}) = _$NavigationRail;

  factory NavigationRail.fromJson(Map<String, dynamic> json) =
      _$NavigationRail.fromJson;

  @override
  Key? get key;
  Color? get backgroundColor;
  bool get extended;
  Widget? get leading;
  Widget? get trailing;
  List<NavigationRailDestination> get destinations;
  int? get selectedIndex;
  IntSelectionCallback? get onDestinationSelected;
  double? get elevation;
  double? get groupAlignment;
  NavigationRailLabelType? get labelType;
  TextStyle? get unselectedLabelTextStyle;
  TextStyle? get selectedLabelTextStyle;
  IconThemeData? get unselectedIconTheme;
  IconThemeData? get selectedIconTheme;
  double? get minWidth;
  double? get minExtendedWidth;
  bool? get useIndicator;
  Color? get indicatorColor;
  ShapeBorder? get indicatorShape;
  @override
  @JsonKey(ignore: true)
  _$$NavigationRailCopyWith<_$NavigationRail> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NavigationBarCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$NavigationBarCopyWith(
          _$NavigationBar value, $Res Function(_$NavigationBar) then) =
      __$$NavigationBarCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Duration? animationDuration,
      int selectedIndex,
      List<Widget> destinations,
      IntSelectionCallback? onDestinationSelected,
      Color? backgroundColor,
      double? elevation,
      Color? shadowColor,
      Color? surfaceTintColor,
      Color? indicatorColor,
      ShapeBorder? indicatorShape,
      double? height,
      NavigationDestinationLabelBehavior? labelBehavior});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $ColorCopyWith<$Res>? get indicatorColor;
  $ShapeBorderCopyWith<$Res>? get indicatorShape;
}

/// @nodoc
class __$$NavigationBarCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$NavigationBar>
    implements _$$NavigationBarCopyWith<$Res> {
  __$$NavigationBarCopyWithImpl(
      _$NavigationBar _value, $Res Function(_$NavigationBar) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? animationDuration = freezed,
    Object? selectedIndex = null,
    Object? destinations = null,
    Object? onDestinationSelected = freezed,
    Object? backgroundColor = freezed,
    Object? elevation = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? indicatorColor = freezed,
    Object? indicatorShape = freezed,
    Object? height = freezed,
    Object? labelBehavior = freezed,
  }) {
    return _then(_$NavigationBar(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      animationDuration: freezed == animationDuration
          ? _value.animationDuration
          : animationDuration // ignore: cast_nullable_to_non_nullable
              as Duration?,
      selectedIndex: null == selectedIndex
          ? _value.selectedIndex
          : selectedIndex // ignore: cast_nullable_to_non_nullable
              as int,
      destinations: null == destinations
          ? _value._destinations
          : destinations // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
      onDestinationSelected: freezed == onDestinationSelected
          ? _value.onDestinationSelected
          : onDestinationSelected // ignore: cast_nullable_to_non_nullable
              as IntSelectionCallback?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      indicatorColor: freezed == indicatorColor
          ? _value.indicatorColor
          : indicatorColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      indicatorShape: freezed == indicatorShape
          ? _value.indicatorShape
          : indicatorShape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
      labelBehavior: freezed == labelBehavior
          ? _value.labelBehavior
          : labelBehavior // ignore: cast_nullable_to_non_nullable
              as NavigationDestinationLabelBehavior?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get indicatorColor {
    if (_value.indicatorColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.indicatorColor!, (value) {
      return _then(_value.copyWith(indicatorColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get indicatorShape {
    if (_value.indicatorShape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.indicatorShape!, (value) {
      return _then(_value.copyWith(indicatorShape: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$NavigationBar implements NavigationBar {
  const _$NavigationBar(
      {this.key,
      this.animationDuration,
      this.selectedIndex = 0,
      required final List<Widget> destinations,
      this.onDestinationSelected,
      this.backgroundColor,
      this.elevation,
      this.shadowColor,
      this.surfaceTintColor,
      this.indicatorColor,
      this.indicatorShape,
      this.height,
      this.labelBehavior,
      final String? $type})
      : _destinations = destinations,
        $type = $type ?? 'navigationBar';

  factory _$NavigationBar.fromJson(Map<String, dynamic> json) =>
      _$$NavigationBarFromJson(json);

  @override
  final Key? key;
  @override
  final Duration? animationDuration;
  @override
  @JsonKey()
  final int selectedIndex;
  final List<Widget> _destinations;
  @override
  List<Widget> get destinations {
    if (_destinations is EqualUnmodifiableListView) return _destinations;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_destinations);
  }

  @override
  final IntSelectionCallback? onDestinationSelected;
  @override
  final Color? backgroundColor;
  @override
  final double? elevation;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final Color? indicatorColor;
  @override
  final ShapeBorder? indicatorShape;
  @override
  final double? height;
  @override
  final NavigationDestinationLabelBehavior? labelBehavior;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.navigationBar(key: $key, animationDuration: $animationDuration, selectedIndex: $selectedIndex, destinations: $destinations, onDestinationSelected: $onDestinationSelected, backgroundColor: $backgroundColor, elevation: $elevation, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, indicatorColor: $indicatorColor, indicatorShape: $indicatorShape, height: $height, labelBehavior: $labelBehavior)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NavigationBar &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.animationDuration, animationDuration) ||
                other.animationDuration == animationDuration) &&
            (identical(other.selectedIndex, selectedIndex) ||
                other.selectedIndex == selectedIndex) &&
            const DeepCollectionEquality()
                .equals(other._destinations, _destinations) &&
            const DeepCollectionEquality()
                .equals(other.onDestinationSelected, onDestinationSelected) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.indicatorColor, indicatorColor) ||
                other.indicatorColor == indicatorColor) &&
            (identical(other.indicatorShape, indicatorShape) ||
                other.indicatorShape == indicatorShape) &&
            (identical(other.height, height) || other.height == height) &&
            (identical(other.labelBehavior, labelBehavior) ||
                other.labelBehavior == labelBehavior));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      animationDuration,
      selectedIndex,
      const DeepCollectionEquality().hash(_destinations),
      const DeepCollectionEquality().hash(onDestinationSelected),
      backgroundColor,
      elevation,
      shadowColor,
      surfaceTintColor,
      indicatorColor,
      indicatorShape,
      height,
      labelBehavior);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NavigationBarCopyWith<_$NavigationBar> get copyWith =>
      __$$NavigationBarCopyWithImpl<_$NavigationBar>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return navigationBar(
        key,
        animationDuration,
        selectedIndex,
        destinations,
        onDestinationSelected,
        backgroundColor,
        elevation,
        shadowColor,
        surfaceTintColor,
        indicatorColor,
        indicatorShape,
        height,
        labelBehavior);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return navigationBar?.call(
        key,
        animationDuration,
        selectedIndex,
        destinations,
        onDestinationSelected,
        backgroundColor,
        elevation,
        shadowColor,
        surfaceTintColor,
        indicatorColor,
        indicatorShape,
        height,
        labelBehavior);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationBar != null) {
      return navigationBar(
          key,
          animationDuration,
          selectedIndex,
          destinations,
          onDestinationSelected,
          backgroundColor,
          elevation,
          shadowColor,
          surfaceTintColor,
          indicatorColor,
          indicatorShape,
          height,
          labelBehavior);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return navigationBar(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return navigationBar?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationBar != null) {
      return navigationBar(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NavigationBarToJson(
      this,
    );
  }
}

abstract class NavigationBar implements Widget {
  const factory NavigationBar(
          {final Key? key,
          final Duration? animationDuration,
          final int selectedIndex,
          required final List<Widget> destinations,
          final IntSelectionCallback? onDestinationSelected,
          final Color? backgroundColor,
          final double? elevation,
          final Color? shadowColor,
          final Color? surfaceTintColor,
          final Color? indicatorColor,
          final ShapeBorder? indicatorShape,
          final double? height,
          final NavigationDestinationLabelBehavior? labelBehavior}) =
      _$NavigationBar;

  factory NavigationBar.fromJson(Map<String, dynamic> json) =
      _$NavigationBar.fromJson;

  @override
  Key? get key;
  Duration? get animationDuration;
  int get selectedIndex;
  List<Widget> get destinations;
  IntSelectionCallback? get onDestinationSelected;
  Color? get backgroundColor;
  double? get elevation;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  Color? get indicatorColor;
  ShapeBorder? get indicatorShape;
  double? get height;
  NavigationDestinationLabelBehavior? get labelBehavior;
  @override
  @JsonKey(ignore: true)
  _$$NavigationBarCopyWith<_$NavigationBar> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DefaultTabControllerCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$DefaultTabControllerCopyWith(_$DefaultTabController value,
          $Res Function(_$DefaultTabController) then) =
      __$$DefaultTabControllerCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      int length,
      int initialIndex,
      Widget child,
      Duration? animationDuration});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$DefaultTabControllerCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$DefaultTabController>
    implements _$$DefaultTabControllerCopyWith<$Res> {
  __$$DefaultTabControllerCopyWithImpl(_$DefaultTabController _value,
      $Res Function(_$DefaultTabController) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? length = null,
    Object? initialIndex = null,
    Object? child = null,
    Object? animationDuration = freezed,
  }) {
    return _then(_$DefaultTabController(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      length: null == length
          ? _value.length
          : length // ignore: cast_nullable_to_non_nullable
              as int,
      initialIndex: null == initialIndex
          ? _value.initialIndex
          : initialIndex // ignore: cast_nullable_to_non_nullable
              as int,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
      animationDuration: freezed == animationDuration
          ? _value.animationDuration
          : animationDuration // ignore: cast_nullable_to_non_nullable
              as Duration?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$DefaultTabController implements DefaultTabController {
  const _$DefaultTabController(
      {this.key,
      required this.length,
      this.initialIndex = 0,
      required this.child,
      this.animationDuration,
      final String? $type})
      : $type = $type ?? 'defaultTabController';

  factory _$DefaultTabController.fromJson(Map<String, dynamic> json) =>
      _$$DefaultTabControllerFromJson(json);

  @override
  final Key? key;
  @override
  final int length;
  @override
  @JsonKey()
  final int initialIndex;
  @override
  final Widget child;
  @override
  final Duration? animationDuration;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.defaultTabController(key: $key, length: $length, initialIndex: $initialIndex, child: $child, animationDuration: $animationDuration)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DefaultTabController &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.length, length) || other.length == length) &&
            (identical(other.initialIndex, initialIndex) ||
                other.initialIndex == initialIndex) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.animationDuration, animationDuration) ||
                other.animationDuration == animationDuration));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, length, initialIndex, child, animationDuration);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DefaultTabControllerCopyWith<_$DefaultTabController> get copyWith =>
      __$$DefaultTabControllerCopyWithImpl<_$DefaultTabController>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return defaultTabController(
        key, length, initialIndex, child, animationDuration);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return defaultTabController?.call(
        key, length, initialIndex, child, animationDuration);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (defaultTabController != null) {
      return defaultTabController(
          key, length, initialIndex, child, animationDuration);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return defaultTabController(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return defaultTabController?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (defaultTabController != null) {
      return defaultTabController(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DefaultTabControllerToJson(
      this,
    );
  }
}

abstract class DefaultTabController implements Widget {
  const factory DefaultTabController(
      {final Key? key,
      required final int length,
      final int initialIndex,
      required final Widget child,
      final Duration? animationDuration}) = _$DefaultTabController;

  factory DefaultTabController.fromJson(Map<String, dynamic> json) =
      _$DefaultTabController.fromJson;

  @override
  Key? get key;
  int get length;
  int get initialIndex;
  Widget get child;
  Duration? get animationDuration;
  @override
  @JsonKey(ignore: true)
  _$$DefaultTabControllerCopyWith<_$DefaultTabController> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TabCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$TabCopyWith(_$Tab value, $Res Function(_$Tab) then) =
      __$$TabCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      String? text,
      Widget? icon,
      EdgeInsets iconMargin,
      double? height,
      Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get icon;
  $EdgeInsetsCopyWith<$Res> get iconMargin;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$TabCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Tab>
    implements _$$TabCopyWith<$Res> {
  __$$TabCopyWithImpl(_$Tab _value, $Res Function(_$Tab) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? text = freezed,
    Object? icon = freezed,
    Object? iconMargin = null,
    Object? height = freezed,
    Object? child = freezed,
  }) {
    return _then(_$Tab(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      text: freezed == text
          ? _value.text
          : text // ignore: cast_nullable_to_non_nullable
              as String?,
      icon: freezed == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      iconMargin: null == iconMargin
          ? _value.iconMargin
          : iconMargin // ignore: cast_nullable_to_non_nullable
              as EdgeInsets,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get icon {
    if (_value.icon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.icon!, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res> get iconMargin {
    return $EdgeInsetsCopyWith<$Res>(_value.iconMargin, (value) {
      return _then(_value.copyWith(iconMargin: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Tab implements Tab {
  const _$Tab(
      {this.key,
      this.text,
      this.icon,
      this.iconMargin = const EdgeInsets.only(bottom: 10.0),
      this.height,
      this.child,
      final String? $type})
      : $type = $type ?? 'tab';

  factory _$Tab.fromJson(Map<String, dynamic> json) => _$$TabFromJson(json);

  @override
  final Key? key;
  @override
  final String? text;
  @override
  final Widget? icon;
  @override
  @JsonKey()
  final EdgeInsets iconMargin;
  @override
  final double? height;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.tab(key: $key, text: $text, icon: $icon, iconMargin: $iconMargin, height: $height, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Tab &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.text, text) || other.text == text) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.iconMargin, iconMargin) ||
                other.iconMargin == iconMargin) &&
            (identical(other.height, height) || other.height == height) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, key, text, icon, iconMargin, height, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TabCopyWith<_$Tab> get copyWith =>
      __$$TabCopyWithImpl<_$Tab>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return tab(key, this.text, this.icon, iconMargin, height, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return tab?.call(key, this.text, this.icon, iconMargin, height, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (tab != null) {
      return tab(key, this.text, this.icon, iconMargin, height, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return tab(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return tab?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (tab != null) {
      return tab(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TabToJson(
      this,
    );
  }
}

abstract class Tab implements Widget {
  const factory Tab(
      {final Key? key,
      final String? text,
      final Widget? icon,
      final EdgeInsets iconMargin,
      final double? height,
      final Widget? child}) = _$Tab;

  factory Tab.fromJson(Map<String, dynamic> json) = _$Tab.fromJson;

  @override
  Key? get key;
  String? get text;
  Widget? get icon;
  EdgeInsets get iconMargin;
  double? get height;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$TabCopyWith<_$Tab> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TabBarViewCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$TabBarViewCopyWith(
          _$TabBarView value, $Res Function(_$TabBarView) then) =
      __$$TabBarViewCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      List<Widget> children,
      ScrollPhysics? physics,
      DragStartBehavior dragStartBehavior,
      double viewportFraction,
      Clip clipBehavior});

  @override
  $KeyCopyWith<$Res>? get key;
  $ScrollPhysicsCopyWith<$Res>? get physics;
}

/// @nodoc
class __$$TabBarViewCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$TabBarView>
    implements _$$TabBarViewCopyWith<$Res> {
  __$$TabBarViewCopyWithImpl(
      _$TabBarView _value, $Res Function(_$TabBarView) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? children = null,
    Object? physics = freezed,
    Object? dragStartBehavior = null,
    Object? viewportFraction = null,
    Object? clipBehavior = null,
  }) {
    return _then(_$TabBarView(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      children: null == children
          ? _value._children
          : children // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
      physics: freezed == physics
          ? _value.physics
          : physics // ignore: cast_nullable_to_non_nullable
              as ScrollPhysics?,
      dragStartBehavior: null == dragStartBehavior
          ? _value.dragStartBehavior
          : dragStartBehavior // ignore: cast_nullable_to_non_nullable
              as DragStartBehavior,
      viewportFraction: null == viewportFraction
          ? _value.viewportFraction
          : viewportFraction // ignore: cast_nullable_to_non_nullable
              as double,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ScrollPhysicsCopyWith<$Res>? get physics {
    if (_value.physics == null) {
      return null;
    }

    return $ScrollPhysicsCopyWith<$Res>(_value.physics!, (value) {
      return _then(_value.copyWith(physics: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$TabBarView implements TabBarView {
  const _$TabBarView(
      {this.key,
      required final List<Widget> children,
      this.physics,
      this.dragStartBehavior = DragStartBehavior.start,
      this.viewportFraction = 1.0,
      this.clipBehavior = Clip.hardEdge,
      final String? $type})
      : _children = children,
        $type = $type ?? 'tabBarView';

  factory _$TabBarView.fromJson(Map<String, dynamic> json) =>
      _$$TabBarViewFromJson(json);

  @override
  final Key? key;
  final List<Widget> _children;
  @override
  List<Widget> get children {
    if (_children is EqualUnmodifiableListView) return _children;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_children);
  }

  @override
  final ScrollPhysics? physics;
  @override
  @JsonKey()
  final DragStartBehavior dragStartBehavior;
  @override
  @JsonKey()
  final double viewportFraction;
  @override
  @JsonKey()
  final Clip clipBehavior;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.tabBarView(key: $key, children: $children, physics: $physics, dragStartBehavior: $dragStartBehavior, viewportFraction: $viewportFraction, clipBehavior: $clipBehavior)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TabBarView &&
            (identical(other.key, key) || other.key == key) &&
            const DeepCollectionEquality().equals(other._children, _children) &&
            (identical(other.physics, physics) || other.physics == physics) &&
            (identical(other.dragStartBehavior, dragStartBehavior) ||
                other.dragStartBehavior == dragStartBehavior) &&
            (identical(other.viewportFraction, viewportFraction) ||
                other.viewportFraction == viewportFraction) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      const DeepCollectionEquality().hash(_children),
      physics,
      dragStartBehavior,
      viewportFraction,
      clipBehavior);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TabBarViewCopyWith<_$TabBarView> get copyWith =>
      __$$TabBarViewCopyWithImpl<_$TabBarView>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return tabBarView(key, children, physics, dragStartBehavior,
        viewportFraction, clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return tabBarView?.call(key, children, physics, dragStartBehavior,
        viewportFraction, clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (tabBarView != null) {
      return tabBarView(key, children, physics, dragStartBehavior,
          viewportFraction, clipBehavior);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return tabBarView(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return tabBarView?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (tabBarView != null) {
      return tabBarView(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TabBarViewToJson(
      this,
    );
  }
}

abstract class TabBarView implements Widget {
  const factory TabBarView(
      {final Key? key,
      required final List<Widget> children,
      final ScrollPhysics? physics,
      final DragStartBehavior dragStartBehavior,
      final double viewportFraction,
      final Clip clipBehavior}) = _$TabBarView;

  factory TabBarView.fromJson(Map<String, dynamic> json) =
      _$TabBarView.fromJson;

  @override
  Key? get key;
  List<Widget> get children;
  ScrollPhysics? get physics;
  DragStartBehavior get dragStartBehavior;
  double get viewportFraction;
  Clip get clipBehavior;
  @override
  @JsonKey(ignore: true)
  _$$TabBarViewCopyWith<_$TabBarView> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CustomScrollViewCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$CustomScrollViewCopyWith(
          _$CustomScrollView value, $Res Function(_$CustomScrollView) then) =
      __$$CustomScrollViewCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Axis scrollDirection,
      bool reverse,
      bool? primary,
      ScrollPhysics? physics,
      bool shrinkWrap,
      Key? center,
      double anchor,
      double? cacheExtent,
      List<Sliver> slivers,
      int? semanticChildCount,
      ScrollViewKeyboardDismissBehavior keyboardDismissBehavior,
      String? restorationId,
      Clip clipBehavior});

  @override
  $KeyCopyWith<$Res>? get key;
  $ScrollPhysicsCopyWith<$Res>? get physics;
  $KeyCopyWith<$Res>? get center;
}

/// @nodoc
class __$$CustomScrollViewCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$CustomScrollView>
    implements _$$CustomScrollViewCopyWith<$Res> {
  __$$CustomScrollViewCopyWithImpl(
      _$CustomScrollView _value, $Res Function(_$CustomScrollView) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? scrollDirection = null,
    Object? reverse = null,
    Object? primary = freezed,
    Object? physics = freezed,
    Object? shrinkWrap = null,
    Object? center = freezed,
    Object? anchor = null,
    Object? cacheExtent = freezed,
    Object? slivers = null,
    Object? semanticChildCount = freezed,
    Object? keyboardDismissBehavior = null,
    Object? restorationId = freezed,
    Object? clipBehavior = null,
  }) {
    return _then(_$CustomScrollView(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      scrollDirection: null == scrollDirection
          ? _value.scrollDirection
          : scrollDirection // ignore: cast_nullable_to_non_nullable
              as Axis,
      reverse: null == reverse
          ? _value.reverse
          : reverse // ignore: cast_nullable_to_non_nullable
              as bool,
      primary: freezed == primary
          ? _value.primary
          : primary // ignore: cast_nullable_to_non_nullable
              as bool?,
      physics: freezed == physics
          ? _value.physics
          : physics // ignore: cast_nullable_to_non_nullable
              as ScrollPhysics?,
      shrinkWrap: null == shrinkWrap
          ? _value.shrinkWrap
          : shrinkWrap // ignore: cast_nullable_to_non_nullable
              as bool,
      center: freezed == center
          ? _value.center
          : center // ignore: cast_nullable_to_non_nullable
              as Key?,
      anchor: null == anchor
          ? _value.anchor
          : anchor // ignore: cast_nullable_to_non_nullable
              as double,
      cacheExtent: freezed == cacheExtent
          ? _value.cacheExtent
          : cacheExtent // ignore: cast_nullable_to_non_nullable
              as double?,
      slivers: null == slivers
          ? _value._slivers
          : slivers // ignore: cast_nullable_to_non_nullable
              as List<Sliver>,
      semanticChildCount: freezed == semanticChildCount
          ? _value.semanticChildCount
          : semanticChildCount // ignore: cast_nullable_to_non_nullable
              as int?,
      keyboardDismissBehavior: null == keyboardDismissBehavior
          ? _value.keyboardDismissBehavior
          : keyboardDismissBehavior // ignore: cast_nullable_to_non_nullable
              as ScrollViewKeyboardDismissBehavior,
      restorationId: freezed == restorationId
          ? _value.restorationId
          : restorationId // ignore: cast_nullable_to_non_nullable
              as String?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ScrollPhysicsCopyWith<$Res>? get physics {
    if (_value.physics == null) {
      return null;
    }

    return $ScrollPhysicsCopyWith<$Res>(_value.physics!, (value) {
      return _then(_value.copyWith(physics: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $KeyCopyWith<$Res>? get center {
    if (_value.center == null) {
      return null;
    }

    return $KeyCopyWith<$Res>(_value.center!, (value) {
      return _then(_value.copyWith(center: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$CustomScrollView implements CustomScrollView {
  const _$CustomScrollView(
      {this.key,
      this.scrollDirection = Axis.vertical,
      this.reverse = false,
      this.primary,
      this.physics,
      this.shrinkWrap = false,
      this.center,
      this.anchor = 0.0,
      this.cacheExtent,
      final List<Sliver> slivers = const [],
      this.semanticChildCount,
      this.keyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual,
      this.restorationId,
      this.clipBehavior = Clip.hardEdge,
      final String? $type})
      : _slivers = slivers,
        $type = $type ?? 'customScrollView';

  factory _$CustomScrollView.fromJson(Map<String, dynamic> json) =>
      _$$CustomScrollViewFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final Axis scrollDirection;
  @override
  @JsonKey()
  final bool reverse;
  @override
  final bool? primary;
  @override
  final ScrollPhysics? physics;
  @override
  @JsonKey()
  final bool shrinkWrap;
  @override
  final Key? center;
  @override
  @JsonKey()
  final double anchor;
  @override
  final double? cacheExtent;
  final List<Sliver> _slivers;
  @override
  @JsonKey()
  List<Sliver> get slivers {
    if (_slivers is EqualUnmodifiableListView) return _slivers;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_slivers);
  }

  @override
  final int? semanticChildCount;
  @override
  @JsonKey()
  final ScrollViewKeyboardDismissBehavior keyboardDismissBehavior;
  @override
  final String? restorationId;
  @override
  @JsonKey()
  final Clip clipBehavior;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.customScrollView(key: $key, scrollDirection: $scrollDirection, reverse: $reverse, primary: $primary, physics: $physics, shrinkWrap: $shrinkWrap, center: $center, anchor: $anchor, cacheExtent: $cacheExtent, slivers: $slivers, semanticChildCount: $semanticChildCount, keyboardDismissBehavior: $keyboardDismissBehavior, restorationId: $restorationId, clipBehavior: $clipBehavior)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$CustomScrollView &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.scrollDirection, scrollDirection) ||
                other.scrollDirection == scrollDirection) &&
            (identical(other.reverse, reverse) || other.reverse == reverse) &&
            (identical(other.primary, primary) || other.primary == primary) &&
            (identical(other.physics, physics) || other.physics == physics) &&
            (identical(other.shrinkWrap, shrinkWrap) ||
                other.shrinkWrap == shrinkWrap) &&
            (identical(other.center, center) || other.center == center) &&
            (identical(other.anchor, anchor) || other.anchor == anchor) &&
            (identical(other.cacheExtent, cacheExtent) ||
                other.cacheExtent == cacheExtent) &&
            const DeepCollectionEquality().equals(other._slivers, _slivers) &&
            (identical(other.semanticChildCount, semanticChildCount) ||
                other.semanticChildCount == semanticChildCount) &&
            (identical(
                    other.keyboardDismissBehavior, keyboardDismissBehavior) ||
                other.keyboardDismissBehavior == keyboardDismissBehavior) &&
            (identical(other.restorationId, restorationId) ||
                other.restorationId == restorationId) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      scrollDirection,
      reverse,
      primary,
      physics,
      shrinkWrap,
      center,
      anchor,
      cacheExtent,
      const DeepCollectionEquality().hash(_slivers),
      semanticChildCount,
      keyboardDismissBehavior,
      restorationId,
      clipBehavior);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CustomScrollViewCopyWith<_$CustomScrollView> get copyWith =>
      __$$CustomScrollViewCopyWithImpl<_$CustomScrollView>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return customScrollView(
        key,
        scrollDirection,
        reverse,
        primary,
        physics,
        shrinkWrap,
        this.center,
        anchor,
        cacheExtent,
        slivers,
        semanticChildCount,
        keyboardDismissBehavior,
        restorationId,
        clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return customScrollView?.call(
        key,
        scrollDirection,
        reverse,
        primary,
        physics,
        shrinkWrap,
        this.center,
        anchor,
        cacheExtent,
        slivers,
        semanticChildCount,
        keyboardDismissBehavior,
        restorationId,
        clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (customScrollView != null) {
      return customScrollView(
          key,
          scrollDirection,
          reverse,
          primary,
          physics,
          shrinkWrap,
          this.center,
          anchor,
          cacheExtent,
          slivers,
          semanticChildCount,
          keyboardDismissBehavior,
          restorationId,
          clipBehavior);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return customScrollView(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return customScrollView?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (customScrollView != null) {
      return customScrollView(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CustomScrollViewToJson(
      this,
    );
  }
}

abstract class CustomScrollView implements Widget {
  const factory CustomScrollView(
      {final Key? key,
      final Axis scrollDirection,
      final bool reverse,
      final bool? primary,
      final ScrollPhysics? physics,
      final bool shrinkWrap,
      final Key? center,
      final double anchor,
      final double? cacheExtent,
      final List<Sliver> slivers,
      final int? semanticChildCount,
      final ScrollViewKeyboardDismissBehavior keyboardDismissBehavior,
      final String? restorationId,
      final Clip clipBehavior}) = _$CustomScrollView;

  factory CustomScrollView.fromJson(Map<String, dynamic> json) =
      _$CustomScrollView.fromJson;

  @override
  Key? get key;
  Axis get scrollDirection;
  bool get reverse;
  bool? get primary;
  ScrollPhysics? get physics;
  bool get shrinkWrap;
  Key? get center;
  double get anchor;
  double? get cacheExtent;
  List<Sliver> get slivers;
  int? get semanticChildCount;
  ScrollViewKeyboardDismissBehavior get keyboardDismissBehavior;
  String? get restorationId;
  Clip get clipBehavior;
  @override
  @JsonKey(ignore: true)
  _$$CustomScrollViewCopyWith<_$CustomScrollView> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$CheckboxCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$CheckboxCopyWith(
          _$Checkbox value, $Res Function(_$Checkbox) then) =
      __$$CheckboxCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      bool? value,
      bool tristate,
      FormBoolField? field,
      MouseCursor? mouseCursor,
      Color? activeColor,
      MaterialStateProperty? fillColor,
      Color? checkColor,
      Color? focusColor,
      Color? hoverColor,
      MaterialStateProperty? overlayColor,
      double? splashRadius,
      MaterialTapTargetSize? materialTapTargetSize,
      VisualDensity? visualDensity,
      bool autofocus,
      ShapeBorder? shape,
      BorderSide? side,
      bool isError});

  @override
  $KeyCopyWith<$Res>? get key;
  $MouseCursorCopyWith<$Res>? get mouseCursor;
  $ColorCopyWith<$Res>? get activeColor;
  $MaterialStatePropertyCopyWith<$Res>? get fillColor;
  $ColorCopyWith<$Res>? get checkColor;
  $ColorCopyWith<$Res>? get focusColor;
  $ColorCopyWith<$Res>? get hoverColor;
  $MaterialStatePropertyCopyWith<$Res>? get overlayColor;
  $VisualDensityCopyWith<$Res>? get visualDensity;
  $ShapeBorderCopyWith<$Res>? get shape;
  $BorderSideCopyWith<$Res>? get side;
}

/// @nodoc
class __$$CheckboxCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$Checkbox>
    implements _$$CheckboxCopyWith<$Res> {
  __$$CheckboxCopyWithImpl(_$Checkbox _value, $Res Function(_$Checkbox) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? value = freezed,
    Object? tristate = null,
    Object? field = freezed,
    Object? mouseCursor = freezed,
    Object? activeColor = freezed,
    Object? fillColor = freezed,
    Object? checkColor = freezed,
    Object? focusColor = freezed,
    Object? hoverColor = freezed,
    Object? overlayColor = freezed,
    Object? splashRadius = freezed,
    Object? materialTapTargetSize = freezed,
    Object? visualDensity = freezed,
    Object? autofocus = null,
    Object? shape = freezed,
    Object? side = freezed,
    Object? isError = null,
  }) {
    return _then(_$Checkbox(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      value: freezed == value
          ? _value.value
          : value // ignore: cast_nullable_to_non_nullable
              as bool?,
      tristate: null == tristate
          ? _value.tristate
          : tristate // ignore: cast_nullable_to_non_nullable
              as bool,
      field: freezed == field
          ? _value.field
          : field // ignore: cast_nullable_to_non_nullable
              as FormBoolField?,
      mouseCursor: freezed == mouseCursor
          ? _value.mouseCursor
          : mouseCursor // ignore: cast_nullable_to_non_nullable
              as MouseCursor?,
      activeColor: freezed == activeColor
          ? _value.activeColor
          : activeColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      fillColor: freezed == fillColor
          ? _value.fillColor
          : fillColor // ignore: cast_nullable_to_non_nullable
              as MaterialStateProperty?,
      checkColor: freezed == checkColor
          ? _value.checkColor
          : checkColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      focusColor: freezed == focusColor
          ? _value.focusColor
          : focusColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      hoverColor: freezed == hoverColor
          ? _value.hoverColor
          : hoverColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      overlayColor: freezed == overlayColor
          ? _value.overlayColor
          : overlayColor // ignore: cast_nullable_to_non_nullable
              as MaterialStateProperty?,
      splashRadius: freezed == splashRadius
          ? _value.splashRadius
          : splashRadius // ignore: cast_nullable_to_non_nullable
              as double?,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      visualDensity: freezed == visualDensity
          ? _value.visualDensity
          : visualDensity // ignore: cast_nullable_to_non_nullable
              as VisualDensity?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      side: freezed == side
          ? _value.side
          : side // ignore: cast_nullable_to_non_nullable
              as BorderSide?,
      isError: null == isError
          ? _value.isError
          : isError // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $MouseCursorCopyWith<$Res>? get mouseCursor {
    if (_value.mouseCursor == null) {
      return null;
    }

    return $MouseCursorCopyWith<$Res>(_value.mouseCursor!, (value) {
      return _then(_value.copyWith(mouseCursor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get activeColor {
    if (_value.activeColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.activeColor!, (value) {
      return _then(_value.copyWith(activeColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MaterialStatePropertyCopyWith<$Res>? get fillColor {
    if (_value.fillColor == null) {
      return null;
    }

    return $MaterialStatePropertyCopyWith<$Res>(_value.fillColor!, (value) {
      return _then(_value.copyWith(fillColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get checkColor {
    if (_value.checkColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.checkColor!, (value) {
      return _then(_value.copyWith(checkColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get focusColor {
    if (_value.focusColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.focusColor!, (value) {
      return _then(_value.copyWith(focusColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get hoverColor {
    if (_value.hoverColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.hoverColor!, (value) {
      return _then(_value.copyWith(hoverColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MaterialStatePropertyCopyWith<$Res>? get overlayColor {
    if (_value.overlayColor == null) {
      return null;
    }

    return $MaterialStatePropertyCopyWith<$Res>(_value.overlayColor!, (value) {
      return _then(_value.copyWith(overlayColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $VisualDensityCopyWith<$Res>? get visualDensity {
    if (_value.visualDensity == null) {
      return null;
    }

    return $VisualDensityCopyWith<$Res>(_value.visualDensity!, (value) {
      return _then(_value.copyWith(visualDensity: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BorderSideCopyWith<$Res>? get side {
    if (_value.side == null) {
      return null;
    }

    return $BorderSideCopyWith<$Res>(_value.side!, (value) {
      return _then(_value.copyWith(side: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Checkbox implements Checkbox {
  const _$Checkbox(
      {this.key,
      required this.value,
      this.tristate = false,
      this.field,
      this.mouseCursor,
      this.activeColor,
      this.fillColor,
      this.checkColor,
      this.focusColor,
      this.hoverColor,
      this.overlayColor,
      this.splashRadius,
      this.materialTapTargetSize,
      this.visualDensity,
      this.autofocus = false,
      this.shape,
      this.side,
      this.isError = false,
      final String? $type})
      : $type = $type ?? 'checkbox';

  factory _$Checkbox.fromJson(Map<String, dynamic> json) =>
      _$$CheckboxFromJson(json);

  @override
  final Key? key;
  @override
  final bool? value;
  @override
  @JsonKey()
  final bool tristate;
  @override
  final FormBoolField? field;
  @override
  final MouseCursor? mouseCursor;
  @override
  final Color? activeColor;
  @override
  final MaterialStateProperty? fillColor;
  @override
  final Color? checkColor;
  @override
  final Color? focusColor;
  @override
  final Color? hoverColor;
  @override
  final MaterialStateProperty? overlayColor;
  @override
  final double? splashRadius;
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  final VisualDensity? visualDensity;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final ShapeBorder? shape;
  @override
  final BorderSide? side;
  @override
  @JsonKey()
  final bool isError;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.checkbox(key: $key, value: $value, tristate: $tristate, field: $field, mouseCursor: $mouseCursor, activeColor: $activeColor, fillColor: $fillColor, checkColor: $checkColor, focusColor: $focusColor, hoverColor: $hoverColor, overlayColor: $overlayColor, splashRadius: $splashRadius, materialTapTargetSize: $materialTapTargetSize, visualDensity: $visualDensity, autofocus: $autofocus, shape: $shape, side: $side, isError: $isError)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Checkbox &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.value, value) || other.value == value) &&
            (identical(other.tristate, tristate) ||
                other.tristate == tristate) &&
            const DeepCollectionEquality().equals(other.field, field) &&
            (identical(other.mouseCursor, mouseCursor) ||
                other.mouseCursor == mouseCursor) &&
            (identical(other.activeColor, activeColor) ||
                other.activeColor == activeColor) &&
            (identical(other.fillColor, fillColor) ||
                other.fillColor == fillColor) &&
            (identical(other.checkColor, checkColor) ||
                other.checkColor == checkColor) &&
            (identical(other.focusColor, focusColor) ||
                other.focusColor == focusColor) &&
            (identical(other.hoverColor, hoverColor) ||
                other.hoverColor == hoverColor) &&
            (identical(other.overlayColor, overlayColor) ||
                other.overlayColor == overlayColor) &&
            (identical(other.splashRadius, splashRadius) ||
                other.splashRadius == splashRadius) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.visualDensity, visualDensity) ||
                other.visualDensity == visualDensity) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.side, side) || other.side == side) &&
            (identical(other.isError, isError) || other.isError == isError));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      value,
      tristate,
      const DeepCollectionEquality().hash(field),
      mouseCursor,
      activeColor,
      fillColor,
      checkColor,
      focusColor,
      hoverColor,
      overlayColor,
      splashRadius,
      materialTapTargetSize,
      visualDensity,
      autofocus,
      shape,
      side,
      isError);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$CheckboxCopyWith<_$Checkbox> get copyWith =>
      __$$CheckboxCopyWithImpl<_$Checkbox>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return checkbox(
        key,
        value,
        tristate,
        field,
        mouseCursor,
        activeColor,
        fillColor,
        checkColor,
        focusColor,
        hoverColor,
        overlayColor,
        splashRadius,
        materialTapTargetSize,
        visualDensity,
        autofocus,
        shape,
        side,
        isError);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return checkbox?.call(
        key,
        value,
        tristate,
        field,
        mouseCursor,
        activeColor,
        fillColor,
        checkColor,
        focusColor,
        hoverColor,
        overlayColor,
        splashRadius,
        materialTapTargetSize,
        visualDensity,
        autofocus,
        shape,
        side,
        isError);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (checkbox != null) {
      return checkbox(
          key,
          value,
          tristate,
          field,
          mouseCursor,
          activeColor,
          fillColor,
          checkColor,
          focusColor,
          hoverColor,
          overlayColor,
          splashRadius,
          materialTapTargetSize,
          visualDensity,
          autofocus,
          shape,
          side,
          isError);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return checkbox(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return checkbox?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (checkbox != null) {
      return checkbox(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$CheckboxToJson(
      this,
    );
  }
}

abstract class Checkbox implements Widget {
  const factory Checkbox(
      {final Key? key,
      required final bool? value,
      final bool tristate,
      final FormBoolField? field,
      final MouseCursor? mouseCursor,
      final Color? activeColor,
      final MaterialStateProperty? fillColor,
      final Color? checkColor,
      final Color? focusColor,
      final Color? hoverColor,
      final MaterialStateProperty? overlayColor,
      final double? splashRadius,
      final MaterialTapTargetSize? materialTapTargetSize,
      final VisualDensity? visualDensity,
      final bool autofocus,
      final ShapeBorder? shape,
      final BorderSide? side,
      final bool isError}) = _$Checkbox;

  factory Checkbox.fromJson(Map<String, dynamic> json) = _$Checkbox.fromJson;

  @override
  Key? get key;
  bool? get value;
  bool get tristate;
  FormBoolField? get field;
  MouseCursor? get mouseCursor;
  Color? get activeColor;
  MaterialStateProperty? get fillColor;
  Color? get checkColor;
  Color? get focusColor;
  Color? get hoverColor;
  MaterialStateProperty? get overlayColor;
  double? get splashRadius;
  MaterialTapTargetSize? get materialTapTargetSize;
  VisualDensity? get visualDensity;
  bool get autofocus;
  ShapeBorder? get shape;
  BorderSide? get side;
  bool get isError;
  @override
  @JsonKey(ignore: true)
  _$$CheckboxCopyWith<_$Checkbox> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DropdownButtonFormFieldCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$DropdownButtonFormFieldCopyWith(_$DropdownButtonFormField value,
          $Res Function(_$DropdownButtonFormField) then) =
      __$$DropdownButtonFormFieldCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      FormStringField? field,
      List<DropdownMenuItem> items,
      String? value,
      Widget? hint,
      Widget? disabledHint,
      Callback? onTap,
      int elevation,
      TextStyle? style,
      Widget? icon,
      Color? iconDisabledColor,
      Color? iconEnabledColor,
      double iconSize,
      bool isDense,
      bool isExpanded,
      double? itemHeight,
      Color? focusColor,
      bool autofocus,
      Color? dropdownColor,
      InputDecoration? decoration,
      Map<String, String>? validatorMessages,
      AutovalidateMode? autovalidateMode,
      double? menuMaxHeight,
      bool? enableFeedback,
      Alignment alignment,
      BorderRadius? borderRadius});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get hint;
  $WidgetCopyWith<$Res>? get disabledHint;
  $CallbackCopyWith<$Res>? get onTap;
  $TextStyleCopyWith<$Res>? get style;
  $WidgetCopyWith<$Res>? get icon;
  $ColorCopyWith<$Res>? get iconDisabledColor;
  $ColorCopyWith<$Res>? get iconEnabledColor;
  $ColorCopyWith<$Res>? get focusColor;
  $ColorCopyWith<$Res>? get dropdownColor;
  $InputDecorationCopyWith<$Res>? get decoration;
  $AlignmentCopyWith<$Res> get alignment;
  $BorderRadiusCopyWith<$Res>? get borderRadius;
}

/// @nodoc
class __$$DropdownButtonFormFieldCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$DropdownButtonFormField>
    implements _$$DropdownButtonFormFieldCopyWith<$Res> {
  __$$DropdownButtonFormFieldCopyWithImpl(_$DropdownButtonFormField _value,
      $Res Function(_$DropdownButtonFormField) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? field = freezed,
    Object? items = null,
    Object? value = freezed,
    Object? hint = freezed,
    Object? disabledHint = freezed,
    Object? onTap = freezed,
    Object? elevation = null,
    Object? style = freezed,
    Object? icon = freezed,
    Object? iconDisabledColor = freezed,
    Object? iconEnabledColor = freezed,
    Object? iconSize = null,
    Object? isDense = null,
    Object? isExpanded = null,
    Object? itemHeight = freezed,
    Object? focusColor = freezed,
    Object? autofocus = null,
    Object? dropdownColor = freezed,
    Object? decoration = freezed,
    Object? validatorMessages = freezed,
    Object? autovalidateMode = freezed,
    Object? menuMaxHeight = freezed,
    Object? enableFeedback = freezed,
    Object? alignment = null,
    Object? borderRadius = freezed,
  }) {
    return _then(_$DropdownButtonFormField(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      field: freezed == field
          ? _value.field
          : field // ignore: cast_nullable_to_non_nullable
              as FormStringField?,
      items: null == items
          ? _value._items
          : items // ignore: cast_nullable_to_non_nullable
              as List<DropdownMenuItem>,
      value: freezed == value
          ? _value.value
          : value // ignore: cast_nullable_to_non_nullable
              as String?,
      hint: freezed == hint
          ? _value.hint
          : hint // ignore: cast_nullable_to_non_nullable
              as Widget?,
      disabledHint: freezed == disabledHint
          ? _value.disabledHint
          : disabledHint // ignore: cast_nullable_to_non_nullable
              as Widget?,
      onTap: freezed == onTap
          ? _value.onTap
          : onTap // ignore: cast_nullable_to_non_nullable
              as Callback?,
      elevation: null == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as int,
      style: freezed == style
          ? _value.style
          : style // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      icon: freezed == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      iconDisabledColor: freezed == iconDisabledColor
          ? _value.iconDisabledColor
          : iconDisabledColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      iconEnabledColor: freezed == iconEnabledColor
          ? _value.iconEnabledColor
          : iconEnabledColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      iconSize: null == iconSize
          ? _value.iconSize
          : iconSize // ignore: cast_nullable_to_non_nullable
              as double,
      isDense: null == isDense
          ? _value.isDense
          : isDense // ignore: cast_nullable_to_non_nullable
              as bool,
      isExpanded: null == isExpanded
          ? _value.isExpanded
          : isExpanded // ignore: cast_nullable_to_non_nullable
              as bool,
      itemHeight: freezed == itemHeight
          ? _value.itemHeight
          : itemHeight // ignore: cast_nullable_to_non_nullable
              as double?,
      focusColor: freezed == focusColor
          ? _value.focusColor
          : focusColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      dropdownColor: freezed == dropdownColor
          ? _value.dropdownColor
          : dropdownColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      decoration: freezed == decoration
          ? _value.decoration
          : decoration // ignore: cast_nullable_to_non_nullable
              as InputDecoration?,
      validatorMessages: freezed == validatorMessages
          ? _value._validatorMessages
          : validatorMessages // ignore: cast_nullable_to_non_nullable
              as Map<String, String>?,
      autovalidateMode: freezed == autovalidateMode
          ? _value.autovalidateMode
          : autovalidateMode // ignore: cast_nullable_to_non_nullable
              as AutovalidateMode?,
      menuMaxHeight: freezed == menuMaxHeight
          ? _value.menuMaxHeight
          : menuMaxHeight // ignore: cast_nullable_to_non_nullable
              as double?,
      enableFeedback: freezed == enableFeedback
          ? _value.enableFeedback
          : enableFeedback // ignore: cast_nullable_to_non_nullable
              as bool?,
      alignment: null == alignment
          ? _value.alignment
          : alignment // ignore: cast_nullable_to_non_nullable
              as Alignment,
      borderRadius: freezed == borderRadius
          ? _value.borderRadius
          : borderRadius // ignore: cast_nullable_to_non_nullable
              as BorderRadius?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get hint {
    if (_value.hint == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.hint!, (value) {
      return _then(_value.copyWith(hint: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get disabledHint {
    if (_value.disabledHint == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.disabledHint!, (value) {
      return _then(_value.copyWith(disabledHint: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onTap {
    if (_value.onTap == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onTap!, (value) {
      return _then(_value.copyWith(onTap: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get style {
    if (_value.style == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.style!, (value) {
      return _then(_value.copyWith(style: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get icon {
    if (_value.icon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.icon!, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get iconDisabledColor {
    if (_value.iconDisabledColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.iconDisabledColor!, (value) {
      return _then(_value.copyWith(iconDisabledColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get iconEnabledColor {
    if (_value.iconEnabledColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.iconEnabledColor!, (value) {
      return _then(_value.copyWith(iconEnabledColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get focusColor {
    if (_value.focusColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.focusColor!, (value) {
      return _then(_value.copyWith(focusColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get dropdownColor {
    if (_value.dropdownColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.dropdownColor!, (value) {
      return _then(_value.copyWith(dropdownColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $InputDecorationCopyWith<$Res>? get decoration {
    if (_value.decoration == null) {
      return null;
    }

    return $InputDecorationCopyWith<$Res>(_value.decoration!, (value) {
      return _then(_value.copyWith(decoration: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res> get alignment {
    return $AlignmentCopyWith<$Res>(_value.alignment, (value) {
      return _then(_value.copyWith(alignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BorderRadiusCopyWith<$Res>? get borderRadius {
    if (_value.borderRadius == null) {
      return null;
    }

    return $BorderRadiusCopyWith<$Res>(_value.borderRadius!, (value) {
      return _then(_value.copyWith(borderRadius: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$DropdownButtonFormField implements DropdownButtonFormField {
  const _$DropdownButtonFormField(
      {this.key,
      this.field,
      required final List<DropdownMenuItem> items,
      this.value,
      this.hint,
      this.disabledHint,
      this.onTap,
      this.elevation = 8,
      this.style,
      this.icon,
      this.iconDisabledColor,
      this.iconEnabledColor,
      this.iconSize = 24.0,
      this.isDense = true,
      this.isExpanded = false,
      this.itemHeight,
      this.focusColor,
      this.autofocus = false,
      this.dropdownColor,
      this.decoration,
      final Map<String, String>? validatorMessages,
      this.autovalidateMode,
      this.menuMaxHeight,
      this.enableFeedback,
      this.alignment = Alignment.centerLeft,
      this.borderRadius,
      final String? $type})
      : _items = items,
        _validatorMessages = validatorMessages,
        $type = $type ?? 'dropdownButtonFormField';

  factory _$DropdownButtonFormField.fromJson(Map<String, dynamic> json) =>
      _$$DropdownButtonFormFieldFromJson(json);

  @override
  final Key? key;
  @override
  final FormStringField? field;
  final List<DropdownMenuItem> _items;
  @override
  List<DropdownMenuItem> get items {
    if (_items is EqualUnmodifiableListView) return _items;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_items);
  }

  @override
  final String? value;
  @override
  final Widget? hint;
  @override
  final Widget? disabledHint;
  @override
  final Callback? onTap;
  @override
  @JsonKey()
  final int elevation;
  @override
  final TextStyle? style;
  @override
  final Widget? icon;
  @override
  final Color? iconDisabledColor;
  @override
  final Color? iconEnabledColor;
  @override
  @JsonKey()
  final double iconSize;
  @override
  @JsonKey()
  final bool isDense;
  @override
  @JsonKey()
  final bool isExpanded;
  @override
  final double? itemHeight;
  @override
  final Color? focusColor;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final Color? dropdownColor;
  @override
  final InputDecoration? decoration;
  final Map<String, String>? _validatorMessages;
  @override
  Map<String, String>? get validatorMessages {
    final value = _validatorMessages;
    if (value == null) return null;
    if (_validatorMessages is EqualUnmodifiableMapView)
      return _validatorMessages;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableMapView(value);
  }

  @override
  final AutovalidateMode? autovalidateMode;
  @override
  final double? menuMaxHeight;
  @override
  final bool? enableFeedback;
  @override
  @JsonKey()
  final Alignment alignment;
  @override
  final BorderRadius? borderRadius;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.dropdownButtonFormField(key: $key, field: $field, items: $items, value: $value, hint: $hint, disabledHint: $disabledHint, onTap: $onTap, elevation: $elevation, style: $style, icon: $icon, iconDisabledColor: $iconDisabledColor, iconEnabledColor: $iconEnabledColor, iconSize: $iconSize, isDense: $isDense, isExpanded: $isExpanded, itemHeight: $itemHeight, focusColor: $focusColor, autofocus: $autofocus, dropdownColor: $dropdownColor, decoration: $decoration, validatorMessages: $validatorMessages, autovalidateMode: $autovalidateMode, menuMaxHeight: $menuMaxHeight, enableFeedback: $enableFeedback, alignment: $alignment, borderRadius: $borderRadius)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DropdownButtonFormField &&
            (identical(other.key, key) || other.key == key) &&
            const DeepCollectionEquality().equals(other.field, field) &&
            const DeepCollectionEquality().equals(other._items, _items) &&
            (identical(other.value, value) || other.value == value) &&
            (identical(other.hint, hint) || other.hint == hint) &&
            (identical(other.disabledHint, disabledHint) ||
                other.disabledHint == disabledHint) &&
            (identical(other.onTap, onTap) || other.onTap == onTap) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.style, style) || other.style == style) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.iconDisabledColor, iconDisabledColor) ||
                other.iconDisabledColor == iconDisabledColor) &&
            (identical(other.iconEnabledColor, iconEnabledColor) ||
                other.iconEnabledColor == iconEnabledColor) &&
            (identical(other.iconSize, iconSize) ||
                other.iconSize == iconSize) &&
            (identical(other.isDense, isDense) || other.isDense == isDense) &&
            (identical(other.isExpanded, isExpanded) ||
                other.isExpanded == isExpanded) &&
            (identical(other.itemHeight, itemHeight) ||
                other.itemHeight == itemHeight) &&
            (identical(other.focusColor, focusColor) ||
                other.focusColor == focusColor) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.dropdownColor, dropdownColor) ||
                other.dropdownColor == dropdownColor) &&
            (identical(other.decoration, decoration) ||
                other.decoration == decoration) &&
            const DeepCollectionEquality()
                .equals(other._validatorMessages, _validatorMessages) &&
            (identical(other.autovalidateMode, autovalidateMode) ||
                other.autovalidateMode == autovalidateMode) &&
            (identical(other.menuMaxHeight, menuMaxHeight) ||
                other.menuMaxHeight == menuMaxHeight) &&
            (identical(other.enableFeedback, enableFeedback) ||
                other.enableFeedback == enableFeedback) &&
            (identical(other.alignment, alignment) ||
                other.alignment == alignment) &&
            (identical(other.borderRadius, borderRadius) ||
                other.borderRadius == borderRadius));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        const DeepCollectionEquality().hash(field),
        const DeepCollectionEquality().hash(_items),
        value,
        hint,
        disabledHint,
        onTap,
        elevation,
        style,
        icon,
        iconDisabledColor,
        iconEnabledColor,
        iconSize,
        isDense,
        isExpanded,
        itemHeight,
        focusColor,
        autofocus,
        dropdownColor,
        decoration,
        const DeepCollectionEquality().hash(_validatorMessages),
        autovalidateMode,
        menuMaxHeight,
        enableFeedback,
        alignment,
        borderRadius
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DropdownButtonFormFieldCopyWith<_$DropdownButtonFormField> get copyWith =>
      __$$DropdownButtonFormFieldCopyWithImpl<_$DropdownButtonFormField>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return dropdownButtonFormField(
        key,
        field,
        items,
        value,
        hint,
        disabledHint,
        onTap,
        elevation,
        style,
        this.icon,
        iconDisabledColor,
        iconEnabledColor,
        iconSize,
        isDense,
        isExpanded,
        itemHeight,
        focusColor,
        autofocus,
        dropdownColor,
        decoration,
        validatorMessages,
        autovalidateMode,
        menuMaxHeight,
        enableFeedback,
        alignment,
        borderRadius);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return dropdownButtonFormField?.call(
        key,
        field,
        items,
        value,
        hint,
        disabledHint,
        onTap,
        elevation,
        style,
        this.icon,
        iconDisabledColor,
        iconEnabledColor,
        iconSize,
        isDense,
        isExpanded,
        itemHeight,
        focusColor,
        autofocus,
        dropdownColor,
        decoration,
        validatorMessages,
        autovalidateMode,
        menuMaxHeight,
        enableFeedback,
        alignment,
        borderRadius);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (dropdownButtonFormField != null) {
      return dropdownButtonFormField(
          key,
          field,
          items,
          value,
          hint,
          disabledHint,
          onTap,
          elevation,
          style,
          this.icon,
          iconDisabledColor,
          iconEnabledColor,
          iconSize,
          isDense,
          isExpanded,
          itemHeight,
          focusColor,
          autofocus,
          dropdownColor,
          decoration,
          validatorMessages,
          autovalidateMode,
          menuMaxHeight,
          enableFeedback,
          alignment,
          borderRadius);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return dropdownButtonFormField(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return dropdownButtonFormField?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (dropdownButtonFormField != null) {
      return dropdownButtonFormField(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$DropdownButtonFormFieldToJson(
      this,
    );
  }
}

abstract class DropdownButtonFormField implements Widget {
  const factory DropdownButtonFormField(
      {final Key? key,
      final FormStringField? field,
      required final List<DropdownMenuItem> items,
      final String? value,
      final Widget? hint,
      final Widget? disabledHint,
      final Callback? onTap,
      final int elevation,
      final TextStyle? style,
      final Widget? icon,
      final Color? iconDisabledColor,
      final Color? iconEnabledColor,
      final double iconSize,
      final bool isDense,
      final bool isExpanded,
      final double? itemHeight,
      final Color? focusColor,
      final bool autofocus,
      final Color? dropdownColor,
      final InputDecoration? decoration,
      final Map<String, String>? validatorMessages,
      final AutovalidateMode? autovalidateMode,
      final double? menuMaxHeight,
      final bool? enableFeedback,
      final Alignment alignment,
      final BorderRadius? borderRadius}) = _$DropdownButtonFormField;

  factory DropdownButtonFormField.fromJson(Map<String, dynamic> json) =
      _$DropdownButtonFormField.fromJson;

  @override
  Key? get key;
  FormStringField? get field;
  List<DropdownMenuItem> get items;
  String? get value;
  Widget? get hint;
  Widget? get disabledHint;
  Callback? get onTap;
  int get elevation;
  TextStyle? get style;
  Widget? get icon;
  Color? get iconDisabledColor;
  Color? get iconEnabledColor;
  double get iconSize;
  bool get isDense;
  bool get isExpanded;
  double? get itemHeight;
  Color? get focusColor;
  bool get autofocus;
  Color? get dropdownColor;
  InputDecoration? get decoration;
  Map<String, String>? get validatorMessages;
  AutovalidateMode? get autovalidateMode;
  double? get menuMaxHeight;
  bool? get enableFeedback;
  Alignment get alignment;
  BorderRadius? get borderRadius;
  @override
  @JsonKey(ignore: true)
  _$$DropdownButtonFormFieldCopyWith<_$DropdownButtonFormField> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PopupMenuButtonCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$PopupMenuButtonCopyWith(
          _$PopupMenuButton value, $Res Function(_$PopupMenuButton) then) =
      __$$PopupMenuButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      List<PopupMenuEntry> items,
      String? initialValue,
      Callback? onOpened,
      FormStringField? field,
      Callback? onCanceled,
      String? tooltip,
      double? elevation,
      Color? shadowColor,
      Color? surfaceTintColor,
      EdgeInsets padding,
      Widget? child,
      double? splashRadius,
      Widget? icon,
      double? iconSize,
      Offset offset,
      bool enabled,
      ShapeBorder? shape,
      Color? color,
      bool? enableFeedback,
      BoxConstraints? constraints,
      PopupMenuPosition? position,
      Clip clipBehavior});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onOpened;
  $CallbackCopyWith<$Res>? get onCanceled;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $EdgeInsetsCopyWith<$Res> get padding;
  $WidgetCopyWith<$Res>? get child;
  $WidgetCopyWith<$Res>? get icon;
  $OffsetCopyWith<$Res> get offset;
  $ShapeBorderCopyWith<$Res>? get shape;
  $ColorCopyWith<$Res>? get color;
  $BoxConstraintsCopyWith<$Res>? get constraints;
}

/// @nodoc
class __$$PopupMenuButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$PopupMenuButton>
    implements _$$PopupMenuButtonCopyWith<$Res> {
  __$$PopupMenuButtonCopyWithImpl(
      _$PopupMenuButton _value, $Res Function(_$PopupMenuButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? items = null,
    Object? initialValue = freezed,
    Object? onOpened = freezed,
    Object? field = freezed,
    Object? onCanceled = freezed,
    Object? tooltip = freezed,
    Object? elevation = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? padding = null,
    Object? child = freezed,
    Object? splashRadius = freezed,
    Object? icon = freezed,
    Object? iconSize = freezed,
    Object? offset = null,
    Object? enabled = null,
    Object? shape = freezed,
    Object? color = freezed,
    Object? enableFeedback = freezed,
    Object? constraints = freezed,
    Object? position = freezed,
    Object? clipBehavior = null,
  }) {
    return _then(_$PopupMenuButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      items: null == items
          ? _value._items
          : items // ignore: cast_nullable_to_non_nullable
              as List<PopupMenuEntry>,
      initialValue: freezed == initialValue
          ? _value.initialValue
          : initialValue // ignore: cast_nullable_to_non_nullable
              as String?,
      onOpened: freezed == onOpened
          ? _value.onOpened
          : onOpened // ignore: cast_nullable_to_non_nullable
              as Callback?,
      field: freezed == field
          ? _value.field
          : field // ignore: cast_nullable_to_non_nullable
              as FormStringField?,
      onCanceled: freezed == onCanceled
          ? _value.onCanceled
          : onCanceled // ignore: cast_nullable_to_non_nullable
              as Callback?,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      padding: null == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
      splashRadius: freezed == splashRadius
          ? _value.splashRadius
          : splashRadius // ignore: cast_nullable_to_non_nullable
              as double?,
      icon: freezed == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      iconSize: freezed == iconSize
          ? _value.iconSize
          : iconSize // ignore: cast_nullable_to_non_nullable
              as double?,
      offset: null == offset
          ? _value.offset
          : offset // ignore: cast_nullable_to_non_nullable
              as Offset,
      enabled: null == enabled
          ? _value.enabled
          : enabled // ignore: cast_nullable_to_non_nullable
              as bool,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      enableFeedback: freezed == enableFeedback
          ? _value.enableFeedback
          : enableFeedback // ignore: cast_nullable_to_non_nullable
              as bool?,
      constraints: freezed == constraints
          ? _value.constraints
          : constraints // ignore: cast_nullable_to_non_nullable
              as BoxConstraints?,
      position: freezed == position
          ? _value.position
          : position // ignore: cast_nullable_to_non_nullable
              as PopupMenuPosition?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onOpened {
    if (_value.onOpened == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onOpened!, (value) {
      return _then(_value.copyWith(onOpened: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onCanceled {
    if (_value.onCanceled == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onCanceled!, (value) {
      return _then(_value.copyWith(onCanceled: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res> get padding {
    return $EdgeInsetsCopyWith<$Res>(_value.padding, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get icon {
    if (_value.icon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.icon!, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $OffsetCopyWith<$Res> get offset {
    return $OffsetCopyWith<$Res>(_value.offset, (value) {
      return _then(_value.copyWith(offset: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BoxConstraintsCopyWith<$Res>? get constraints {
    if (_value.constraints == null) {
      return null;
    }

    return $BoxConstraintsCopyWith<$Res>(_value.constraints!, (value) {
      return _then(_value.copyWith(constraints: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$PopupMenuButton implements PopupMenuButton {
  const _$PopupMenuButton(
      {this.key,
      required final List<PopupMenuEntry> items,
      this.initialValue,
      this.onOpened,
      this.field,
      this.onCanceled,
      this.tooltip,
      this.elevation,
      this.shadowColor,
      this.surfaceTintColor,
      this.padding = const EdgeInsets.all(8.0),
      this.child,
      this.splashRadius,
      this.icon,
      this.iconSize,
      this.offset = Offset.zero,
      this.enabled = true,
      this.shape,
      this.color,
      this.enableFeedback,
      this.constraints,
      this.position,
      this.clipBehavior = Clip.none,
      final String? $type})
      : _items = items,
        $type = $type ?? 'popupMenuButton';

  factory _$PopupMenuButton.fromJson(Map<String, dynamic> json) =>
      _$$PopupMenuButtonFromJson(json);

  @override
  final Key? key;
  final List<PopupMenuEntry> _items;
  @override
  List<PopupMenuEntry> get items {
    if (_items is EqualUnmodifiableListView) return _items;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_items);
  }

  @override
  final String? initialValue;
  @override
  final Callback? onOpened;
  @override
  final FormStringField? field;
  @override
  final Callback? onCanceled;
  @override
  final String? tooltip;
  @override
  final double? elevation;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  @JsonKey()
  final EdgeInsets padding;
  @override
  final Widget? child;
  @override
  final double? splashRadius;
  @override
  final Widget? icon;
  @override
  final double? iconSize;
  @override
  @JsonKey()
  final Offset offset;
  @override
  @JsonKey()
  final bool enabled;
  @override
  final ShapeBorder? shape;
  @override
  final Color? color;
  @override
  final bool? enableFeedback;
  @override
  final BoxConstraints? constraints;
  @override
  final PopupMenuPosition? position;
  @override
  @JsonKey()
  final Clip clipBehavior;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.popupMenuButton(key: $key, items: $items, initialValue: $initialValue, onOpened: $onOpened, field: $field, onCanceled: $onCanceled, tooltip: $tooltip, elevation: $elevation, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, padding: $padding, child: $child, splashRadius: $splashRadius, icon: $icon, iconSize: $iconSize, offset: $offset, enabled: $enabled, shape: $shape, color: $color, enableFeedback: $enableFeedback, constraints: $constraints, position: $position, clipBehavior: $clipBehavior)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$PopupMenuButton &&
            (identical(other.key, key) || other.key == key) &&
            const DeepCollectionEquality().equals(other._items, _items) &&
            (identical(other.initialValue, initialValue) ||
                other.initialValue == initialValue) &&
            (identical(other.onOpened, onOpened) ||
                other.onOpened == onOpened) &&
            const DeepCollectionEquality().equals(other.field, field) &&
            (identical(other.onCanceled, onCanceled) ||
                other.onCanceled == onCanceled) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.splashRadius, splashRadius) ||
                other.splashRadius == splashRadius) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.iconSize, iconSize) ||
                other.iconSize == iconSize) &&
            (identical(other.offset, offset) || other.offset == offset) &&
            (identical(other.enabled, enabled) || other.enabled == enabled) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.enableFeedback, enableFeedback) ||
                other.enableFeedback == enableFeedback) &&
            (identical(other.constraints, constraints) ||
                other.constraints == constraints) &&
            (identical(other.position, position) ||
                other.position == position) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        const DeepCollectionEquality().hash(_items),
        initialValue,
        onOpened,
        const DeepCollectionEquality().hash(field),
        onCanceled,
        tooltip,
        elevation,
        shadowColor,
        surfaceTintColor,
        padding,
        child,
        splashRadius,
        icon,
        iconSize,
        offset,
        enabled,
        shape,
        color,
        enableFeedback,
        constraints,
        position,
        clipBehavior
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PopupMenuButtonCopyWith<_$PopupMenuButton> get copyWith =>
      __$$PopupMenuButtonCopyWithImpl<_$PopupMenuButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return popupMenuButton(
        key,
        items,
        initialValue,
        onOpened,
        field,
        onCanceled,
        tooltip,
        elevation,
        shadowColor,
        surfaceTintColor,
        this.padding,
        child,
        splashRadius,
        this.icon,
        iconSize,
        offset,
        enabled,
        shape,
        color,
        enableFeedback,
        constraints,
        position,
        clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return popupMenuButton?.call(
        key,
        items,
        initialValue,
        onOpened,
        field,
        onCanceled,
        tooltip,
        elevation,
        shadowColor,
        surfaceTintColor,
        this.padding,
        child,
        splashRadius,
        this.icon,
        iconSize,
        offset,
        enabled,
        shape,
        color,
        enableFeedback,
        constraints,
        position,
        clipBehavior);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (popupMenuButton != null) {
      return popupMenuButton(
          key,
          items,
          initialValue,
          onOpened,
          field,
          onCanceled,
          tooltip,
          elevation,
          shadowColor,
          surfaceTintColor,
          this.padding,
          child,
          splashRadius,
          this.icon,
          iconSize,
          offset,
          enabled,
          shape,
          color,
          enableFeedback,
          constraints,
          position,
          clipBehavior);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return popupMenuButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return popupMenuButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (popupMenuButton != null) {
      return popupMenuButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PopupMenuButtonToJson(
      this,
    );
  }
}

abstract class PopupMenuButton implements Widget {
  const factory PopupMenuButton(
      {final Key? key,
      required final List<PopupMenuEntry> items,
      final String? initialValue,
      final Callback? onOpened,
      final FormStringField? field,
      final Callback? onCanceled,
      final String? tooltip,
      final double? elevation,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final EdgeInsets padding,
      final Widget? child,
      final double? splashRadius,
      final Widget? icon,
      final double? iconSize,
      final Offset offset,
      final bool enabled,
      final ShapeBorder? shape,
      final Color? color,
      final bool? enableFeedback,
      final BoxConstraints? constraints,
      final PopupMenuPosition? position,
      final Clip clipBehavior}) = _$PopupMenuButton;

  factory PopupMenuButton.fromJson(Map<String, dynamic> json) =
      _$PopupMenuButton.fromJson;

  @override
  Key? get key;
  List<PopupMenuEntry> get items;
  String? get initialValue;
  Callback? get onOpened;
  FormStringField? get field;
  Callback? get onCanceled;
  String? get tooltip;
  double? get elevation;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  EdgeInsets get padding;
  Widget? get child;
  double? get splashRadius;
  Widget? get icon;
  double? get iconSize;
  Offset get offset;
  bool get enabled;
  ShapeBorder? get shape;
  Color? get color;
  bool? get enableFeedback;
  BoxConstraints? get constraints;
  PopupMenuPosition? get position;
  Clip get clipBehavior;
  @override
  @JsonKey(ignore: true)
  _$$PopupMenuButtonCopyWith<_$PopupMenuButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NavigationDestinationCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$NavigationDestinationCopyWith(_$NavigationDestination value,
          $Res Function(_$NavigationDestination) then) =
      __$$NavigationDestinationCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget icon,
      Widget? selectedIcon,
      String label,
      String? tooltip});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res> get icon;
  $WidgetCopyWith<$Res>? get selectedIcon;
}

/// @nodoc
class __$$NavigationDestinationCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$NavigationDestination>
    implements _$$NavigationDestinationCopyWith<$Res> {
  __$$NavigationDestinationCopyWithImpl(_$NavigationDestination _value,
      $Res Function(_$NavigationDestination) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? icon = null,
    Object? selectedIcon = freezed,
    Object? label = null,
    Object? tooltip = freezed,
  }) {
    return _then(_$NavigationDestination(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      icon: null == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget,
      selectedIcon: freezed == selectedIcon
          ? _value.selectedIcon
          : selectedIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      label: null == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as String,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get icon {
    return $WidgetCopyWith<$Res>(_value.icon, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get selectedIcon {
    if (_value.selectedIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.selectedIcon!, (value) {
      return _then(_value.copyWith(selectedIcon: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$NavigationDestination implements NavigationDestination {
  const _$NavigationDestination(
      {this.key,
      required this.icon,
      this.selectedIcon,
      required this.label,
      this.tooltip,
      final String? $type})
      : $type = $type ?? 'navigationDestination';

  factory _$NavigationDestination.fromJson(Map<String, dynamic> json) =>
      _$$NavigationDestinationFromJson(json);

  @override
  final Key? key;
  @override
  final Widget icon;
  @override
  final Widget? selectedIcon;
  @override
  final String label;
  @override
  final String? tooltip;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.navigationDestination(key: $key, icon: $icon, selectedIcon: $selectedIcon, label: $label, tooltip: $tooltip)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NavigationDestination &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.selectedIcon, selectedIcon) ||
                other.selectedIcon == selectedIcon) &&
            (identical(other.label, label) || other.label == label) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, key, icon, selectedIcon, label, tooltip);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NavigationDestinationCopyWith<_$NavigationDestination> get copyWith =>
      __$$NavigationDestinationCopyWithImpl<_$NavigationDestination>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return navigationDestination(key, this.icon, selectedIcon, label, tooltip);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return navigationDestination?.call(
        key, this.icon, selectedIcon, label, tooltip);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationDestination != null) {
      return navigationDestination(
          key, this.icon, selectedIcon, label, tooltip);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return navigationDestination(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return navigationDestination?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationDestination != null) {
      return navigationDestination(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NavigationDestinationToJson(
      this,
    );
  }
}

abstract class NavigationDestination implements Widget {
  const factory NavigationDestination(
      {final Key? key,
      required final Widget icon,
      final Widget? selectedIcon,
      required final String label,
      final String? tooltip}) = _$NavigationDestination;

  factory NavigationDestination.fromJson(Map<String, dynamic> json) =
      _$NavigationDestination.fromJson;

  @override
  Key? get key;
  Widget get icon;
  Widget? get selectedIcon;
  String get label;
  String? get tooltip;
  @override
  @JsonKey(ignore: true)
  _$$NavigationDestinationCopyWith<_$NavigationDestination> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ActionChipCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$ActionChipCopyWith(
          _$ActionChip value, $Res Function(_$ActionChip) then) =
      __$$ActionChipCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget? avatar,
      Widget label,
      TextStyle? labelStyle,
      EdgeInsets? labelPadding,
      Callback? onPressed,
      double? pressElevation,
      String? tooltip,
      BorderSide? side,
      ShapeBorder? shape,
      Clip clipBehavior,
      bool autofocus,
      Color? backgroundColor,
      Color? disabledColor,
      EdgeInsets? padding,
      VisualDensity? visualDensity,
      MaterialTapTargetSize? materialTapTargetSize,
      double? elevation,
      Color? shadowColor,
      Color? surfaceTintColor,
      IconThemeData? iconTheme});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get avatar;
  $WidgetCopyWith<$Res> get label;
  $TextStyleCopyWith<$Res>? get labelStyle;
  $EdgeInsetsCopyWith<$Res>? get labelPadding;
  $CallbackCopyWith<$Res>? get onPressed;
  $BorderSideCopyWith<$Res>? get side;
  $ShapeBorderCopyWith<$Res>? get shape;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get disabledColor;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $VisualDensityCopyWith<$Res>? get visualDensity;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $IconThemeDataCopyWith<$Res>? get iconTheme;
}

/// @nodoc
class __$$ActionChipCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$ActionChip>
    implements _$$ActionChipCopyWith<$Res> {
  __$$ActionChipCopyWithImpl(
      _$ActionChip _value, $Res Function(_$ActionChip) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? avatar = freezed,
    Object? label = null,
    Object? labelStyle = freezed,
    Object? labelPadding = freezed,
    Object? onPressed = freezed,
    Object? pressElevation = freezed,
    Object? tooltip = freezed,
    Object? side = freezed,
    Object? shape = freezed,
    Object? clipBehavior = null,
    Object? autofocus = null,
    Object? backgroundColor = freezed,
    Object? disabledColor = freezed,
    Object? padding = freezed,
    Object? visualDensity = freezed,
    Object? materialTapTargetSize = freezed,
    Object? elevation = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? iconTheme = freezed,
  }) {
    return _then(_$ActionChip(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      avatar: freezed == avatar
          ? _value.avatar
          : avatar // ignore: cast_nullable_to_non_nullable
              as Widget?,
      label: null == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as Widget,
      labelStyle: freezed == labelStyle
          ? _value.labelStyle
          : labelStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      labelPadding: freezed == labelPadding
          ? _value.labelPadding
          : labelPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      pressElevation: freezed == pressElevation
          ? _value.pressElevation
          : pressElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      side: freezed == side
          ? _value.side
          : side // ignore: cast_nullable_to_non_nullable
              as BorderSide?,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      disabledColor: freezed == disabledColor
          ? _value.disabledColor
          : disabledColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      visualDensity: freezed == visualDensity
          ? _value.visualDensity
          : visualDensity // ignore: cast_nullable_to_non_nullable
              as VisualDensity?,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      iconTheme: freezed == iconTheme
          ? _value.iconTheme
          : iconTheme // ignore: cast_nullable_to_non_nullable
              as IconThemeData?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get avatar {
    if (_value.avatar == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.avatar!, (value) {
      return _then(_value.copyWith(avatar: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get label {
    return $WidgetCopyWith<$Res>(_value.label, (value) {
      return _then(_value.copyWith(label: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get labelStyle {
    if (_value.labelStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.labelStyle!, (value) {
      return _then(_value.copyWith(labelStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get labelPadding {
    if (_value.labelPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.labelPadding!, (value) {
      return _then(_value.copyWith(labelPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BorderSideCopyWith<$Res>? get side {
    if (_value.side == null) {
      return null;
    }

    return $BorderSideCopyWith<$Res>(_value.side!, (value) {
      return _then(_value.copyWith(side: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get disabledColor {
    if (_value.disabledColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.disabledColor!, (value) {
      return _then(_value.copyWith(disabledColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $VisualDensityCopyWith<$Res>? get visualDensity {
    if (_value.visualDensity == null) {
      return null;
    }

    return $VisualDensityCopyWith<$Res>(_value.visualDensity!, (value) {
      return _then(_value.copyWith(visualDensity: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $IconThemeDataCopyWith<$Res>? get iconTheme {
    if (_value.iconTheme == null) {
      return null;
    }

    return $IconThemeDataCopyWith<$Res>(_value.iconTheme!, (value) {
      return _then(_value.copyWith(iconTheme: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$ActionChip implements ActionChip {
  const _$ActionChip(
      {this.key,
      this.avatar,
      required this.label,
      this.labelStyle,
      this.labelPadding,
      this.onPressed,
      this.pressElevation,
      this.tooltip,
      this.side,
      this.shape,
      this.clipBehavior = Clip.none,
      this.autofocus = false,
      this.backgroundColor,
      this.disabledColor,
      this.padding,
      this.visualDensity,
      this.materialTapTargetSize,
      this.elevation,
      this.shadowColor,
      this.surfaceTintColor,
      this.iconTheme,
      final String? $type})
      : $type = $type ?? 'actionChip';

  factory _$ActionChip.fromJson(Map<String, dynamic> json) =>
      _$$ActionChipFromJson(json);

  @override
  final Key? key;
  @override
  final Widget? avatar;
// any
  @override
  final Widget label;
  @override
  final TextStyle? labelStyle;
  @override
  final EdgeInsets? labelPadding;
  @override
  final Callback? onPressed;
  @override
  final double? pressElevation;
  @override
  final String? tooltip;
  @override
  final BorderSide? side;
  @override
  final ShapeBorder? shape;
  @override
  @JsonKey()
  final Clip clipBehavior;
// Widget? focusNode, // any
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final Color? backgroundColor;
  @override
  final Color? disabledColor;
  @override
  final EdgeInsets? padding;
  @override
  final VisualDensity? visualDensity;
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  final double? elevation;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final IconThemeData? iconTheme;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.actionChip(key: $key, avatar: $avatar, label: $label, labelStyle: $labelStyle, labelPadding: $labelPadding, onPressed: $onPressed, pressElevation: $pressElevation, tooltip: $tooltip, side: $side, shape: $shape, clipBehavior: $clipBehavior, autofocus: $autofocus, backgroundColor: $backgroundColor, disabledColor: $disabledColor, padding: $padding, visualDensity: $visualDensity, materialTapTargetSize: $materialTapTargetSize, elevation: $elevation, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, iconTheme: $iconTheme)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ActionChip &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.avatar, avatar) || other.avatar == avatar) &&
            (identical(other.label, label) || other.label == label) &&
            (identical(other.labelStyle, labelStyle) ||
                other.labelStyle == labelStyle) &&
            (identical(other.labelPadding, labelPadding) ||
                other.labelPadding == labelPadding) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.pressElevation, pressElevation) ||
                other.pressElevation == pressElevation) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.side, side) || other.side == side) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.disabledColor, disabledColor) ||
                other.disabledColor == disabledColor) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.visualDensity, visualDensity) ||
                other.visualDensity == visualDensity) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.iconTheme, iconTheme) ||
                other.iconTheme == iconTheme));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        onPressed,
        pressElevation,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        disabledColor,
        padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ActionChipCopyWith<_$ActionChip> get copyWith =>
      __$$ActionChipCopyWithImpl<_$ActionChip>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return actionChip(
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        onPressed,
        pressElevation,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        disabledColor,
        this.padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return actionChip?.call(
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        onPressed,
        pressElevation,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        disabledColor,
        this.padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (actionChip != null) {
      return actionChip(
          key,
          avatar,
          label,
          labelStyle,
          labelPadding,
          onPressed,
          pressElevation,
          tooltip,
          side,
          shape,
          clipBehavior,
          autofocus,
          backgroundColor,
          disabledColor,
          this.padding,
          visualDensity,
          materialTapTargetSize,
          elevation,
          shadowColor,
          surfaceTintColor,
          iconTheme);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return actionChip(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return actionChip?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (actionChip != null) {
      return actionChip(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ActionChipToJson(
      this,
    );
  }
}

abstract class ActionChip implements Widget {
  const factory ActionChip(
      {final Key? key,
      final Widget? avatar,
      required final Widget label,
      final TextStyle? labelStyle,
      final EdgeInsets? labelPadding,
      final Callback? onPressed,
      final double? pressElevation,
      final String? tooltip,
      final BorderSide? side,
      final ShapeBorder? shape,
      final Clip clipBehavior,
      final bool autofocus,
      final Color? backgroundColor,
      final Color? disabledColor,
      final EdgeInsets? padding,
      final VisualDensity? visualDensity,
      final MaterialTapTargetSize? materialTapTargetSize,
      final double? elevation,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final IconThemeData? iconTheme}) = _$ActionChip;

  factory ActionChip.fromJson(Map<String, dynamic> json) =
      _$ActionChip.fromJson;

  @override
  Key? get key;
  Widget? get avatar; // any
  Widget get label;
  TextStyle? get labelStyle;
  EdgeInsets? get labelPadding;
  Callback? get onPressed;
  double? get pressElevation;
  String? get tooltip;
  BorderSide? get side;
  ShapeBorder? get shape;
  Clip get clipBehavior; // Widget? focusNode, // any
  bool get autofocus;
  Color? get backgroundColor;
  Color? get disabledColor;
  EdgeInsets? get padding;
  VisualDensity? get visualDensity;
  MaterialTapTargetSize? get materialTapTargetSize;
  double? get elevation;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  IconThemeData? get iconTheme;
  @override
  @JsonKey(ignore: true)
  _$$ActionChipCopyWith<_$ActionChip> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FilterChipCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$FilterChipCopyWith(
          _$FilterChip value, $Res Function(_$FilterChip) then) =
      __$$FilterChipCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget? avatar,
      Widget label,
      TextStyle? labelStyle,
      EdgeInsets? labelPadding,
      bool selected,
      BoolSelectionCallback onSelected,
      double? pressElevation,
      Color? disabledColor,
      Color? selectedColor,
      String? tooltip,
      BorderSide? side,
      ShapeBorder? shape,
      Clip clipBehavior,
      bool autofocus,
      Color? backgroundColor,
      EdgeInsets? padding,
      VisualDensity? visualDensity,
      MaterialTapTargetSize? materialTapTargetSize,
      double? elevation,
      Color? shadowColor,
      Color? surfaceTintColor,
      IconThemeData? iconTheme,
      Color? selectedShadowColor,
      bool? showCheckmark,
      Color? checkmarkColor,
      ShapeBorder avatarBorder});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get avatar;
  $WidgetCopyWith<$Res> get label;
  $TextStyleCopyWith<$Res>? get labelStyle;
  $EdgeInsetsCopyWith<$Res>? get labelPadding;
  $ColorCopyWith<$Res>? get disabledColor;
  $ColorCopyWith<$Res>? get selectedColor;
  $BorderSideCopyWith<$Res>? get side;
  $ShapeBorderCopyWith<$Res>? get shape;
  $ColorCopyWith<$Res>? get backgroundColor;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $VisualDensityCopyWith<$Res>? get visualDensity;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $IconThemeDataCopyWith<$Res>? get iconTheme;
  $ColorCopyWith<$Res>? get selectedShadowColor;
  $ColorCopyWith<$Res>? get checkmarkColor;
  $ShapeBorderCopyWith<$Res> get avatarBorder;
}

/// @nodoc
class __$$FilterChipCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$FilterChip>
    implements _$$FilterChipCopyWith<$Res> {
  __$$FilterChipCopyWithImpl(
      _$FilterChip _value, $Res Function(_$FilterChip) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? avatar = freezed,
    Object? label = null,
    Object? labelStyle = freezed,
    Object? labelPadding = freezed,
    Object? selected = null,
    Object? onSelected = freezed,
    Object? pressElevation = freezed,
    Object? disabledColor = freezed,
    Object? selectedColor = freezed,
    Object? tooltip = freezed,
    Object? side = freezed,
    Object? shape = freezed,
    Object? clipBehavior = null,
    Object? autofocus = null,
    Object? backgroundColor = freezed,
    Object? padding = freezed,
    Object? visualDensity = freezed,
    Object? materialTapTargetSize = freezed,
    Object? elevation = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? iconTheme = freezed,
    Object? selectedShadowColor = freezed,
    Object? showCheckmark = freezed,
    Object? checkmarkColor = freezed,
    Object? avatarBorder = null,
  }) {
    return _then(_$FilterChip(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      avatar: freezed == avatar
          ? _value.avatar
          : avatar // ignore: cast_nullable_to_non_nullable
              as Widget?,
      label: null == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as Widget,
      labelStyle: freezed == labelStyle
          ? _value.labelStyle
          : labelStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      labelPadding: freezed == labelPadding
          ? _value.labelPadding
          : labelPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      selected: null == selected
          ? _value.selected
          : selected // ignore: cast_nullable_to_non_nullable
              as bool,
      onSelected: freezed == onSelected
          ? _value.onSelected
          : onSelected // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback,
      pressElevation: freezed == pressElevation
          ? _value.pressElevation
          : pressElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      disabledColor: freezed == disabledColor
          ? _value.disabledColor
          : disabledColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      selectedColor: freezed == selectedColor
          ? _value.selectedColor
          : selectedColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      side: freezed == side
          ? _value.side
          : side // ignore: cast_nullable_to_non_nullable
              as BorderSide?,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      visualDensity: freezed == visualDensity
          ? _value.visualDensity
          : visualDensity // ignore: cast_nullable_to_non_nullable
              as VisualDensity?,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      iconTheme: freezed == iconTheme
          ? _value.iconTheme
          : iconTheme // ignore: cast_nullable_to_non_nullable
              as IconThemeData?,
      selectedShadowColor: freezed == selectedShadowColor
          ? _value.selectedShadowColor
          : selectedShadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      showCheckmark: freezed == showCheckmark
          ? _value.showCheckmark
          : showCheckmark // ignore: cast_nullable_to_non_nullable
              as bool?,
      checkmarkColor: freezed == checkmarkColor
          ? _value.checkmarkColor
          : checkmarkColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      avatarBorder: null == avatarBorder
          ? _value.avatarBorder
          : avatarBorder // ignore: cast_nullable_to_non_nullable
              as ShapeBorder,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get avatar {
    if (_value.avatar == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.avatar!, (value) {
      return _then(_value.copyWith(avatar: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get label {
    return $WidgetCopyWith<$Res>(_value.label, (value) {
      return _then(_value.copyWith(label: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get labelStyle {
    if (_value.labelStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.labelStyle!, (value) {
      return _then(_value.copyWith(labelStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get labelPadding {
    if (_value.labelPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.labelPadding!, (value) {
      return _then(_value.copyWith(labelPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get disabledColor {
    if (_value.disabledColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.disabledColor!, (value) {
      return _then(_value.copyWith(disabledColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get selectedColor {
    if (_value.selectedColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.selectedColor!, (value) {
      return _then(_value.copyWith(selectedColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BorderSideCopyWith<$Res>? get side {
    if (_value.side == null) {
      return null;
    }

    return $BorderSideCopyWith<$Res>(_value.side!, (value) {
      return _then(_value.copyWith(side: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $VisualDensityCopyWith<$Res>? get visualDensity {
    if (_value.visualDensity == null) {
      return null;
    }

    return $VisualDensityCopyWith<$Res>(_value.visualDensity!, (value) {
      return _then(_value.copyWith(visualDensity: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $IconThemeDataCopyWith<$Res>? get iconTheme {
    if (_value.iconTheme == null) {
      return null;
    }

    return $IconThemeDataCopyWith<$Res>(_value.iconTheme!, (value) {
      return _then(_value.copyWith(iconTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get selectedShadowColor {
    if (_value.selectedShadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.selectedShadowColor!, (value) {
      return _then(_value.copyWith(selectedShadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get checkmarkColor {
    if (_value.checkmarkColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.checkmarkColor!, (value) {
      return _then(_value.copyWith(checkmarkColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res> get avatarBorder {
    return $ShapeBorderCopyWith<$Res>(_value.avatarBorder, (value) {
      return _then(_value.copyWith(avatarBorder: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$FilterChip implements FilterChip {
  const _$FilterChip(
      {this.key,
      this.avatar,
      required this.label,
      this.labelStyle,
      this.labelPadding,
      this.selected = false,
      required this.onSelected,
      this.pressElevation,
      this.disabledColor,
      this.selectedColor,
      this.tooltip,
      this.side,
      this.shape,
      this.clipBehavior = Clip.none,
      this.autofocus = false,
      this.backgroundColor,
      this.padding,
      this.visualDensity,
      this.materialTapTargetSize,
      this.elevation,
      this.shadowColor,
      this.surfaceTintColor,
      this.iconTheme,
      this.selectedShadowColor,
      this.showCheckmark,
      this.checkmarkColor,
      this.avatarBorder = const ShapeBorder.circle(),
      final String? $type})
      : $type = $type ?? 'filterChip';

  factory _$FilterChip.fromJson(Map<String, dynamic> json) =>
      _$$FilterChipFromJson(json);

  @override
  final Key? key;
  @override
  final Widget? avatar;
// any
  @override
  final Widget label;
  @override
  final TextStyle? labelStyle;
  @override
  final EdgeInsets? labelPadding;
  @override
  @JsonKey()
  final bool selected;
  @override
  final BoolSelectionCallback onSelected;
//any  ValueChanged<bool>?
  @override
  final double? pressElevation;
  @override
  final Color? disabledColor;
  @override
  final Color? selectedColor;
  @override
  final String? tooltip;
  @override
  final BorderSide? side;
  @override
  final ShapeBorder? shape;
  @override
  @JsonKey()
  final Clip clipBehavior;
// Widget? focusNode, // any
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final Color? backgroundColor;
  @override
  final EdgeInsets? padding;
  @override
  final VisualDensity? visualDensity;
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  final double? elevation;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final IconThemeData? iconTheme;
  @override
  final Color? selectedShadowColor;
  @override
  final bool? showCheckmark;
  @override
  final Color? checkmarkColor;
  @override
  @JsonKey()
  final ShapeBorder avatarBorder;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.filterChip(key: $key, avatar: $avatar, label: $label, labelStyle: $labelStyle, labelPadding: $labelPadding, selected: $selected, onSelected: $onSelected, pressElevation: $pressElevation, disabledColor: $disabledColor, selectedColor: $selectedColor, tooltip: $tooltip, side: $side, shape: $shape, clipBehavior: $clipBehavior, autofocus: $autofocus, backgroundColor: $backgroundColor, padding: $padding, visualDensity: $visualDensity, materialTapTargetSize: $materialTapTargetSize, elevation: $elevation, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, iconTheme: $iconTheme, selectedShadowColor: $selectedShadowColor, showCheckmark: $showCheckmark, checkmarkColor: $checkmarkColor, avatarBorder: $avatarBorder)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FilterChip &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.avatar, avatar) || other.avatar == avatar) &&
            (identical(other.label, label) || other.label == label) &&
            (identical(other.labelStyle, labelStyle) ||
                other.labelStyle == labelStyle) &&
            (identical(other.labelPadding, labelPadding) ||
                other.labelPadding == labelPadding) &&
            (identical(other.selected, selected) ||
                other.selected == selected) &&
            const DeepCollectionEquality()
                .equals(other.onSelected, onSelected) &&
            (identical(other.pressElevation, pressElevation) ||
                other.pressElevation == pressElevation) &&
            (identical(other.disabledColor, disabledColor) ||
                other.disabledColor == disabledColor) &&
            (identical(other.selectedColor, selectedColor) ||
                other.selectedColor == selectedColor) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.side, side) || other.side == side) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.visualDensity, visualDensity) ||
                other.visualDensity == visualDensity) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.iconTheme, iconTheme) ||
                other.iconTheme == iconTheme) &&
            (identical(other.selectedShadowColor, selectedShadowColor) ||
                other.selectedShadowColor == selectedShadowColor) &&
            (identical(other.showCheckmark, showCheckmark) ||
                other.showCheckmark == showCheckmark) &&
            (identical(other.checkmarkColor, checkmarkColor) ||
                other.checkmarkColor == checkmarkColor) &&
            (identical(other.avatarBorder, avatarBorder) ||
                other.avatarBorder == avatarBorder));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        selected,
        const DeepCollectionEquality().hash(onSelected),
        pressElevation,
        disabledColor,
        selectedColor,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme,
        selectedShadowColor,
        showCheckmark,
        checkmarkColor,
        avatarBorder
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FilterChipCopyWith<_$FilterChip> get copyWith =>
      __$$FilterChipCopyWithImpl<_$FilterChip>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return filterChip(
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        selected,
        onSelected,
        pressElevation,
        disabledColor,
        selectedColor,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        this.padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme,
        selectedShadowColor,
        showCheckmark,
        checkmarkColor,
        avatarBorder);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return filterChip?.call(
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        selected,
        onSelected,
        pressElevation,
        disabledColor,
        selectedColor,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        this.padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme,
        selectedShadowColor,
        showCheckmark,
        checkmarkColor,
        avatarBorder);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (filterChip != null) {
      return filterChip(
          key,
          avatar,
          label,
          labelStyle,
          labelPadding,
          selected,
          onSelected,
          pressElevation,
          disabledColor,
          selectedColor,
          tooltip,
          side,
          shape,
          clipBehavior,
          autofocus,
          backgroundColor,
          this.padding,
          visualDensity,
          materialTapTargetSize,
          elevation,
          shadowColor,
          surfaceTintColor,
          iconTheme,
          selectedShadowColor,
          showCheckmark,
          checkmarkColor,
          avatarBorder);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return filterChip(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return filterChip?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (filterChip != null) {
      return filterChip(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$FilterChipToJson(
      this,
    );
  }
}

abstract class FilterChip implements Widget {
  const factory FilterChip(
      {final Key? key,
      final Widget? avatar,
      required final Widget label,
      final TextStyle? labelStyle,
      final EdgeInsets? labelPadding,
      final bool selected,
      required final BoolSelectionCallback onSelected,
      final double? pressElevation,
      final Color? disabledColor,
      final Color? selectedColor,
      final String? tooltip,
      final BorderSide? side,
      final ShapeBorder? shape,
      final Clip clipBehavior,
      final bool autofocus,
      final Color? backgroundColor,
      final EdgeInsets? padding,
      final VisualDensity? visualDensity,
      final MaterialTapTargetSize? materialTapTargetSize,
      final double? elevation,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final IconThemeData? iconTheme,
      final Color? selectedShadowColor,
      final bool? showCheckmark,
      final Color? checkmarkColor,
      final ShapeBorder avatarBorder}) = _$FilterChip;

  factory FilterChip.fromJson(Map<String, dynamic> json) =
      _$FilterChip.fromJson;

  @override
  Key? get key;
  Widget? get avatar; // any
  Widget get label;
  TextStyle? get labelStyle;
  EdgeInsets? get labelPadding;
  bool get selected;
  BoolSelectionCallback get onSelected; //any  ValueChanged<bool>?
  double? get pressElevation;
  Color? get disabledColor;
  Color? get selectedColor;
  String? get tooltip;
  BorderSide? get side;
  ShapeBorder? get shape;
  Clip get clipBehavior; // Widget? focusNode, // any
  bool get autofocus;
  Color? get backgroundColor;
  EdgeInsets? get padding;
  VisualDensity? get visualDensity;
  MaterialTapTargetSize? get materialTapTargetSize;
  double? get elevation;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  IconThemeData? get iconTheme;
  Color? get selectedShadowColor;
  bool? get showCheckmark;
  Color? get checkmarkColor;
  ShapeBorder get avatarBorder;
  @override
  @JsonKey(ignore: true)
  _$$FilterChipCopyWith<_$FilterChip> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$InputChipCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$InputChipCopyWith(
          _$InputChip value, $Res Function(_$InputChip) then) =
      __$$InputChipCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget? avatar,
      Widget label,
      TextStyle? labelStyle,
      EdgeInsets? labelPadding,
      bool selected,
      bool isEnabled,
      BoolSelectionCallback? onSelected,
      Widget? deleteIcon,
      Callback? onDeleted,
      Color? deleteIconColor,
      String? deleteButtonTooltipMessage,
      Callback? onPressed,
      double? pressElevation,
      Color? disabledColor,
      Color? selectedColor,
      String? tooltip,
      BorderSide? side,
      ShapeBorder? shape,
      Clip clipBehavior,
      bool autofocus,
      Color? backgroundColor,
      EdgeInsets? padding,
      VisualDensity? visualDensity,
      MaterialTapTargetSize? materialTapTargetSize,
      double? elevation,
      Color? shadowColor,
      Color? surfaceTintColor,
      IconThemeData? iconTheme,
      Color? selectedShadowColor,
      bool? showCheckmark,
      Color? checkmarkColor,
      ShapeBorder avatarBorder});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get avatar;
  $WidgetCopyWith<$Res> get label;
  $TextStyleCopyWith<$Res>? get labelStyle;
  $EdgeInsetsCopyWith<$Res>? get labelPadding;
  $WidgetCopyWith<$Res>? get deleteIcon;
  $CallbackCopyWith<$Res>? get onDeleted;
  $ColorCopyWith<$Res>? get deleteIconColor;
  $CallbackCopyWith<$Res>? get onPressed;
  $ColorCopyWith<$Res>? get disabledColor;
  $ColorCopyWith<$Res>? get selectedColor;
  $BorderSideCopyWith<$Res>? get side;
  $ShapeBorderCopyWith<$Res>? get shape;
  $ColorCopyWith<$Res>? get backgroundColor;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $VisualDensityCopyWith<$Res>? get visualDensity;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $IconThemeDataCopyWith<$Res>? get iconTheme;
  $ColorCopyWith<$Res>? get selectedShadowColor;
  $ColorCopyWith<$Res>? get checkmarkColor;
  $ShapeBorderCopyWith<$Res> get avatarBorder;
}

/// @nodoc
class __$$InputChipCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$InputChip>
    implements _$$InputChipCopyWith<$Res> {
  __$$InputChipCopyWithImpl(
      _$InputChip _value, $Res Function(_$InputChip) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? avatar = freezed,
    Object? label = null,
    Object? labelStyle = freezed,
    Object? labelPadding = freezed,
    Object? selected = null,
    Object? isEnabled = null,
    Object? onSelected = freezed,
    Object? deleteIcon = freezed,
    Object? onDeleted = freezed,
    Object? deleteIconColor = freezed,
    Object? deleteButtonTooltipMessage = freezed,
    Object? onPressed = freezed,
    Object? pressElevation = freezed,
    Object? disabledColor = freezed,
    Object? selectedColor = freezed,
    Object? tooltip = freezed,
    Object? side = freezed,
    Object? shape = freezed,
    Object? clipBehavior = null,
    Object? autofocus = null,
    Object? backgroundColor = freezed,
    Object? padding = freezed,
    Object? visualDensity = freezed,
    Object? materialTapTargetSize = freezed,
    Object? elevation = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? iconTheme = freezed,
    Object? selectedShadowColor = freezed,
    Object? showCheckmark = freezed,
    Object? checkmarkColor = freezed,
    Object? avatarBorder = null,
  }) {
    return _then(_$InputChip(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      avatar: freezed == avatar
          ? _value.avatar
          : avatar // ignore: cast_nullable_to_non_nullable
              as Widget?,
      label: null == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as Widget,
      labelStyle: freezed == labelStyle
          ? _value.labelStyle
          : labelStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      labelPadding: freezed == labelPadding
          ? _value.labelPadding
          : labelPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      selected: null == selected
          ? _value.selected
          : selected // ignore: cast_nullable_to_non_nullable
              as bool,
      isEnabled: null == isEnabled
          ? _value.isEnabled
          : isEnabled // ignore: cast_nullable_to_non_nullable
              as bool,
      onSelected: freezed == onSelected
          ? _value.onSelected
          : onSelected // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback?,
      deleteIcon: freezed == deleteIcon
          ? _value.deleteIcon
          : deleteIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      onDeleted: freezed == onDeleted
          ? _value.onDeleted
          : onDeleted // ignore: cast_nullable_to_non_nullable
              as Callback?,
      deleteIconColor: freezed == deleteIconColor
          ? _value.deleteIconColor
          : deleteIconColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      deleteButtonTooltipMessage: freezed == deleteButtonTooltipMessage
          ? _value.deleteButtonTooltipMessage
          : deleteButtonTooltipMessage // ignore: cast_nullable_to_non_nullable
              as String?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      pressElevation: freezed == pressElevation
          ? _value.pressElevation
          : pressElevation // ignore: cast_nullable_to_non_nullable
              as double?,
      disabledColor: freezed == disabledColor
          ? _value.disabledColor
          : disabledColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      selectedColor: freezed == selectedColor
          ? _value.selectedColor
          : selectedColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      tooltip: freezed == tooltip
          ? _value.tooltip
          : tooltip // ignore: cast_nullable_to_non_nullable
              as String?,
      side: freezed == side
          ? _value.side
          : side // ignore: cast_nullable_to_non_nullable
              as BorderSide?,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      visualDensity: freezed == visualDensity
          ? _value.visualDensity
          : visualDensity // ignore: cast_nullable_to_non_nullable
              as VisualDensity?,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      iconTheme: freezed == iconTheme
          ? _value.iconTheme
          : iconTheme // ignore: cast_nullable_to_non_nullable
              as IconThemeData?,
      selectedShadowColor: freezed == selectedShadowColor
          ? _value.selectedShadowColor
          : selectedShadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      showCheckmark: freezed == showCheckmark
          ? _value.showCheckmark
          : showCheckmark // ignore: cast_nullable_to_non_nullable
              as bool?,
      checkmarkColor: freezed == checkmarkColor
          ? _value.checkmarkColor
          : checkmarkColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      avatarBorder: null == avatarBorder
          ? _value.avatarBorder
          : avatarBorder // ignore: cast_nullable_to_non_nullable
              as ShapeBorder,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get avatar {
    if (_value.avatar == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.avatar!, (value) {
      return _then(_value.copyWith(avatar: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get label {
    return $WidgetCopyWith<$Res>(_value.label, (value) {
      return _then(_value.copyWith(label: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get labelStyle {
    if (_value.labelStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.labelStyle!, (value) {
      return _then(_value.copyWith(labelStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get labelPadding {
    if (_value.labelPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.labelPadding!, (value) {
      return _then(_value.copyWith(labelPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get deleteIcon {
    if (_value.deleteIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.deleteIcon!, (value) {
      return _then(_value.copyWith(deleteIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onDeleted {
    if (_value.onDeleted == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onDeleted!, (value) {
      return _then(_value.copyWith(onDeleted: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get deleteIconColor {
    if (_value.deleteIconColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.deleteIconColor!, (value) {
      return _then(_value.copyWith(deleteIconColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get disabledColor {
    if (_value.disabledColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.disabledColor!, (value) {
      return _then(_value.copyWith(disabledColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get selectedColor {
    if (_value.selectedColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.selectedColor!, (value) {
      return _then(_value.copyWith(selectedColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $BorderSideCopyWith<$Res>? get side {
    if (_value.side == null) {
      return null;
    }

    return $BorderSideCopyWith<$Res>(_value.side!, (value) {
      return _then(_value.copyWith(side: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $VisualDensityCopyWith<$Res>? get visualDensity {
    if (_value.visualDensity == null) {
      return null;
    }

    return $VisualDensityCopyWith<$Res>(_value.visualDensity!, (value) {
      return _then(_value.copyWith(visualDensity: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $IconThemeDataCopyWith<$Res>? get iconTheme {
    if (_value.iconTheme == null) {
      return null;
    }

    return $IconThemeDataCopyWith<$Res>(_value.iconTheme!, (value) {
      return _then(_value.copyWith(iconTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get selectedShadowColor {
    if (_value.selectedShadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.selectedShadowColor!, (value) {
      return _then(_value.copyWith(selectedShadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get checkmarkColor {
    if (_value.checkmarkColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.checkmarkColor!, (value) {
      return _then(_value.copyWith(checkmarkColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res> get avatarBorder {
    return $ShapeBorderCopyWith<$Res>(_value.avatarBorder, (value) {
      return _then(_value.copyWith(avatarBorder: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$InputChip implements InputChip {
  const _$InputChip(
      {this.key,
      this.avatar,
      required this.label,
      this.labelStyle,
      this.labelPadding,
      this.selected = false,
      this.isEnabled = true,
      this.onSelected,
      this.deleteIcon,
      this.onDeleted,
      this.deleteIconColor,
      this.deleteButtonTooltipMessage,
      this.onPressed,
      this.pressElevation,
      this.disabledColor,
      this.selectedColor,
      this.tooltip,
      this.side,
      this.shape,
      this.clipBehavior = Clip.none,
      this.autofocus = false,
      this.backgroundColor,
      this.padding,
      this.visualDensity,
      this.materialTapTargetSize,
      this.elevation,
      this.shadowColor,
      this.surfaceTintColor,
      this.iconTheme,
      this.selectedShadowColor,
      this.showCheckmark,
      this.checkmarkColor,
      this.avatarBorder = const ShapeBorder.circle(),
      final String? $type})
      : $type = $type ?? 'inputChip';

  factory _$InputChip.fromJson(Map<String, dynamic> json) =>
      _$$InputChipFromJson(json);

  @override
  final Key? key;
  @override
  final Widget? avatar;
// any
  @override
  final Widget label;
  @override
  final TextStyle? labelStyle;
  @override
  final EdgeInsets? labelPadding;
  @override
  @JsonKey()
  final bool selected;
  @override
  @JsonKey()
  final bool isEnabled;
  @override
  final BoolSelectionCallback? onSelected;
//any  ValueChanged<bool>?
  @override
  final Widget? deleteIcon;
  @override
  final Callback? onDeleted;
  @override
  final Color? deleteIconColor;
  @override
  final String? deleteButtonTooltipMessage;
  @override
  final Callback? onPressed;
  @override
  final double? pressElevation;
  @override
  final Color? disabledColor;
  @override
  final Color? selectedColor;
  @override
  final String? tooltip;
  @override
  final BorderSide? side;
  @override
  final ShapeBorder? shape;
  @override
  @JsonKey()
  final Clip clipBehavior;
// Widget? focusNode, // any
  @override
  @JsonKey()
  final bool autofocus;
  @override
  final Color? backgroundColor;
  @override
  final EdgeInsets? padding;
  @override
  final VisualDensity? visualDensity;
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  final double? elevation;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final IconThemeData? iconTheme;
  @override
  final Color? selectedShadowColor;
  @override
  final bool? showCheckmark;
  @override
  final Color? checkmarkColor;
  @override
  @JsonKey()
  final ShapeBorder avatarBorder;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.inputChip(key: $key, avatar: $avatar, label: $label, labelStyle: $labelStyle, labelPadding: $labelPadding, selected: $selected, isEnabled: $isEnabled, onSelected: $onSelected, deleteIcon: $deleteIcon, onDeleted: $onDeleted, deleteIconColor: $deleteIconColor, deleteButtonTooltipMessage: $deleteButtonTooltipMessage, onPressed: $onPressed, pressElevation: $pressElevation, disabledColor: $disabledColor, selectedColor: $selectedColor, tooltip: $tooltip, side: $side, shape: $shape, clipBehavior: $clipBehavior, autofocus: $autofocus, backgroundColor: $backgroundColor, padding: $padding, visualDensity: $visualDensity, materialTapTargetSize: $materialTapTargetSize, elevation: $elevation, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, iconTheme: $iconTheme, selectedShadowColor: $selectedShadowColor, showCheckmark: $showCheckmark, checkmarkColor: $checkmarkColor, avatarBorder: $avatarBorder)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$InputChip &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.avatar, avatar) || other.avatar == avatar) &&
            (identical(other.label, label) || other.label == label) &&
            (identical(other.labelStyle, labelStyle) ||
                other.labelStyle == labelStyle) &&
            (identical(other.labelPadding, labelPadding) ||
                other.labelPadding == labelPadding) &&
            (identical(other.selected, selected) ||
                other.selected == selected) &&
            (identical(other.isEnabled, isEnabled) ||
                other.isEnabled == isEnabled) &&
            const DeepCollectionEquality()
                .equals(other.onSelected, onSelected) &&
            (identical(other.deleteIcon, deleteIcon) ||
                other.deleteIcon == deleteIcon) &&
            (identical(other.onDeleted, onDeleted) ||
                other.onDeleted == onDeleted) &&
            (identical(other.deleteIconColor, deleteIconColor) ||
                other.deleteIconColor == deleteIconColor) &&
            (identical(other.deleteButtonTooltipMessage,
                    deleteButtonTooltipMessage) ||
                other.deleteButtonTooltipMessage ==
                    deleteButtonTooltipMessage) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            (identical(other.pressElevation, pressElevation) ||
                other.pressElevation == pressElevation) &&
            (identical(other.disabledColor, disabledColor) ||
                other.disabledColor == disabledColor) &&
            (identical(other.selectedColor, selectedColor) ||
                other.selectedColor == selectedColor) &&
            (identical(other.tooltip, tooltip) || other.tooltip == tooltip) &&
            (identical(other.side, side) || other.side == side) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.visualDensity, visualDensity) ||
                other.visualDensity == visualDensity) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.iconTheme, iconTheme) ||
                other.iconTheme == iconTheme) &&
            (identical(other.selectedShadowColor, selectedShadowColor) ||
                other.selectedShadowColor == selectedShadowColor) &&
            (identical(other.showCheckmark, showCheckmark) ||
                other.showCheckmark == showCheckmark) &&
            (identical(other.checkmarkColor, checkmarkColor) ||
                other.checkmarkColor == checkmarkColor) &&
            (identical(other.avatarBorder, avatarBorder) ||
                other.avatarBorder == avatarBorder));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        selected,
        isEnabled,
        const DeepCollectionEquality().hash(onSelected),
        deleteIcon,
        onDeleted,
        deleteIconColor,
        deleteButtonTooltipMessage,
        onPressed,
        pressElevation,
        disabledColor,
        selectedColor,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme,
        selectedShadowColor,
        showCheckmark,
        checkmarkColor,
        avatarBorder
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$InputChipCopyWith<_$InputChip> get copyWith =>
      __$$InputChipCopyWithImpl<_$InputChip>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return inputChip(
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        selected,
        isEnabled,
        onSelected,
        deleteIcon,
        onDeleted,
        deleteIconColor,
        deleteButtonTooltipMessage,
        onPressed,
        pressElevation,
        disabledColor,
        selectedColor,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        this.padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme,
        selectedShadowColor,
        showCheckmark,
        checkmarkColor,
        avatarBorder);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return inputChip?.call(
        key,
        avatar,
        label,
        labelStyle,
        labelPadding,
        selected,
        isEnabled,
        onSelected,
        deleteIcon,
        onDeleted,
        deleteIconColor,
        deleteButtonTooltipMessage,
        onPressed,
        pressElevation,
        disabledColor,
        selectedColor,
        tooltip,
        side,
        shape,
        clipBehavior,
        autofocus,
        backgroundColor,
        this.padding,
        visualDensity,
        materialTapTargetSize,
        elevation,
        shadowColor,
        surfaceTintColor,
        iconTheme,
        selectedShadowColor,
        showCheckmark,
        checkmarkColor,
        avatarBorder);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (inputChip != null) {
      return inputChip(
          key,
          avatar,
          label,
          labelStyle,
          labelPadding,
          selected,
          isEnabled,
          onSelected,
          deleteIcon,
          onDeleted,
          deleteIconColor,
          deleteButtonTooltipMessage,
          onPressed,
          pressElevation,
          disabledColor,
          selectedColor,
          tooltip,
          side,
          shape,
          clipBehavior,
          autofocus,
          backgroundColor,
          this.padding,
          visualDensity,
          materialTapTargetSize,
          elevation,
          shadowColor,
          surfaceTintColor,
          iconTheme,
          selectedShadowColor,
          showCheckmark,
          checkmarkColor,
          avatarBorder);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return inputChip(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return inputChip?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (inputChip != null) {
      return inputChip(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$InputChipToJson(
      this,
    );
  }
}

abstract class InputChip implements Widget {
  const factory InputChip(
      {final Key? key,
      final Widget? avatar,
      required final Widget label,
      final TextStyle? labelStyle,
      final EdgeInsets? labelPadding,
      final bool selected,
      final bool isEnabled,
      final BoolSelectionCallback? onSelected,
      final Widget? deleteIcon,
      final Callback? onDeleted,
      final Color? deleteIconColor,
      final String? deleteButtonTooltipMessage,
      final Callback? onPressed,
      final double? pressElevation,
      final Color? disabledColor,
      final Color? selectedColor,
      final String? tooltip,
      final BorderSide? side,
      final ShapeBorder? shape,
      final Clip clipBehavior,
      final bool autofocus,
      final Color? backgroundColor,
      final EdgeInsets? padding,
      final VisualDensity? visualDensity,
      final MaterialTapTargetSize? materialTapTargetSize,
      final double? elevation,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final IconThemeData? iconTheme,
      final Color? selectedShadowColor,
      final bool? showCheckmark,
      final Color? checkmarkColor,
      final ShapeBorder avatarBorder}) = _$InputChip;

  factory InputChip.fromJson(Map<String, dynamic> json) = _$InputChip.fromJson;

  @override
  Key? get key;
  Widget? get avatar; // any
  Widget get label;
  TextStyle? get labelStyle;
  EdgeInsets? get labelPadding;
  bool get selected;
  bool get isEnabled;
  BoolSelectionCallback? get onSelected; //any  ValueChanged<bool>?
  Widget? get deleteIcon;
  Callback? get onDeleted;
  Color? get deleteIconColor;
  String? get deleteButtonTooltipMessage;
  Callback? get onPressed;
  double? get pressElevation;
  Color? get disabledColor;
  Color? get selectedColor;
  String? get tooltip;
  BorderSide? get side;
  ShapeBorder? get shape;
  Clip get clipBehavior; // Widget? focusNode, // any
  bool get autofocus;
  Color? get backgroundColor;
  EdgeInsets? get padding;
  VisualDensity? get visualDensity;
  MaterialTapTargetSize? get materialTapTargetSize;
  double? get elevation;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  IconThemeData? get iconTheme;
  Color? get selectedShadowColor;
  bool? get showCheckmark;
  Color? get checkmarkColor;
  ShapeBorder get avatarBorder;
  @override
  @JsonKey(ignore: true)
  _$$InputChipCopyWith<_$InputChip> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$MenuAnchorCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$MenuAnchorCopyWith(
          _$MenuAnchor value, $Res Function(_$MenuAnchor) then) =
      __$$MenuAnchorCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Offset alignmentOffset,
      Clip clipBehavior,
      bool anchorTapClosesMenu,
      Callback? onOpen,
      Callback? onClose,
      bool crossAxisUnconstrained,
      List<Widget> menuChildren,
      Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $OffsetCopyWith<$Res> get alignmentOffset;
  $CallbackCopyWith<$Res>? get onOpen;
  $CallbackCopyWith<$Res>? get onClose;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$MenuAnchorCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$MenuAnchor>
    implements _$$MenuAnchorCopyWith<$Res> {
  __$$MenuAnchorCopyWithImpl(
      _$MenuAnchor _value, $Res Function(_$MenuAnchor) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? alignmentOffset = null,
    Object? clipBehavior = null,
    Object? anchorTapClosesMenu = null,
    Object? onOpen = freezed,
    Object? onClose = freezed,
    Object? crossAxisUnconstrained = null,
    Object? menuChildren = null,
    Object? child = freezed,
  }) {
    return _then(_$MenuAnchor(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      alignmentOffset: null == alignmentOffset
          ? _value.alignmentOffset
          : alignmentOffset // ignore: cast_nullable_to_non_nullable
              as Offset,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      anchorTapClosesMenu: null == anchorTapClosesMenu
          ? _value.anchorTapClosesMenu
          : anchorTapClosesMenu // ignore: cast_nullable_to_non_nullable
              as bool,
      onOpen: freezed == onOpen
          ? _value.onOpen
          : onOpen // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onClose: freezed == onClose
          ? _value.onClose
          : onClose // ignore: cast_nullable_to_non_nullable
              as Callback?,
      crossAxisUnconstrained: null == crossAxisUnconstrained
          ? _value.crossAxisUnconstrained
          : crossAxisUnconstrained // ignore: cast_nullable_to_non_nullable
              as bool,
      menuChildren: null == menuChildren
          ? _value._menuChildren
          : menuChildren // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $OffsetCopyWith<$Res> get alignmentOffset {
    return $OffsetCopyWith<$Res>(_value.alignmentOffset, (value) {
      return _then(_value.copyWith(alignmentOffset: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onOpen {
    if (_value.onOpen == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onOpen!, (value) {
      return _then(_value.copyWith(onOpen: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onClose {
    if (_value.onClose == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onClose!, (value) {
      return _then(_value.copyWith(onClose: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$MenuAnchor implements MenuAnchor {
  const _$MenuAnchor(
      {this.key,
      this.alignmentOffset = Offset.zero,
      this.clipBehavior = Clip.hardEdge,
      this.anchorTapClosesMenu = false,
      this.onOpen,
      this.onClose,
      this.crossAxisUnconstrained = true,
      required final List<Widget> menuChildren,
      this.child,
      final String? $type})
      : _menuChildren = menuChildren,
        $type = $type ?? 'menuAnchor';

  factory _$MenuAnchor.fromJson(Map<String, dynamic> json) =>
      _$$MenuAnchorFromJson(json);

  @override
  final Key? key;
// MenuController? controller,
// FocusNode? childFocusNode,
// MenuStyle? style,
  @override
  @JsonKey()
  final Offset alignmentOffset;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  @JsonKey()
  final bool anchorTapClosesMenu;
  @override
  final Callback? onOpen;
  @override
  final Callback? onClose;
  @override
  @JsonKey()
  final bool crossAxisUnconstrained;
  final List<Widget> _menuChildren;
  @override
  List<Widget> get menuChildren {
    if (_menuChildren is EqualUnmodifiableListView) return _menuChildren;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_menuChildren);
  }

// MenuAnchorChildBuilder? builder,
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.menuAnchor(key: $key, alignmentOffset: $alignmentOffset, clipBehavior: $clipBehavior, anchorTapClosesMenu: $anchorTapClosesMenu, onOpen: $onOpen, onClose: $onClose, crossAxisUnconstrained: $crossAxisUnconstrained, menuChildren: $menuChildren, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$MenuAnchor &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.alignmentOffset, alignmentOffset) ||
                other.alignmentOffset == alignmentOffset) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.anchorTapClosesMenu, anchorTapClosesMenu) ||
                other.anchorTapClosesMenu == anchorTapClosesMenu) &&
            (identical(other.onOpen, onOpen) || other.onOpen == onOpen) &&
            (identical(other.onClose, onClose) || other.onClose == onClose) &&
            (identical(other.crossAxisUnconstrained, crossAxisUnconstrained) ||
                other.crossAxisUnconstrained == crossAxisUnconstrained) &&
            const DeepCollectionEquality()
                .equals(other._menuChildren, _menuChildren) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      alignmentOffset,
      clipBehavior,
      anchorTapClosesMenu,
      onOpen,
      onClose,
      crossAxisUnconstrained,
      const DeepCollectionEquality().hash(_menuChildren),
      child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$MenuAnchorCopyWith<_$MenuAnchor> get copyWith =>
      __$$MenuAnchorCopyWithImpl<_$MenuAnchor>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return menuAnchor(key, alignmentOffset, clipBehavior, anchorTapClosesMenu,
        onOpen, onClose, crossAxisUnconstrained, menuChildren, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return menuAnchor?.call(
        key,
        alignmentOffset,
        clipBehavior,
        anchorTapClosesMenu,
        onOpen,
        onClose,
        crossAxisUnconstrained,
        menuChildren,
        child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (menuAnchor != null) {
      return menuAnchor(key, alignmentOffset, clipBehavior, anchorTapClosesMenu,
          onOpen, onClose, crossAxisUnconstrained, menuChildren, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return menuAnchor(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return menuAnchor?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (menuAnchor != null) {
      return menuAnchor(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$MenuAnchorToJson(
      this,
    );
  }
}

abstract class MenuAnchor implements Widget {
  const factory MenuAnchor(
      {final Key? key,
      final Offset alignmentOffset,
      final Clip clipBehavior,
      final bool anchorTapClosesMenu,
      final Callback? onOpen,
      final Callback? onClose,
      final bool crossAxisUnconstrained,
      required final List<Widget> menuChildren,
      final Widget? child}) = _$MenuAnchor;

  factory MenuAnchor.fromJson(Map<String, dynamic> json) =
      _$MenuAnchor.fromJson;

  @override
  Key? get key; // MenuController? controller,
// FocusNode? childFocusNode,
// MenuStyle? style,
  Offset get alignmentOffset;
  Clip get clipBehavior;
  bool get anchorTapClosesMenu;
  Callback? get onOpen;
  Callback? get onClose;
  bool get crossAxisUnconstrained;
  List<Widget> get menuChildren; // MenuAnchorChildBuilder? builder,
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$MenuAnchorCopyWith<_$MenuAnchor> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SubmenuButtonCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$SubmenuButtonCopyWith(
          _$SubmenuButton value, $Res Function(_$SubmenuButton) then) =
      __$$SubmenuButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      BoolSelectionCallback? onHover,
      BoolSelectionCallback? onFocusChange,
      Callback? onOpen,
      Callback? onClose,
      ButtonStyle? style,
      Offset? alignmentOffset,
      Clip clipBehavior,
      Widget? leadingIcon,
      Widget? trailingIcon,
      List<Widget> menuChildren,
      Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onOpen;
  $CallbackCopyWith<$Res>? get onClose;
  $ButtonStyleCopyWith<$Res>? get style;
  $OffsetCopyWith<$Res>? get alignmentOffset;
  $WidgetCopyWith<$Res>? get leadingIcon;
  $WidgetCopyWith<$Res>? get trailingIcon;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$SubmenuButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$SubmenuButton>
    implements _$$SubmenuButtonCopyWith<$Res> {
  __$$SubmenuButtonCopyWithImpl(
      _$SubmenuButton _value, $Res Function(_$SubmenuButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onHover = freezed,
    Object? onFocusChange = freezed,
    Object? onOpen = freezed,
    Object? onClose = freezed,
    Object? style = freezed,
    Object? alignmentOffset = freezed,
    Object? clipBehavior = null,
    Object? leadingIcon = freezed,
    Object? trailingIcon = freezed,
    Object? menuChildren = null,
    Object? child = null,
  }) {
    return _then(_$SubmenuButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onHover: freezed == onHover
          ? _value.onHover
          : onHover // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback?,
      onFocusChange: freezed == onFocusChange
          ? _value.onFocusChange
          : onFocusChange // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback?,
      onOpen: freezed == onOpen
          ? _value.onOpen
          : onOpen // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onClose: freezed == onClose
          ? _value.onClose
          : onClose // ignore: cast_nullable_to_non_nullable
              as Callback?,
      style: freezed == style
          ? _value.style
          : style // ignore: cast_nullable_to_non_nullable
              as ButtonStyle?,
      alignmentOffset: freezed == alignmentOffset
          ? _value.alignmentOffset
          : alignmentOffset // ignore: cast_nullable_to_non_nullable
              as Offset?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      leadingIcon: freezed == leadingIcon
          ? _value.leadingIcon
          : leadingIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      trailingIcon: freezed == trailingIcon
          ? _value.trailingIcon
          : trailingIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      menuChildren: null == menuChildren
          ? _value._menuChildren
          : menuChildren // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onOpen {
    if (_value.onOpen == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onOpen!, (value) {
      return _then(_value.copyWith(onOpen: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onClose {
    if (_value.onClose == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onClose!, (value) {
      return _then(_value.copyWith(onClose: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ButtonStyleCopyWith<$Res>? get style {
    if (_value.style == null) {
      return null;
    }

    return $ButtonStyleCopyWith<$Res>(_value.style!, (value) {
      return _then(_value.copyWith(style: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $OffsetCopyWith<$Res>? get alignmentOffset {
    if (_value.alignmentOffset == null) {
      return null;
    }

    return $OffsetCopyWith<$Res>(_value.alignmentOffset!, (value) {
      return _then(_value.copyWith(alignmentOffset: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get leadingIcon {
    if (_value.leadingIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.leadingIcon!, (value) {
      return _then(_value.copyWith(leadingIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get trailingIcon {
    if (_value.trailingIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.trailingIcon!, (value) {
      return _then(_value.copyWith(trailingIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$SubmenuButton implements SubmenuButton {
  const _$SubmenuButton(
      {this.key,
      this.onHover,
      this.onFocusChange,
      this.onOpen,
      this.onClose,
      this.style,
      this.alignmentOffset,
      this.clipBehavior = Clip.hardEdge,
      this.leadingIcon,
      this.trailingIcon,
      required final List<Widget> menuChildren,
      required this.child,
      final String? $type})
      : _menuChildren = menuChildren,
        $type = $type ?? 'submenuButton';

  factory _$SubmenuButton.fromJson(Map<String, dynamic> json) =>
      _$$SubmenuButtonFromJson(json);

  @override
  final Key? key;
  @override
  final BoolSelectionCallback? onHover;
  @override
  final BoolSelectionCallback? onFocusChange;
  @override
  final Callback? onOpen;
  @override
  final Callback? onClose;
// MenuController? controller,
  @override
  final ButtonStyle? style;
// MenuStyle? menuStyle,
  @override
  final Offset? alignmentOffset;
  @override
  @JsonKey()
  final Clip clipBehavior;
// FocusNode? focusNode,
// MaterialStatesController? statesController,
  @override
  final Widget? leadingIcon;
  @override
  final Widget? trailingIcon;
  final List<Widget> _menuChildren;
  @override
  List<Widget> get menuChildren {
    if (_menuChildren is EqualUnmodifiableListView) return _menuChildren;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_menuChildren);
  }

  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.submenuButton(key: $key, onHover: $onHover, onFocusChange: $onFocusChange, onOpen: $onOpen, onClose: $onClose, style: $style, alignmentOffset: $alignmentOffset, clipBehavior: $clipBehavior, leadingIcon: $leadingIcon, trailingIcon: $trailingIcon, menuChildren: $menuChildren, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SubmenuButton &&
            (identical(other.key, key) || other.key == key) &&
            const DeepCollectionEquality().equals(other.onHover, onHover) &&
            const DeepCollectionEquality()
                .equals(other.onFocusChange, onFocusChange) &&
            (identical(other.onOpen, onOpen) || other.onOpen == onOpen) &&
            (identical(other.onClose, onClose) || other.onClose == onClose) &&
            (identical(other.style, style) || other.style == style) &&
            (identical(other.alignmentOffset, alignmentOffset) ||
                other.alignmentOffset == alignmentOffset) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.leadingIcon, leadingIcon) ||
                other.leadingIcon == leadingIcon) &&
            (identical(other.trailingIcon, trailingIcon) ||
                other.trailingIcon == trailingIcon) &&
            const DeepCollectionEquality()
                .equals(other._menuChildren, _menuChildren) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      const DeepCollectionEquality().hash(onHover),
      const DeepCollectionEquality().hash(onFocusChange),
      onOpen,
      onClose,
      style,
      alignmentOffset,
      clipBehavior,
      leadingIcon,
      trailingIcon,
      const DeepCollectionEquality().hash(_menuChildren),
      child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SubmenuButtonCopyWith<_$SubmenuButton> get copyWith =>
      __$$SubmenuButtonCopyWithImpl<_$SubmenuButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return submenuButton(
        key,
        onHover,
        onFocusChange,
        onOpen,
        onClose,
        style,
        alignmentOffset,
        clipBehavior,
        leadingIcon,
        trailingIcon,
        menuChildren,
        child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return submenuButton?.call(
        key,
        onHover,
        onFocusChange,
        onOpen,
        onClose,
        style,
        alignmentOffset,
        clipBehavior,
        leadingIcon,
        trailingIcon,
        menuChildren,
        child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (submenuButton != null) {
      return submenuButton(
          key,
          onHover,
          onFocusChange,
          onOpen,
          onClose,
          style,
          alignmentOffset,
          clipBehavior,
          leadingIcon,
          trailingIcon,
          menuChildren,
          child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return submenuButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return submenuButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (submenuButton != null) {
      return submenuButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SubmenuButtonToJson(
      this,
    );
  }
}

abstract class SubmenuButton implements Widget {
  const factory SubmenuButton(
      {final Key? key,
      final BoolSelectionCallback? onHover,
      final BoolSelectionCallback? onFocusChange,
      final Callback? onOpen,
      final Callback? onClose,
      final ButtonStyle? style,
      final Offset? alignmentOffset,
      final Clip clipBehavior,
      final Widget? leadingIcon,
      final Widget? trailingIcon,
      required final List<Widget> menuChildren,
      required final Widget child}) = _$SubmenuButton;

  factory SubmenuButton.fromJson(Map<String, dynamic> json) =
      _$SubmenuButton.fromJson;

  @override
  Key? get key;
  BoolSelectionCallback? get onHover;
  BoolSelectionCallback? get onFocusChange;
  Callback? get onOpen;
  Callback? get onClose; // MenuController? controller,
  ButtonStyle? get style; // MenuStyle? menuStyle,
  Offset? get alignmentOffset;
  Clip get clipBehavior; // FocusNode? focusNode,
// MaterialStatesController? statesController,
  Widget? get leadingIcon;
  Widget? get trailingIcon;
  List<Widget> get menuChildren;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$SubmenuButtonCopyWith<_$SubmenuButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$MenuItemButtonCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$MenuItemButtonCopyWith(
          _$MenuItemButton value, $Res Function(_$MenuItemButton) then) =
      __$$MenuItemButtonCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Callback? onPressed,
      BoolSelectionCallback? onHover,
      bool requestFocusOnHover,
      BoolSelectionCallback? onFocusChange,
      ButtonStyle? style,
      Clip clipBehavior,
      Widget? leadingIcon,
      Widget? trailingIcon,
      bool closeOnActivate,
      Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $CallbackCopyWith<$Res>? get onPressed;
  $ButtonStyleCopyWith<$Res>? get style;
  $WidgetCopyWith<$Res>? get leadingIcon;
  $WidgetCopyWith<$Res>? get trailingIcon;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$MenuItemButtonCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$MenuItemButton>
    implements _$$MenuItemButtonCopyWith<$Res> {
  __$$MenuItemButtonCopyWithImpl(
      _$MenuItemButton _value, $Res Function(_$MenuItemButton) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? onPressed = freezed,
    Object? onHover = freezed,
    Object? requestFocusOnHover = null,
    Object? onFocusChange = freezed,
    Object? style = freezed,
    Object? clipBehavior = null,
    Object? leadingIcon = freezed,
    Object? trailingIcon = freezed,
    Object? closeOnActivate = null,
    Object? child = freezed,
  }) {
    return _then(_$MenuItemButton(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      onPressed: freezed == onPressed
          ? _value.onPressed
          : onPressed // ignore: cast_nullable_to_non_nullable
              as Callback?,
      onHover: freezed == onHover
          ? _value.onHover
          : onHover // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback?,
      requestFocusOnHover: null == requestFocusOnHover
          ? _value.requestFocusOnHover
          : requestFocusOnHover // ignore: cast_nullable_to_non_nullable
              as bool,
      onFocusChange: freezed == onFocusChange
          ? _value.onFocusChange
          : onFocusChange // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback?,
      style: freezed == style
          ? _value.style
          : style // ignore: cast_nullable_to_non_nullable
              as ButtonStyle?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      leadingIcon: freezed == leadingIcon
          ? _value.leadingIcon
          : leadingIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      trailingIcon: freezed == trailingIcon
          ? _value.trailingIcon
          : trailingIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      closeOnActivate: null == closeOnActivate
          ? _value.closeOnActivate
          : closeOnActivate // ignore: cast_nullable_to_non_nullable
              as bool,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onPressed {
    if (_value.onPressed == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onPressed!, (value) {
      return _then(_value.copyWith(onPressed: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ButtonStyleCopyWith<$Res>? get style {
    if (_value.style == null) {
      return null;
    }

    return $ButtonStyleCopyWith<$Res>(_value.style!, (value) {
      return _then(_value.copyWith(style: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get leadingIcon {
    if (_value.leadingIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.leadingIcon!, (value) {
      return _then(_value.copyWith(leadingIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get trailingIcon {
    if (_value.trailingIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.trailingIcon!, (value) {
      return _then(_value.copyWith(trailingIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$MenuItemButton implements MenuItemButton {
  const _$MenuItemButton(
      {this.key,
      this.onPressed,
      this.onHover,
      this.requestFocusOnHover = true,
      this.onFocusChange,
      this.style,
      this.clipBehavior = Clip.none,
      this.leadingIcon,
      this.trailingIcon,
      this.closeOnActivate = true,
      required this.child,
      final String? $type})
      : $type = $type ?? 'menuItemButton';

  factory _$MenuItemButton.fromJson(Map<String, dynamic> json) =>
      _$$MenuItemButtonFromJson(json);

  @override
  final Key? key;
  @override
  final Callback? onPressed;
  @override
  final BoolSelectionCallback? onHover;
  @override
  @JsonKey()
  final bool requestFocusOnHover;
  @override
  final BoolSelectionCallback? onFocusChange;
// FocusNode? focusNode,
// MenuSerializableShortcut? shortcut,
  @override
  final ButtonStyle? style;
// MaterialStatesController? statesController,
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget? leadingIcon;
  @override
  final Widget? trailingIcon;
  @override
  @JsonKey()
  final bool closeOnActivate;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.menuItemButton(key: $key, onPressed: $onPressed, onHover: $onHover, requestFocusOnHover: $requestFocusOnHover, onFocusChange: $onFocusChange, style: $style, clipBehavior: $clipBehavior, leadingIcon: $leadingIcon, trailingIcon: $trailingIcon, closeOnActivate: $closeOnActivate, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$MenuItemButton &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.onPressed, onPressed) ||
                other.onPressed == onPressed) &&
            const DeepCollectionEquality().equals(other.onHover, onHover) &&
            (identical(other.requestFocusOnHover, requestFocusOnHover) ||
                other.requestFocusOnHover == requestFocusOnHover) &&
            const DeepCollectionEquality()
                .equals(other.onFocusChange, onFocusChange) &&
            (identical(other.style, style) || other.style == style) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.leadingIcon, leadingIcon) ||
                other.leadingIcon == leadingIcon) &&
            (identical(other.trailingIcon, trailingIcon) ||
                other.trailingIcon == trailingIcon) &&
            (identical(other.closeOnActivate, closeOnActivate) ||
                other.closeOnActivate == closeOnActivate) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      onPressed,
      const DeepCollectionEquality().hash(onHover),
      requestFocusOnHover,
      const DeepCollectionEquality().hash(onFocusChange),
      style,
      clipBehavior,
      leadingIcon,
      trailingIcon,
      closeOnActivate,
      child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$MenuItemButtonCopyWith<_$MenuItemButton> get copyWith =>
      __$$MenuItemButtonCopyWithImpl<_$MenuItemButton>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return menuItemButton(
        key,
        onPressed,
        onHover,
        requestFocusOnHover,
        onFocusChange,
        style,
        clipBehavior,
        leadingIcon,
        trailingIcon,
        closeOnActivate,
        child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return menuItemButton?.call(
        key,
        onPressed,
        onHover,
        requestFocusOnHover,
        onFocusChange,
        style,
        clipBehavior,
        leadingIcon,
        trailingIcon,
        closeOnActivate,
        child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (menuItemButton != null) {
      return menuItemButton(
          key,
          onPressed,
          onHover,
          requestFocusOnHover,
          onFocusChange,
          style,
          clipBehavior,
          leadingIcon,
          trailingIcon,
          closeOnActivate,
          child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return menuItemButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return menuItemButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (menuItemButton != null) {
      return menuItemButton(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$MenuItemButtonToJson(
      this,
    );
  }
}

abstract class MenuItemButton implements Widget {
  const factory MenuItemButton(
      {final Key? key,
      final Callback? onPressed,
      final BoolSelectionCallback? onHover,
      final bool requestFocusOnHover,
      final BoolSelectionCallback? onFocusChange,
      final ButtonStyle? style,
      final Clip clipBehavior,
      final Widget? leadingIcon,
      final Widget? trailingIcon,
      final bool closeOnActivate,
      required final Widget? child}) = _$MenuItemButton;

  factory MenuItemButton.fromJson(Map<String, dynamic> json) =
      _$MenuItemButton.fromJson;

  @override
  Key? get key;
  Callback? get onPressed;
  BoolSelectionCallback? get onHover;
  bool get requestFocusOnHover;
  BoolSelectionCallback? get onFocusChange; // FocusNode? focusNode,
// MenuSerializableShortcut? shortcut,
  ButtonStyle? get style; // MaterialStatesController? statesController,
  Clip get clipBehavior;
  Widget? get leadingIcon;
  Widget? get trailingIcon;
  bool get closeOnActivate;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$MenuItemButtonCopyWith<_$MenuItemButton> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SwitchCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$SwitchCopyWith(_$Switch value, $Res Function(_$Switch) then) =
      __$$SwitchCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      bool value,
      BoolSelectionCallback onChanged,
      Color? activeColor,
      Color? activeTrackColor,
      Color? inactiveThumbColor,
      Color? inactiveTrackColor,
      ImageProvider? activeThumbImage,
      ImageProvider? inactiveThumbImage,
      MaterialStateProperty? thumbColor,
      MaterialStateProperty? trackColor,
      MaterialStateProperty? trackOutlineColor,
      MaterialTapTargetSize? materialTapTargetSize,
      DragStartBehavior dragStartBehavior,
      MouseCursor? mouseCursor,
      Color? focusColor,
      Color? hoverColor,
      MaterialStateProperty? overlayColor,
      double? splashRadius,
      BoolSelectionCallback? onFocusChange,
      bool autofocus});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get activeColor;
  $ColorCopyWith<$Res>? get activeTrackColor;
  $ColorCopyWith<$Res>? get inactiveThumbColor;
  $ColorCopyWith<$Res>? get inactiveTrackColor;
  $ImageProviderCopyWith<$Res>? get activeThumbImage;
  $ImageProviderCopyWith<$Res>? get inactiveThumbImage;
  $MaterialStatePropertyCopyWith<$Res>? get thumbColor;
  $MaterialStatePropertyCopyWith<$Res>? get trackColor;
  $MaterialStatePropertyCopyWith<$Res>? get trackOutlineColor;
  $MouseCursorCopyWith<$Res>? get mouseCursor;
  $ColorCopyWith<$Res>? get focusColor;
  $ColorCopyWith<$Res>? get hoverColor;
  $MaterialStatePropertyCopyWith<$Res>? get overlayColor;
}

/// @nodoc
class __$$SwitchCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Switch>
    implements _$$SwitchCopyWith<$Res> {
  __$$SwitchCopyWithImpl(_$Switch _value, $Res Function(_$Switch) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? value = null,
    Object? onChanged = freezed,
    Object? activeColor = freezed,
    Object? activeTrackColor = freezed,
    Object? inactiveThumbColor = freezed,
    Object? inactiveTrackColor = freezed,
    Object? activeThumbImage = freezed,
    Object? inactiveThumbImage = freezed,
    Object? thumbColor = freezed,
    Object? trackColor = freezed,
    Object? trackOutlineColor = freezed,
    Object? materialTapTargetSize = freezed,
    Object? dragStartBehavior = null,
    Object? mouseCursor = freezed,
    Object? focusColor = freezed,
    Object? hoverColor = freezed,
    Object? overlayColor = freezed,
    Object? splashRadius = freezed,
    Object? onFocusChange = freezed,
    Object? autofocus = null,
  }) {
    return _then(_$Switch(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      value: null == value
          ? _value.value
          : value // ignore: cast_nullable_to_non_nullable
              as bool,
      onChanged: freezed == onChanged
          ? _value.onChanged
          : onChanged // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback,
      activeColor: freezed == activeColor
          ? _value.activeColor
          : activeColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      activeTrackColor: freezed == activeTrackColor
          ? _value.activeTrackColor
          : activeTrackColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      inactiveThumbColor: freezed == inactiveThumbColor
          ? _value.inactiveThumbColor
          : inactiveThumbColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      inactiveTrackColor: freezed == inactiveTrackColor
          ? _value.inactiveTrackColor
          : inactiveTrackColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      activeThumbImage: freezed == activeThumbImage
          ? _value.activeThumbImage
          : activeThumbImage // ignore: cast_nullable_to_non_nullable
              as ImageProvider?,
      inactiveThumbImage: freezed == inactiveThumbImage
          ? _value.inactiveThumbImage
          : inactiveThumbImage // ignore: cast_nullable_to_non_nullable
              as ImageProvider?,
      thumbColor: freezed == thumbColor
          ? _value.thumbColor
          : thumbColor // ignore: cast_nullable_to_non_nullable
              as MaterialStateProperty?,
      trackColor: freezed == trackColor
          ? _value.trackColor
          : trackColor // ignore: cast_nullable_to_non_nullable
              as MaterialStateProperty?,
      trackOutlineColor: freezed == trackOutlineColor
          ? _value.trackOutlineColor
          : trackOutlineColor // ignore: cast_nullable_to_non_nullable
              as MaterialStateProperty?,
      materialTapTargetSize: freezed == materialTapTargetSize
          ? _value.materialTapTargetSize
          : materialTapTargetSize // ignore: cast_nullable_to_non_nullable
              as MaterialTapTargetSize?,
      dragStartBehavior: null == dragStartBehavior
          ? _value.dragStartBehavior
          : dragStartBehavior // ignore: cast_nullable_to_non_nullable
              as DragStartBehavior,
      mouseCursor: freezed == mouseCursor
          ? _value.mouseCursor
          : mouseCursor // ignore: cast_nullable_to_non_nullable
              as MouseCursor?,
      focusColor: freezed == focusColor
          ? _value.focusColor
          : focusColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      hoverColor: freezed == hoverColor
          ? _value.hoverColor
          : hoverColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      overlayColor: freezed == overlayColor
          ? _value.overlayColor
          : overlayColor // ignore: cast_nullable_to_non_nullable
              as MaterialStateProperty?,
      splashRadius: freezed == splashRadius
          ? _value.splashRadius
          : splashRadius // ignore: cast_nullable_to_non_nullable
              as double?,
      onFocusChange: freezed == onFocusChange
          ? _value.onFocusChange
          : onFocusChange // ignore: cast_nullable_to_non_nullable
              as BoolSelectionCallback?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get activeColor {
    if (_value.activeColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.activeColor!, (value) {
      return _then(_value.copyWith(activeColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get activeTrackColor {
    if (_value.activeTrackColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.activeTrackColor!, (value) {
      return _then(_value.copyWith(activeTrackColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get inactiveThumbColor {
    if (_value.inactiveThumbColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.inactiveThumbColor!, (value) {
      return _then(_value.copyWith(inactiveThumbColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get inactiveTrackColor {
    if (_value.inactiveTrackColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.inactiveTrackColor!, (value) {
      return _then(_value.copyWith(inactiveTrackColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ImageProviderCopyWith<$Res>? get activeThumbImage {
    if (_value.activeThumbImage == null) {
      return null;
    }

    return $ImageProviderCopyWith<$Res>(_value.activeThumbImage!, (value) {
      return _then(_value.copyWith(activeThumbImage: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ImageProviderCopyWith<$Res>? get inactiveThumbImage {
    if (_value.inactiveThumbImage == null) {
      return null;
    }

    return $ImageProviderCopyWith<$Res>(_value.inactiveThumbImage!, (value) {
      return _then(_value.copyWith(inactiveThumbImage: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MaterialStatePropertyCopyWith<$Res>? get thumbColor {
    if (_value.thumbColor == null) {
      return null;
    }

    return $MaterialStatePropertyCopyWith<$Res>(_value.thumbColor!, (value) {
      return _then(_value.copyWith(thumbColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MaterialStatePropertyCopyWith<$Res>? get trackColor {
    if (_value.trackColor == null) {
      return null;
    }

    return $MaterialStatePropertyCopyWith<$Res>(_value.trackColor!, (value) {
      return _then(_value.copyWith(trackColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MaterialStatePropertyCopyWith<$Res>? get trackOutlineColor {
    if (_value.trackOutlineColor == null) {
      return null;
    }

    return $MaterialStatePropertyCopyWith<$Res>(_value.trackOutlineColor!,
        (value) {
      return _then(_value.copyWith(trackOutlineColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MouseCursorCopyWith<$Res>? get mouseCursor {
    if (_value.mouseCursor == null) {
      return null;
    }

    return $MouseCursorCopyWith<$Res>(_value.mouseCursor!, (value) {
      return _then(_value.copyWith(mouseCursor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get focusColor {
    if (_value.focusColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.focusColor!, (value) {
      return _then(_value.copyWith(focusColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get hoverColor {
    if (_value.hoverColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.hoverColor!, (value) {
      return _then(_value.copyWith(hoverColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MaterialStatePropertyCopyWith<$Res>? get overlayColor {
    if (_value.overlayColor == null) {
      return null;
    }

    return $MaterialStatePropertyCopyWith<$Res>(_value.overlayColor!, (value) {
      return _then(_value.copyWith(overlayColor: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Switch implements Switch {
  const _$Switch(
      {this.key,
      required this.value,
      required this.onChanged,
      this.activeColor,
      this.activeTrackColor,
      this.inactiveThumbColor,
      this.inactiveTrackColor,
      this.activeThumbImage,
      this.inactiveThumbImage,
      this.thumbColor,
      this.trackColor,
      this.trackOutlineColor,
      this.materialTapTargetSize,
      this.dragStartBehavior = DragStartBehavior.start,
      this.mouseCursor,
      this.focusColor,
      this.hoverColor,
      this.overlayColor,
      this.splashRadius,
      this.onFocusChange,
      this.autofocus = false,
      final String? $type})
      : $type = $type ?? 'materialSwitch';

  factory _$Switch.fromJson(Map<String, dynamic> json) =>
      _$$SwitchFromJson(json);

  @override
  final Key? key;
  @override
  final bool value;
  @override
  final BoolSelectionCallback onChanged;
  @override
  final Color? activeColor;
  @override
  final Color? activeTrackColor;
  @override
  final Color? inactiveThumbColor;
  @override
  final Color? inactiveTrackColor;
  @override
  final ImageProvider? activeThumbImage;
// ImageErrorListener? onActiveThumbImageError,
  @override
  final ImageProvider? inactiveThumbImage;
//ImageErrorListener onInactiveThumbImageError,
  @override
  final MaterialStateProperty? thumbColor;
  @override
  final MaterialStateProperty? trackColor;
  @override
  final MaterialStateProperty? trackOutlineColor;
// MaterialStateProperty? trackOutlineWidth,
// MaterialStateProperty? thumbIcon,
  @override
  final MaterialTapTargetSize? materialTapTargetSize;
  @override
  @JsonKey()
  final DragStartBehavior dragStartBehavior;
  @override
  final MouseCursor? mouseCursor;
  @override
  final Color? focusColor;
  @override
  final Color? hoverColor;
  @override
  final MaterialStateProperty? overlayColor;
  @override
  final double? splashRadius;
//FocusNode? focusNode,
  @override
  final BoolSelectionCallback? onFocusChange;
  @override
  @JsonKey()
  final bool autofocus;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.materialSwitch(key: $key, value: $value, onChanged: $onChanged, activeColor: $activeColor, activeTrackColor: $activeTrackColor, inactiveThumbColor: $inactiveThumbColor, inactiveTrackColor: $inactiveTrackColor, activeThumbImage: $activeThumbImage, inactiveThumbImage: $inactiveThumbImage, thumbColor: $thumbColor, trackColor: $trackColor, trackOutlineColor: $trackOutlineColor, materialTapTargetSize: $materialTapTargetSize, dragStartBehavior: $dragStartBehavior, mouseCursor: $mouseCursor, focusColor: $focusColor, hoverColor: $hoverColor, overlayColor: $overlayColor, splashRadius: $splashRadius, onFocusChange: $onFocusChange, autofocus: $autofocus)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Switch &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.value, value) || other.value == value) &&
            const DeepCollectionEquality().equals(other.onChanged, onChanged) &&
            (identical(other.activeColor, activeColor) ||
                other.activeColor == activeColor) &&
            (identical(other.activeTrackColor, activeTrackColor) ||
                other.activeTrackColor == activeTrackColor) &&
            (identical(other.inactiveThumbColor, inactiveThumbColor) ||
                other.inactiveThumbColor == inactiveThumbColor) &&
            (identical(other.inactiveTrackColor, inactiveTrackColor) ||
                other.inactiveTrackColor == inactiveTrackColor) &&
            (identical(other.activeThumbImage, activeThumbImage) ||
                other.activeThumbImage == activeThumbImage) &&
            (identical(other.inactiveThumbImage, inactiveThumbImage) ||
                other.inactiveThumbImage == inactiveThumbImage) &&
            (identical(other.thumbColor, thumbColor) ||
                other.thumbColor == thumbColor) &&
            (identical(other.trackColor, trackColor) ||
                other.trackColor == trackColor) &&
            (identical(other.trackOutlineColor, trackOutlineColor) ||
                other.trackOutlineColor == trackOutlineColor) &&
            (identical(other.materialTapTargetSize, materialTapTargetSize) ||
                other.materialTapTargetSize == materialTapTargetSize) &&
            (identical(other.dragStartBehavior, dragStartBehavior) ||
                other.dragStartBehavior == dragStartBehavior) &&
            (identical(other.mouseCursor, mouseCursor) ||
                other.mouseCursor == mouseCursor) &&
            (identical(other.focusColor, focusColor) ||
                other.focusColor == focusColor) &&
            (identical(other.hoverColor, hoverColor) ||
                other.hoverColor == hoverColor) &&
            (identical(other.overlayColor, overlayColor) ||
                other.overlayColor == overlayColor) &&
            (identical(other.splashRadius, splashRadius) ||
                other.splashRadius == splashRadius) &&
            const DeepCollectionEquality()
                .equals(other.onFocusChange, onFocusChange) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        value,
        const DeepCollectionEquality().hash(onChanged),
        activeColor,
        activeTrackColor,
        inactiveThumbColor,
        inactiveTrackColor,
        activeThumbImage,
        inactiveThumbImage,
        thumbColor,
        trackColor,
        trackOutlineColor,
        materialTapTargetSize,
        dragStartBehavior,
        mouseCursor,
        focusColor,
        hoverColor,
        overlayColor,
        splashRadius,
        const DeepCollectionEquality().hash(onFocusChange),
        autofocus
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SwitchCopyWith<_$Switch> get copyWith =>
      __$$SwitchCopyWithImpl<_$Switch>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return materialSwitch(
        key,
        value,
        onChanged,
        activeColor,
        activeTrackColor,
        inactiveThumbColor,
        inactiveTrackColor,
        activeThumbImage,
        inactiveThumbImage,
        thumbColor,
        trackColor,
        trackOutlineColor,
        materialTapTargetSize,
        dragStartBehavior,
        mouseCursor,
        focusColor,
        hoverColor,
        overlayColor,
        splashRadius,
        onFocusChange,
        autofocus);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return materialSwitch?.call(
        key,
        value,
        onChanged,
        activeColor,
        activeTrackColor,
        inactiveThumbColor,
        inactiveTrackColor,
        activeThumbImage,
        inactiveThumbImage,
        thumbColor,
        trackColor,
        trackOutlineColor,
        materialTapTargetSize,
        dragStartBehavior,
        mouseCursor,
        focusColor,
        hoverColor,
        overlayColor,
        splashRadius,
        onFocusChange,
        autofocus);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (materialSwitch != null) {
      return materialSwitch(
          key,
          value,
          onChanged,
          activeColor,
          activeTrackColor,
          inactiveThumbColor,
          inactiveTrackColor,
          activeThumbImage,
          inactiveThumbImage,
          thumbColor,
          trackColor,
          trackOutlineColor,
          materialTapTargetSize,
          dragStartBehavior,
          mouseCursor,
          focusColor,
          hoverColor,
          overlayColor,
          splashRadius,
          onFocusChange,
          autofocus);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return materialSwitch(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return materialSwitch?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (materialSwitch != null) {
      return materialSwitch(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SwitchToJson(
      this,
    );
  }
}

abstract class Switch implements Widget {
  const factory Switch(
      {final Key? key,
      required final bool value,
      required final BoolSelectionCallback onChanged,
      final Color? activeColor,
      final Color? activeTrackColor,
      final Color? inactiveThumbColor,
      final Color? inactiveTrackColor,
      final ImageProvider? activeThumbImage,
      final ImageProvider? inactiveThumbImage,
      final MaterialStateProperty? thumbColor,
      final MaterialStateProperty? trackColor,
      final MaterialStateProperty? trackOutlineColor,
      final MaterialTapTargetSize? materialTapTargetSize,
      final DragStartBehavior dragStartBehavior,
      final MouseCursor? mouseCursor,
      final Color? focusColor,
      final Color? hoverColor,
      final MaterialStateProperty? overlayColor,
      final double? splashRadius,
      final BoolSelectionCallback? onFocusChange,
      final bool autofocus}) = _$Switch;

  factory Switch.fromJson(Map<String, dynamic> json) = _$Switch.fromJson;

  @override
  Key? get key;
  bool get value;
  BoolSelectionCallback get onChanged;
  Color? get activeColor;
  Color? get activeTrackColor;
  Color? get inactiveThumbColor;
  Color? get inactiveTrackColor;
  ImageProvider?
      get activeThumbImage; // ImageErrorListener? onActiveThumbImageError,
  ImageProvider?
      get inactiveThumbImage; //ImageErrorListener onInactiveThumbImageError,
  MaterialStateProperty? get thumbColor;
  MaterialStateProperty? get trackColor;
  MaterialStateProperty?
      get trackOutlineColor; // MaterialStateProperty? trackOutlineWidth,
// MaterialStateProperty? thumbIcon,
  MaterialTapTargetSize? get materialTapTargetSize;
  DragStartBehavior get dragStartBehavior;
  MouseCursor? get mouseCursor;
  Color? get focusColor;
  Color? get hoverColor;
  MaterialStateProperty? get overlayColor;
  double? get splashRadius; //FocusNode? focusNode,
  BoolSelectionCallback? get onFocusChange;
  bool get autofocus;
  @override
  @JsonKey(ignore: true)
  _$$SwitchCopyWith<_$Switch> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BottomAppBarCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$BottomAppBarCopyWith(
          _$BottomAppBar value, $Res Function(_$BottomAppBar) then) =
      __$$BottomAppBarCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Color? color,
      double? elevation,
      Clip clipBehavior,
      double notchMargin,
      Widget? child,
      EdgeInsets? padding,
      Color? surfaceTintColor,
      Color? shadowColor,
      double? height});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get color;
  $WidgetCopyWith<$Res>? get child;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $ColorCopyWith<$Res>? get shadowColor;
}

/// @nodoc
class __$$BottomAppBarCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$BottomAppBar>
    implements _$$BottomAppBarCopyWith<$Res> {
  __$$BottomAppBarCopyWithImpl(
      _$BottomAppBar _value, $Res Function(_$BottomAppBar) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? color = freezed,
    Object? elevation = freezed,
    Object? clipBehavior = null,
    Object? notchMargin = null,
    Object? child = freezed,
    Object? padding = freezed,
    Object? surfaceTintColor = freezed,
    Object? shadowColor = freezed,
    Object? height = freezed,
  }) {
    return _then(_$BottomAppBar(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      notchMargin: null == notchMargin
          ? _value.notchMargin
          : notchMargin // ignore: cast_nullable_to_non_nullable
              as double,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$BottomAppBar implements BottomAppBar {
  const _$BottomAppBar(
      {this.key,
      this.color,
      this.elevation,
      this.clipBehavior = Clip.none,
      this.notchMargin = 4.0,
      this.child,
      this.padding,
      this.surfaceTintColor,
      this.shadowColor,
      this.height,
      final String? $type})
      : $type = $type ?? 'bottomAppBar';

  factory _$BottomAppBar.fromJson(Map<String, dynamic> json) =>
      _$$BottomAppBarFromJson(json);

  @override
  final Key? key;
  @override
  final Color? color;
  @override
  final double? elevation;
// NotchedShape? shape,
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  @JsonKey()
  final double notchMargin;
  @override
  final Widget? child;
  @override
  final EdgeInsets? padding;
  @override
  final Color? surfaceTintColor;
  @override
  final Color? shadowColor;
  @override
  final double? height;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.bottomAppBar(key: $key, color: $color, elevation: $elevation, clipBehavior: $clipBehavior, notchMargin: $notchMargin, child: $child, padding: $padding, surfaceTintColor: $surfaceTintColor, shadowColor: $shadowColor, height: $height)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BottomAppBar &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.notchMargin, notchMargin) ||
                other.notchMargin == notchMargin) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.height, height) || other.height == height));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      color,
      elevation,
      clipBehavior,
      notchMargin,
      child,
      padding,
      surfaceTintColor,
      shadowColor,
      height);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BottomAppBarCopyWith<_$BottomAppBar> get copyWith =>
      __$$BottomAppBarCopyWithImpl<_$BottomAppBar>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return bottomAppBar(key, color, elevation, clipBehavior, notchMargin, child,
        this.padding, surfaceTintColor, shadowColor, height);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return bottomAppBar?.call(key, color, elevation, clipBehavior, notchMargin,
        child, this.padding, surfaceTintColor, shadowColor, height);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (bottomAppBar != null) {
      return bottomAppBar(key, color, elevation, clipBehavior, notchMargin,
          child, this.padding, surfaceTintColor, shadowColor, height);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return bottomAppBar(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return bottomAppBar?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (bottomAppBar != null) {
      return bottomAppBar(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BottomAppBarToJson(
      this,
    );
  }
}

abstract class BottomAppBar implements Widget {
  const factory BottomAppBar(
      {final Key? key,
      final Color? color,
      final double? elevation,
      final Clip clipBehavior,
      final double notchMargin,
      final Widget? child,
      final EdgeInsets? padding,
      final Color? surfaceTintColor,
      final Color? shadowColor,
      final double? height}) = _$BottomAppBar;

  factory BottomAppBar.fromJson(Map<String, dynamic> json) =
      _$BottomAppBar.fromJson;

  @override
  Key? get key;
  Color? get color;
  double? get elevation; // NotchedShape? shape,
  Clip get clipBehavior;
  double get notchMargin;
  Widget? get child;
  EdgeInsets? get padding;
  Color? get surfaceTintColor;
  Color? get shadowColor;
  double? get height;
  @override
  @JsonKey(ignore: true)
  _$$BottomAppBarCopyWith<_$BottomAppBar> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NavigationDrawerCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$NavigationDrawerCopyWith(
          _$NavigationDrawer value, $Res Function(_$NavigationDrawer) then) =
      __$$NavigationDrawerCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      List<Widget> children,
      Color? backgroundColor,
      Color? shadowColor,
      Color? surfaceTintColor,
      double? elevation,
      Color? indicatorColor,
      ShapeBorder? indicatorShape,
      IntSelectionCallback? onDestinationSelected,
      int? selectedIndex,
      EdgeInsets? tilePadding});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $ColorCopyWith<$Res>? get indicatorColor;
  $ShapeBorderCopyWith<$Res>? get indicatorShape;
  $EdgeInsetsCopyWith<$Res>? get tilePadding;
}

/// @nodoc
class __$$NavigationDrawerCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$NavigationDrawer>
    implements _$$NavigationDrawerCopyWith<$Res> {
  __$$NavigationDrawerCopyWithImpl(
      _$NavigationDrawer _value, $Res Function(_$NavigationDrawer) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? children = null,
    Object? backgroundColor = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? elevation = freezed,
    Object? indicatorColor = freezed,
    Object? indicatorShape = freezed,
    Object? onDestinationSelected = freezed,
    Object? selectedIndex = freezed,
    Object? tilePadding = freezed,
  }) {
    return _then(_$NavigationDrawer(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      children: null == children
          ? _value._children
          : children // ignore: cast_nullable_to_non_nullable
              as List<Widget>,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      indicatorColor: freezed == indicatorColor
          ? _value.indicatorColor
          : indicatorColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      indicatorShape: freezed == indicatorShape
          ? _value.indicatorShape
          : indicatorShape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      onDestinationSelected: freezed == onDestinationSelected
          ? _value.onDestinationSelected
          : onDestinationSelected // ignore: cast_nullable_to_non_nullable
              as IntSelectionCallback?,
      selectedIndex: freezed == selectedIndex
          ? _value.selectedIndex
          : selectedIndex // ignore: cast_nullable_to_non_nullable
              as int?,
      tilePadding: freezed == tilePadding
          ? _value.tilePadding
          : tilePadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get indicatorColor {
    if (_value.indicatorColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.indicatorColor!, (value) {
      return _then(_value.copyWith(indicatorColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get indicatorShape {
    if (_value.indicatorShape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.indicatorShape!, (value) {
      return _then(_value.copyWith(indicatorShape: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get tilePadding {
    if (_value.tilePadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.tilePadding!, (value) {
      return _then(_value.copyWith(tilePadding: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$NavigationDrawer implements NavigationDrawer {
  const _$NavigationDrawer(
      {this.key,
      required final List<Widget> children,
      this.backgroundColor,
      this.shadowColor,
      this.surfaceTintColor,
      this.elevation,
      this.indicatorColor,
      this.indicatorShape,
      this.onDestinationSelected,
      this.selectedIndex = 0,
      this.tilePadding = const EdgeInsets.symmetric(horizontal: 12.0),
      final String? $type})
      : _children = children,
        $type = $type ?? 'navigationDrawer';

  factory _$NavigationDrawer.fromJson(Map<String, dynamic> json) =>
      _$$NavigationDrawerFromJson(json);

  @override
  final Key? key;
  final List<Widget> _children;
  @override
  List<Widget> get children {
    if (_children is EqualUnmodifiableListView) return _children;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_children);
  }

  @override
  final Color? backgroundColor;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final double? elevation;
  @override
  final Color? indicatorColor;
  @override
  final ShapeBorder? indicatorShape;
  @override
  final IntSelectionCallback? onDestinationSelected;
  @override
  @JsonKey()
  final int? selectedIndex;
  @override
  @JsonKey()
  final EdgeInsets? tilePadding;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.navigationDrawer(key: $key, children: $children, backgroundColor: $backgroundColor, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, elevation: $elevation, indicatorColor: $indicatorColor, indicatorShape: $indicatorShape, onDestinationSelected: $onDestinationSelected, selectedIndex: $selectedIndex, tilePadding: $tilePadding)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NavigationDrawer &&
            (identical(other.key, key) || other.key == key) &&
            const DeepCollectionEquality().equals(other._children, _children) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.indicatorColor, indicatorColor) ||
                other.indicatorColor == indicatorColor) &&
            (identical(other.indicatorShape, indicatorShape) ||
                other.indicatorShape == indicatorShape) &&
            const DeepCollectionEquality()
                .equals(other.onDestinationSelected, onDestinationSelected) &&
            (identical(other.selectedIndex, selectedIndex) ||
                other.selectedIndex == selectedIndex) &&
            (identical(other.tilePadding, tilePadding) ||
                other.tilePadding == tilePadding));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      const DeepCollectionEquality().hash(_children),
      backgroundColor,
      shadowColor,
      surfaceTintColor,
      elevation,
      indicatorColor,
      indicatorShape,
      const DeepCollectionEquality().hash(onDestinationSelected),
      selectedIndex,
      tilePadding);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NavigationDrawerCopyWith<_$NavigationDrawer> get copyWith =>
      __$$NavigationDrawerCopyWithImpl<_$NavigationDrawer>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return navigationDrawer(
        key,
        children,
        backgroundColor,
        shadowColor,
        surfaceTintColor,
        elevation,
        indicatorColor,
        indicatorShape,
        onDestinationSelected,
        selectedIndex,
        tilePadding);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return navigationDrawer?.call(
        key,
        children,
        backgroundColor,
        shadowColor,
        surfaceTintColor,
        elevation,
        indicatorColor,
        indicatorShape,
        onDestinationSelected,
        selectedIndex,
        tilePadding);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationDrawer != null) {
      return navigationDrawer(
          key,
          children,
          backgroundColor,
          shadowColor,
          surfaceTintColor,
          elevation,
          indicatorColor,
          indicatorShape,
          onDestinationSelected,
          selectedIndex,
          tilePadding);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return navigationDrawer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return navigationDrawer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationDrawer != null) {
      return navigationDrawer(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NavigationDrawerToJson(
      this,
    );
  }
}

abstract class NavigationDrawer implements Widget {
  const factory NavigationDrawer(
      {final Key? key,
      required final List<Widget> children,
      final Color? backgroundColor,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final double? elevation,
      final Color? indicatorColor,
      final ShapeBorder? indicatorShape,
      final IntSelectionCallback? onDestinationSelected,
      final int? selectedIndex,
      final EdgeInsets? tilePadding}) = _$NavigationDrawer;

  factory NavigationDrawer.fromJson(Map<String, dynamic> json) =
      _$NavigationDrawer.fromJson;

  @override
  Key? get key;
  List<Widget> get children;
  Color? get backgroundColor;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  double? get elevation;
  Color? get indicatorColor;
  ShapeBorder? get indicatorShape;
  IntSelectionCallback? get onDestinationSelected;
  int? get selectedIndex;
  EdgeInsets? get tilePadding;
  @override
  @JsonKey(ignore: true)
  _$$NavigationDrawerCopyWith<_$NavigationDrawer> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$NavigationDrawerDestinationCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$NavigationDrawerDestinationCopyWith(
          _$NavigationDrawerDestination value,
          $Res Function(_$NavigationDrawerDestination) then) =
      __$$NavigationDrawerDestinationCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Color? backgroundColor,
      Widget icon,
      Widget? selectedIcon,
      Widget label});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $WidgetCopyWith<$Res> get icon;
  $WidgetCopyWith<$Res>? get selectedIcon;
  $WidgetCopyWith<$Res> get label;
}

/// @nodoc
class __$$NavigationDrawerDestinationCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$NavigationDrawerDestination>
    implements _$$NavigationDrawerDestinationCopyWith<$Res> {
  __$$NavigationDrawerDestinationCopyWithImpl(
      _$NavigationDrawerDestination _value,
      $Res Function(_$NavigationDrawerDestination) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? backgroundColor = freezed,
    Object? icon = null,
    Object? selectedIcon = freezed,
    Object? label = null,
  }) {
    return _then(_$NavigationDrawerDestination(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      icon: null == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget,
      selectedIcon: freezed == selectedIcon
          ? _value.selectedIcon
          : selectedIcon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      label: null == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get icon {
    return $WidgetCopyWith<$Res>(_value.icon, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get selectedIcon {
    if (_value.selectedIcon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.selectedIcon!, (value) {
      return _then(_value.copyWith(selectedIcon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get label {
    return $WidgetCopyWith<$Res>(_value.label, (value) {
      return _then(_value.copyWith(label: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$NavigationDrawerDestination implements NavigationDrawerDestination {
  const _$NavigationDrawerDestination(
      {this.key,
      this.backgroundColor,
      required this.icon,
      this.selectedIcon,
      required this.label,
      final String? $type})
      : $type = $type ?? 'navigationDrawerDestination';

  factory _$NavigationDrawerDestination.fromJson(Map<String, dynamic> json) =>
      _$$NavigationDrawerDestinationFromJson(json);

  @override
  final Key? key;
  @override
  final Color? backgroundColor;
  @override
  final Widget icon;
  @override
  final Widget? selectedIcon;
  @override
  final Widget label;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.navigationDrawerDestination(key: $key, backgroundColor: $backgroundColor, icon: $icon, selectedIcon: $selectedIcon, label: $label)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$NavigationDrawerDestination &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.selectedIcon, selectedIcon) ||
                other.selectedIcon == selectedIcon) &&
            (identical(other.label, label) || other.label == label));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, key, backgroundColor, icon, selectedIcon, label);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$NavigationDrawerDestinationCopyWith<_$NavigationDrawerDestination>
      get copyWith => __$$NavigationDrawerDestinationCopyWithImpl<
          _$NavigationDrawerDestination>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return navigationDrawerDestination(
        key, backgroundColor, this.icon, selectedIcon, label);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return navigationDrawerDestination?.call(
        key, backgroundColor, this.icon, selectedIcon, label);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationDrawerDestination != null) {
      return navigationDrawerDestination(
          key, backgroundColor, this.icon, selectedIcon, label);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return navigationDrawerDestination(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return navigationDrawerDestination?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (navigationDrawerDestination != null) {
      return navigationDrawerDestination(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$NavigationDrawerDestinationToJson(
      this,
    );
  }
}

abstract class NavigationDrawerDestination implements Widget {
  const factory NavigationDrawerDestination(
      {final Key? key,
      final Color? backgroundColor,
      required final Widget icon,
      final Widget? selectedIcon,
      required final Widget label}) = _$NavigationDrawerDestination;

  factory NavigationDrawerDestination.fromJson(Map<String, dynamic> json) =
      _$NavigationDrawerDestination.fromJson;

  @override
  Key? get key;
  Color? get backgroundColor;
  Widget get icon;
  Widget? get selectedIcon;
  Widget get label;
  @override
  @JsonKey(ignore: true)
  _$$NavigationDrawerDestinationCopyWith<_$NavigationDrawerDestination>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$TextFieldCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$TextFieldCopyWith(
          _$TextField value, $Res Function(_$TextField) then) =
      __$$TextFieldCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      InputDecoration? decoration,
      TextInputAction? textInputAction,
      TextCapitalization textCapitalization,
      TextStyle? style,
      StrutStyle? strutStyle,
      TextAlign textAlign,
      TextDirection? textDirection,
      bool readOnly,
      bool? showCursor,
      bool autofocus,
      String obscuringCharacter,
      bool obscureText,
      bool autocorrect,
      SmartDashesType? smartDashesType,
      SmartQuotesType? smartQuotesType,
      bool enableSuggestions,
      int? maxLines,
      int? minLines,
      bool expands,
      int? maxLength,
      MaxLengthEnforcement? maxLengthEnforcement,
      Callback? onEditingComplete,
      bool? enabled,
      double cursorWidth,
      double? cursorHeight,
      bool? cursorOpacityAnimates,
      Color? cursorColor,
      Brightness? keyboardAppearance,
      EdgeInsets scrollPadding,
      DragStartBehavior dragStartBehavior,
      bool? enableInteractiveSelection,
      MouseCursor? mouseCursor,
      ScrollPhysics? scrollPhysics,
      Clip clipBehavior,
      String? restorationId,
      bool scribbleEnabled,
      bool enableIMEPersonalizedLearning,
      bool canRequestFocus});

  @override
  $KeyCopyWith<$Res>? get key;
  $InputDecorationCopyWith<$Res>? get decoration;
  $TextStyleCopyWith<$Res>? get style;
  $StrutStyleCopyWith<$Res>? get strutStyle;
  $CallbackCopyWith<$Res>? get onEditingComplete;
  $ColorCopyWith<$Res>? get cursorColor;
  $EdgeInsetsCopyWith<$Res> get scrollPadding;
  $MouseCursorCopyWith<$Res>? get mouseCursor;
  $ScrollPhysicsCopyWith<$Res>? get scrollPhysics;
}

/// @nodoc
class __$$TextFieldCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$TextField>
    implements _$$TextFieldCopyWith<$Res> {
  __$$TextFieldCopyWithImpl(
      _$TextField _value, $Res Function(_$TextField) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? decoration = freezed,
    Object? textInputAction = freezed,
    Object? textCapitalization = null,
    Object? style = freezed,
    Object? strutStyle = freezed,
    Object? textAlign = null,
    Object? textDirection = freezed,
    Object? readOnly = null,
    Object? showCursor = freezed,
    Object? autofocus = null,
    Object? obscuringCharacter = null,
    Object? obscureText = null,
    Object? autocorrect = null,
    Object? smartDashesType = freezed,
    Object? smartQuotesType = freezed,
    Object? enableSuggestions = null,
    Object? maxLines = freezed,
    Object? minLines = freezed,
    Object? expands = null,
    Object? maxLength = freezed,
    Object? maxLengthEnforcement = freezed,
    Object? onEditingComplete = freezed,
    Object? enabled = freezed,
    Object? cursorWidth = null,
    Object? cursorHeight = freezed,
    Object? cursorOpacityAnimates = freezed,
    Object? cursorColor = freezed,
    Object? keyboardAppearance = freezed,
    Object? scrollPadding = null,
    Object? dragStartBehavior = null,
    Object? enableInteractiveSelection = freezed,
    Object? mouseCursor = freezed,
    Object? scrollPhysics = freezed,
    Object? clipBehavior = null,
    Object? restorationId = freezed,
    Object? scribbleEnabled = null,
    Object? enableIMEPersonalizedLearning = null,
    Object? canRequestFocus = null,
  }) {
    return _then(_$TextField(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      decoration: freezed == decoration
          ? _value.decoration
          : decoration // ignore: cast_nullable_to_non_nullable
              as InputDecoration?,
      textInputAction: freezed == textInputAction
          ? _value.textInputAction
          : textInputAction // ignore: cast_nullable_to_non_nullable
              as TextInputAction?,
      textCapitalization: null == textCapitalization
          ? _value.textCapitalization
          : textCapitalization // ignore: cast_nullable_to_non_nullable
              as TextCapitalization,
      style: freezed == style
          ? _value.style
          : style // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      strutStyle: freezed == strutStyle
          ? _value.strutStyle
          : strutStyle // ignore: cast_nullable_to_non_nullable
              as StrutStyle?,
      textAlign: null == textAlign
          ? _value.textAlign
          : textAlign // ignore: cast_nullable_to_non_nullable
              as TextAlign,
      textDirection: freezed == textDirection
          ? _value.textDirection
          : textDirection // ignore: cast_nullable_to_non_nullable
              as TextDirection?,
      readOnly: null == readOnly
          ? _value.readOnly
          : readOnly // ignore: cast_nullable_to_non_nullable
              as bool,
      showCursor: freezed == showCursor
          ? _value.showCursor
          : showCursor // ignore: cast_nullable_to_non_nullable
              as bool?,
      autofocus: null == autofocus
          ? _value.autofocus
          : autofocus // ignore: cast_nullable_to_non_nullable
              as bool,
      obscuringCharacter: null == obscuringCharacter
          ? _value.obscuringCharacter
          : obscuringCharacter // ignore: cast_nullable_to_non_nullable
              as String,
      obscureText: null == obscureText
          ? _value.obscureText
          : obscureText // ignore: cast_nullable_to_non_nullable
              as bool,
      autocorrect: null == autocorrect
          ? _value.autocorrect
          : autocorrect // ignore: cast_nullable_to_non_nullable
              as bool,
      smartDashesType: freezed == smartDashesType
          ? _value.smartDashesType
          : smartDashesType // ignore: cast_nullable_to_non_nullable
              as SmartDashesType?,
      smartQuotesType: freezed == smartQuotesType
          ? _value.smartQuotesType
          : smartQuotesType // ignore: cast_nullable_to_non_nullable
              as SmartQuotesType?,
      enableSuggestions: null == enableSuggestions
          ? _value.enableSuggestions
          : enableSuggestions // ignore: cast_nullable_to_non_nullable
              as bool,
      maxLines: freezed == maxLines
          ? _value.maxLines
          : maxLines // ignore: cast_nullable_to_non_nullable
              as int?,
      minLines: freezed == minLines
          ? _value.minLines
          : minLines // ignore: cast_nullable_to_non_nullable
              as int?,
      expands: null == expands
          ? _value.expands
          : expands // ignore: cast_nullable_to_non_nullable
              as bool,
      maxLength: freezed == maxLength
          ? _value.maxLength
          : maxLength // ignore: cast_nullable_to_non_nullable
              as int?,
      maxLengthEnforcement: freezed == maxLengthEnforcement
          ? _value.maxLengthEnforcement
          : maxLengthEnforcement // ignore: cast_nullable_to_non_nullable
              as MaxLengthEnforcement?,
      onEditingComplete: freezed == onEditingComplete
          ? _value.onEditingComplete
          : onEditingComplete // ignore: cast_nullable_to_non_nullable
              as Callback?,
      enabled: freezed == enabled
          ? _value.enabled
          : enabled // ignore: cast_nullable_to_non_nullable
              as bool?,
      cursorWidth: null == cursorWidth
          ? _value.cursorWidth
          : cursorWidth // ignore: cast_nullable_to_non_nullable
              as double,
      cursorHeight: freezed == cursorHeight
          ? _value.cursorHeight
          : cursorHeight // ignore: cast_nullable_to_non_nullable
              as double?,
      cursorOpacityAnimates: freezed == cursorOpacityAnimates
          ? _value.cursorOpacityAnimates
          : cursorOpacityAnimates // ignore: cast_nullable_to_non_nullable
              as bool?,
      cursorColor: freezed == cursorColor
          ? _value.cursorColor
          : cursorColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      keyboardAppearance: freezed == keyboardAppearance
          ? _value.keyboardAppearance
          : keyboardAppearance // ignore: cast_nullable_to_non_nullable
              as Brightness?,
      scrollPadding: null == scrollPadding
          ? _value.scrollPadding
          : scrollPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets,
      dragStartBehavior: null == dragStartBehavior
          ? _value.dragStartBehavior
          : dragStartBehavior // ignore: cast_nullable_to_non_nullable
              as DragStartBehavior,
      enableInteractiveSelection: freezed == enableInteractiveSelection
          ? _value.enableInteractiveSelection
          : enableInteractiveSelection // ignore: cast_nullable_to_non_nullable
              as bool?,
      mouseCursor: freezed == mouseCursor
          ? _value.mouseCursor
          : mouseCursor // ignore: cast_nullable_to_non_nullable
              as MouseCursor?,
      scrollPhysics: freezed == scrollPhysics
          ? _value.scrollPhysics
          : scrollPhysics // ignore: cast_nullable_to_non_nullable
              as ScrollPhysics?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      restorationId: freezed == restorationId
          ? _value.restorationId
          : restorationId // ignore: cast_nullable_to_non_nullable
              as String?,
      scribbleEnabled: null == scribbleEnabled
          ? _value.scribbleEnabled
          : scribbleEnabled // ignore: cast_nullable_to_non_nullable
              as bool,
      enableIMEPersonalizedLearning: null == enableIMEPersonalizedLearning
          ? _value.enableIMEPersonalizedLearning
          : enableIMEPersonalizedLearning // ignore: cast_nullable_to_non_nullable
              as bool,
      canRequestFocus: null == canRequestFocus
          ? _value.canRequestFocus
          : canRequestFocus // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $InputDecorationCopyWith<$Res>? get decoration {
    if (_value.decoration == null) {
      return null;
    }

    return $InputDecorationCopyWith<$Res>(_value.decoration!, (value) {
      return _then(_value.copyWith(decoration: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get style {
    if (_value.style == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.style!, (value) {
      return _then(_value.copyWith(style: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $StrutStyleCopyWith<$Res>? get strutStyle {
    if (_value.strutStyle == null) {
      return null;
    }

    return $StrutStyleCopyWith<$Res>(_value.strutStyle!, (value) {
      return _then(_value.copyWith(strutStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CallbackCopyWith<$Res>? get onEditingComplete {
    if (_value.onEditingComplete == null) {
      return null;
    }

    return $CallbackCopyWith<$Res>(_value.onEditingComplete!, (value) {
      return _then(_value.copyWith(onEditingComplete: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get cursorColor {
    if (_value.cursorColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.cursorColor!, (value) {
      return _then(_value.copyWith(cursorColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res> get scrollPadding {
    return $EdgeInsetsCopyWith<$Res>(_value.scrollPadding, (value) {
      return _then(_value.copyWith(scrollPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $MouseCursorCopyWith<$Res>? get mouseCursor {
    if (_value.mouseCursor == null) {
      return null;
    }

    return $MouseCursorCopyWith<$Res>(_value.mouseCursor!, (value) {
      return _then(_value.copyWith(mouseCursor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ScrollPhysicsCopyWith<$Res>? get scrollPhysics {
    if (_value.scrollPhysics == null) {
      return null;
    }

    return $ScrollPhysicsCopyWith<$Res>(_value.scrollPhysics!, (value) {
      return _then(_value.copyWith(scrollPhysics: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$TextField implements TextField {
  const _$TextField(
      {this.key,
      this.decoration = const InputDecoration(),
      this.textInputAction,
      this.textCapitalization = TextCapitalization.none,
      this.style,
      this.strutStyle,
      this.textAlign = TextAlign.start,
      this.textDirection,
      this.readOnly = false,
      this.showCursor,
      this.autofocus = false,
      this.obscuringCharacter = '•',
      this.obscureText = false,
      this.autocorrect = true,
      this.smartDashesType,
      this.smartQuotesType,
      this.enableSuggestions = true,
      this.maxLines = 1,
      this.minLines,
      this.expands = false,
      this.maxLength,
      this.maxLengthEnforcement,
      this.onEditingComplete,
      this.enabled,
      this.cursorWidth = 2.0,
      this.cursorHeight,
      this.cursorOpacityAnimates,
      this.cursorColor,
      this.keyboardAppearance,
      this.scrollPadding = const EdgeInsets.all(20.0),
      this.dragStartBehavior = DragStartBehavior.start,
      this.enableInteractiveSelection,
      this.mouseCursor,
      this.scrollPhysics,
      this.clipBehavior = Clip.hardEdge,
      this.restorationId,
      this.scribbleEnabled = true,
      this.enableIMEPersonalizedLearning = true,
      this.canRequestFocus = true,
      final String? $type})
      : $type = $type ?? 'textField';

  factory _$TextField.fromJson(Map<String, dynamic> json) =>
      _$$TextFieldFromJson(json);

  @override
  final Key? key;
//  TextEditingController? controller,
//  FocusNode? focusNode,
// UndoHistoryController? undoController,
  @override
  @JsonKey()
  final InputDecoration? decoration;
// TextInputType? keyboardType,
  @override
  final TextInputAction? textInputAction;
  @override
  @JsonKey()
  final TextCapitalization textCapitalization;
  @override
  final TextStyle? style;
  @override
  final StrutStyle? strutStyle;
  @override
  @JsonKey()
  final TextAlign textAlign;
// TextAlignVertical? textAlignVertical,
  @override
  final TextDirection? textDirection;
  @override
  @JsonKey()
  final bool readOnly;
// ToolbarOptions?  toolbarOptions,
  @override
  final bool? showCursor;
  @override
  @JsonKey()
  final bool autofocus;
  @override
  @JsonKey()
  final String obscuringCharacter;
  @override
  @JsonKey()
  final bool obscureText;
  @override
  @JsonKey()
  final bool autocorrect;
  @override
  final SmartDashesType? smartDashesType;
  @override
  final SmartQuotesType? smartQuotesType;
  @override
  @JsonKey()
  final bool enableSuggestions;
  @override
  @JsonKey()
  final int? maxLines;
  @override
  final int? minLines;
  @override
  @JsonKey()
  final bool expands;
  @override
  final int? maxLength;
  @override
  final MaxLengthEnforcement? maxLengthEnforcement;
// ValueChanged<String>? onChanged,
  @override
  final Callback? onEditingComplete;
//  ValueChanged<String>? onSubmitted,
// AppPrivateCommandCallback? onAppPrivateCommand,
// List<TextInputFormatter>? inputFormatters,
  @override
  final bool? enabled;
  @override
  @JsonKey()
  final double cursorWidth;
  @override
  final double? cursorHeight;
// Radius? cursorRadius,
  @override
  final bool? cursorOpacityAnimates;
  @override
  final Color? cursorColor;
// ui.BoxWidthStyle selectionHeightStyle = ui.BoxHeightStyle.tight,
// ui.BoxWidthStyle selectionWidthStyle = ui.BoxWidthStyle.tight,
  @override
  final Brightness? keyboardAppearance;
  @override
  @JsonKey()
  final EdgeInsets scrollPadding;
  @override
  @JsonKey()
  final DragStartBehavior dragStartBehavior;
  @override
  final bool? enableInteractiveSelection;
// TextSelectionControls? selectionControls,
// GestureTapCallback? onTap,
// TapRegionCallback? onTapOutside,
  @override
  final MouseCursor? mouseCursor;
// InputCounterWidgetBuilder? buildCounter,
// ScrollController? scrollController,
  @override
  final ScrollPhysics? scrollPhysics;
// @Default(<String>[]) Iterable<String>? autofillHints,
// ContentInsertionConfiguration?  contentInsertionConfiguration,
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final String? restorationId;
  @override
  @JsonKey()
  final bool scribbleEnabled;
  @override
  @JsonKey()
  final bool enableIMEPersonalizedLearning;
// @Default(_defaultContextMenuBuilder)
// EditableTextContextMenuBuilder? contextMenuBuilder,
  @override
  @JsonKey()
  final bool canRequestFocus;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.textField(key: $key, decoration: $decoration, textInputAction: $textInputAction, textCapitalization: $textCapitalization, style: $style, strutStyle: $strutStyle, textAlign: $textAlign, textDirection: $textDirection, readOnly: $readOnly, showCursor: $showCursor, autofocus: $autofocus, obscuringCharacter: $obscuringCharacter, obscureText: $obscureText, autocorrect: $autocorrect, smartDashesType: $smartDashesType, smartQuotesType: $smartQuotesType, enableSuggestions: $enableSuggestions, maxLines: $maxLines, minLines: $minLines, expands: $expands, maxLength: $maxLength, maxLengthEnforcement: $maxLengthEnforcement, onEditingComplete: $onEditingComplete, enabled: $enabled, cursorWidth: $cursorWidth, cursorHeight: $cursorHeight, cursorOpacityAnimates: $cursorOpacityAnimates, cursorColor: $cursorColor, keyboardAppearance: $keyboardAppearance, scrollPadding: $scrollPadding, dragStartBehavior: $dragStartBehavior, enableInteractiveSelection: $enableInteractiveSelection, mouseCursor: $mouseCursor, scrollPhysics: $scrollPhysics, clipBehavior: $clipBehavior, restorationId: $restorationId, scribbleEnabled: $scribbleEnabled, enableIMEPersonalizedLearning: $enableIMEPersonalizedLearning, canRequestFocus: $canRequestFocus)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$TextField &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.decoration, decoration) ||
                other.decoration == decoration) &&
            (identical(other.textInputAction, textInputAction) ||
                other.textInputAction == textInputAction) &&
            (identical(other.textCapitalization, textCapitalization) ||
                other.textCapitalization == textCapitalization) &&
            (identical(other.style, style) || other.style == style) &&
            (identical(other.strutStyle, strutStyle) ||
                other.strutStyle == strutStyle) &&
            (identical(other.textAlign, textAlign) ||
                other.textAlign == textAlign) &&
            (identical(other.textDirection, textDirection) ||
                other.textDirection == textDirection) &&
            (identical(other.readOnly, readOnly) ||
                other.readOnly == readOnly) &&
            (identical(other.showCursor, showCursor) ||
                other.showCursor == showCursor) &&
            (identical(other.autofocus, autofocus) ||
                other.autofocus == autofocus) &&
            (identical(other.obscuringCharacter, obscuringCharacter) ||
                other.obscuringCharacter == obscuringCharacter) &&
            (identical(other.obscureText, obscureText) ||
                other.obscureText == obscureText) &&
            (identical(other.autocorrect, autocorrect) ||
                other.autocorrect == autocorrect) &&
            (identical(other.smartDashesType, smartDashesType) ||
                other.smartDashesType == smartDashesType) &&
            (identical(other.smartQuotesType, smartQuotesType) ||
                other.smartQuotesType == smartQuotesType) &&
            (identical(other.enableSuggestions, enableSuggestions) ||
                other.enableSuggestions == enableSuggestions) &&
            (identical(other.maxLines, maxLines) ||
                other.maxLines == maxLines) &&
            (identical(other.minLines, minLines) ||
                other.minLines == minLines) &&
            (identical(other.expands, expands) || other.expands == expands) &&
            (identical(other.maxLength, maxLength) ||
                other.maxLength == maxLength) &&
            (identical(other.maxLengthEnforcement, maxLengthEnforcement) ||
                other.maxLengthEnforcement == maxLengthEnforcement) &&
            (identical(other.onEditingComplete, onEditingComplete) ||
                other.onEditingComplete == onEditingComplete) &&
            (identical(other.enabled, enabled) || other.enabled == enabled) &&
            (identical(other.cursorWidth, cursorWidth) ||
                other.cursorWidth == cursorWidth) &&
            (identical(other.cursorHeight, cursorHeight) ||
                other.cursorHeight == cursorHeight) &&
            (identical(other.cursorOpacityAnimates, cursorOpacityAnimates) ||
                other.cursorOpacityAnimates == cursorOpacityAnimates) &&
            (identical(other.cursorColor, cursorColor) ||
                other.cursorColor == cursorColor) &&
            (identical(other.keyboardAppearance, keyboardAppearance) ||
                other.keyboardAppearance == keyboardAppearance) &&
            (identical(other.scrollPadding, scrollPadding) ||
                other.scrollPadding == scrollPadding) &&
            (identical(other.dragStartBehavior, dragStartBehavior) ||
                other.dragStartBehavior == dragStartBehavior) &&
            (identical(other.enableInteractiveSelection,
                    enableInteractiveSelection) ||
                other.enableInteractiveSelection ==
                    enableInteractiveSelection) &&
            (identical(other.mouseCursor, mouseCursor) ||
                other.mouseCursor == mouseCursor) &&
            (identical(other.scrollPhysics, scrollPhysics) ||
                other.scrollPhysics == scrollPhysics) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.restorationId, restorationId) ||
                other.restorationId == restorationId) &&
            (identical(other.scribbleEnabled, scribbleEnabled) ||
                other.scribbleEnabled == scribbleEnabled) &&
            (identical(other.enableIMEPersonalizedLearning,
                    enableIMEPersonalizedLearning) ||
                other.enableIMEPersonalizedLearning ==
                    enableIMEPersonalizedLearning) &&
            (identical(other.canRequestFocus, canRequestFocus) ||
                other.canRequestFocus == canRequestFocus));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        decoration,
        textInputAction,
        textCapitalization,
        style,
        strutStyle,
        textAlign,
        textDirection,
        readOnly,
        showCursor,
        autofocus,
        obscuringCharacter,
        obscureText,
        autocorrect,
        smartDashesType,
        smartQuotesType,
        enableSuggestions,
        maxLines,
        minLines,
        expands,
        maxLength,
        maxLengthEnforcement,
        onEditingComplete,
        enabled,
        cursorWidth,
        cursorHeight,
        cursorOpacityAnimates,
        cursorColor,
        keyboardAppearance,
        scrollPadding,
        dragStartBehavior,
        enableInteractiveSelection,
        mouseCursor,
        scrollPhysics,
        clipBehavior,
        restorationId,
        scribbleEnabled,
        enableIMEPersonalizedLearning,
        canRequestFocus
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$TextFieldCopyWith<_$TextField> get copyWith =>
      __$$TextFieldCopyWithImpl<_$TextField>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return textField(
        key,
        decoration,
        textInputAction,
        textCapitalization,
        style,
        strutStyle,
        textAlign,
        textDirection,
        readOnly,
        showCursor,
        autofocus,
        obscuringCharacter,
        obscureText,
        autocorrect,
        smartDashesType,
        smartQuotesType,
        enableSuggestions,
        maxLines,
        minLines,
        expands,
        maxLength,
        maxLengthEnforcement,
        onEditingComplete,
        enabled,
        cursorWidth,
        cursorHeight,
        cursorOpacityAnimates,
        cursorColor,
        keyboardAppearance,
        scrollPadding,
        dragStartBehavior,
        enableInteractiveSelection,
        mouseCursor,
        scrollPhysics,
        clipBehavior,
        restorationId,
        scribbleEnabled,
        enableIMEPersonalizedLearning,
        canRequestFocus);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return textField?.call(
        key,
        decoration,
        textInputAction,
        textCapitalization,
        style,
        strutStyle,
        textAlign,
        textDirection,
        readOnly,
        showCursor,
        autofocus,
        obscuringCharacter,
        obscureText,
        autocorrect,
        smartDashesType,
        smartQuotesType,
        enableSuggestions,
        maxLines,
        minLines,
        expands,
        maxLength,
        maxLengthEnforcement,
        onEditingComplete,
        enabled,
        cursorWidth,
        cursorHeight,
        cursorOpacityAnimates,
        cursorColor,
        keyboardAppearance,
        scrollPadding,
        dragStartBehavior,
        enableInteractiveSelection,
        mouseCursor,
        scrollPhysics,
        clipBehavior,
        restorationId,
        scribbleEnabled,
        enableIMEPersonalizedLearning,
        canRequestFocus);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (textField != null) {
      return textField(
          key,
          decoration,
          textInputAction,
          textCapitalization,
          style,
          strutStyle,
          textAlign,
          textDirection,
          readOnly,
          showCursor,
          autofocus,
          obscuringCharacter,
          obscureText,
          autocorrect,
          smartDashesType,
          smartQuotesType,
          enableSuggestions,
          maxLines,
          minLines,
          expands,
          maxLength,
          maxLengthEnforcement,
          onEditingComplete,
          enabled,
          cursorWidth,
          cursorHeight,
          cursorOpacityAnimates,
          cursorColor,
          keyboardAppearance,
          scrollPadding,
          dragStartBehavior,
          enableInteractiveSelection,
          mouseCursor,
          scrollPhysics,
          clipBehavior,
          restorationId,
          scribbleEnabled,
          enableIMEPersonalizedLearning,
          canRequestFocus);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return textField(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return textField?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (textField != null) {
      return textField(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$TextFieldToJson(
      this,
    );
  }
}

abstract class TextField implements Widget {
  const factory TextField(
      {final Key? key,
      final InputDecoration? decoration,
      final TextInputAction? textInputAction,
      final TextCapitalization textCapitalization,
      final TextStyle? style,
      final StrutStyle? strutStyle,
      final TextAlign textAlign,
      final TextDirection? textDirection,
      final bool readOnly,
      final bool? showCursor,
      final bool autofocus,
      final String obscuringCharacter,
      final bool obscureText,
      final bool autocorrect,
      final SmartDashesType? smartDashesType,
      final SmartQuotesType? smartQuotesType,
      final bool enableSuggestions,
      final int? maxLines,
      final int? minLines,
      final bool expands,
      final int? maxLength,
      final MaxLengthEnforcement? maxLengthEnforcement,
      final Callback? onEditingComplete,
      final bool? enabled,
      final double cursorWidth,
      final double? cursorHeight,
      final bool? cursorOpacityAnimates,
      final Color? cursorColor,
      final Brightness? keyboardAppearance,
      final EdgeInsets scrollPadding,
      final DragStartBehavior dragStartBehavior,
      final bool? enableInteractiveSelection,
      final MouseCursor? mouseCursor,
      final ScrollPhysics? scrollPhysics,
      final Clip clipBehavior,
      final String? restorationId,
      final bool scribbleEnabled,
      final bool enableIMEPersonalizedLearning,
      final bool canRequestFocus}) = _$TextField;

  factory TextField.fromJson(Map<String, dynamic> json) = _$TextField.fromJson;

  @override
  Key? get key; //  TextEditingController? controller,
//  FocusNode? focusNode,
// UndoHistoryController? undoController,
  InputDecoration? get decoration; // TextInputType? keyboardType,
  TextInputAction? get textInputAction;
  TextCapitalization get textCapitalization;
  TextStyle? get style;
  StrutStyle? get strutStyle;
  TextAlign get textAlign; // TextAlignVertical? textAlignVertical,
  TextDirection? get textDirection;
  bool get readOnly; // ToolbarOptions?  toolbarOptions,
  bool? get showCursor;
  bool get autofocus;
  String get obscuringCharacter;
  bool get obscureText;
  bool get autocorrect;
  SmartDashesType? get smartDashesType;
  SmartQuotesType? get smartQuotesType;
  bool get enableSuggestions;
  int? get maxLines;
  int? get minLines;
  bool get expands;
  int? get maxLength;
  MaxLengthEnforcement?
      get maxLengthEnforcement; // ValueChanged<String>? onChanged,
  Callback? get onEditingComplete; //  ValueChanged<String>? onSubmitted,
// AppPrivateCommandCallback? onAppPrivateCommand,
// List<TextInputFormatter>? inputFormatters,
  bool? get enabled;
  double get cursorWidth;
  double? get cursorHeight; // Radius? cursorRadius,
  bool? get cursorOpacityAnimates;
  Color?
      get cursorColor; // ui.BoxWidthStyle selectionHeightStyle = ui.BoxHeightStyle.tight,
// ui.BoxWidthStyle selectionWidthStyle = ui.BoxWidthStyle.tight,
  Brightness? get keyboardAppearance;
  EdgeInsets get scrollPadding;
  DragStartBehavior get dragStartBehavior;
  bool?
      get enableInteractiveSelection; // TextSelectionControls? selectionControls,
// GestureTapCallback? onTap,
// TapRegionCallback? onTapOutside,
  MouseCursor? get mouseCursor; // InputCounterWidgetBuilder? buildCounter,
// ScrollController? scrollController,
  ScrollPhysics?
      get scrollPhysics; // @Default(<String>[]) Iterable<String>? autofillHints,
// ContentInsertionConfiguration?  contentInsertionConfiguration,
  Clip get clipBehavior;
  String? get restorationId;
  bool get scribbleEnabled;
  bool
      get enableIMEPersonalizedLearning; // @Default(_defaultContextMenuBuilder)
// EditableTextContextMenuBuilder? contextMenuBuilder,
  bool get canRequestFocus;
  @override
  @JsonKey(ignore: true)
  _$$TextFieldCopyWith<_$TextField> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BadgeCountCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$BadgeCountCopyWith(
          _$BadgeCount value, $Res Function(_$BadgeCount) then) =
      __$$BadgeCountCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Color? backgroundColor,
      Color? textColor,
      double? smallSize,
      double? largeSize,
      TextStyle? textStyle,
      EdgeInsets? padding,
      Offset? offset,
      int count,
      bool isLabelVisible,
      Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get textColor;
  $TextStyleCopyWith<$Res>? get textStyle;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $OffsetCopyWith<$Res>? get offset;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$BadgeCountCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$BadgeCount>
    implements _$$BadgeCountCopyWith<$Res> {
  __$$BadgeCountCopyWithImpl(
      _$BadgeCount _value, $Res Function(_$BadgeCount) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? backgroundColor = freezed,
    Object? textColor = freezed,
    Object? smallSize = freezed,
    Object? largeSize = freezed,
    Object? textStyle = freezed,
    Object? padding = freezed,
    Object? offset = freezed,
    Object? count = null,
    Object? isLabelVisible = null,
    Object? child = freezed,
  }) {
    return _then(_$BadgeCount(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      textColor: freezed == textColor
          ? _value.textColor
          : textColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      smallSize: freezed == smallSize
          ? _value.smallSize
          : smallSize // ignore: cast_nullable_to_non_nullable
              as double?,
      largeSize: freezed == largeSize
          ? _value.largeSize
          : largeSize // ignore: cast_nullable_to_non_nullable
              as double?,
      textStyle: freezed == textStyle
          ? _value.textStyle
          : textStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      offset: freezed == offset
          ? _value.offset
          : offset // ignore: cast_nullable_to_non_nullable
              as Offset?,
      count: null == count
          ? _value.count
          : count // ignore: cast_nullable_to_non_nullable
              as int,
      isLabelVisible: null == isLabelVisible
          ? _value.isLabelVisible
          : isLabelVisible // ignore: cast_nullable_to_non_nullable
              as bool,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get textColor {
    if (_value.textColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.textColor!, (value) {
      return _then(_value.copyWith(textColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get textStyle {
    if (_value.textStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.textStyle!, (value) {
      return _then(_value.copyWith(textStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $OffsetCopyWith<$Res>? get offset {
    if (_value.offset == null) {
      return null;
    }

    return $OffsetCopyWith<$Res>(_value.offset!, (value) {
      return _then(_value.copyWith(offset: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$BadgeCount implements BadgeCount {
  const _$BadgeCount(
      {this.key,
      this.backgroundColor,
      this.textColor,
      this.smallSize,
      this.largeSize,
      this.textStyle,
      this.padding,
      this.offset,
      required this.count,
      this.isLabelVisible = true,
      this.child,
      final String? $type})
      : $type = $type ?? 'badgeCount';

  factory _$BadgeCount.fromJson(Map<String, dynamic> json) =>
      _$$BadgeCountFromJson(json);

  @override
  final Key? key;
  @override
  final Color? backgroundColor;
  @override
  final Color? textColor;
  @override
  final double? smallSize;
  @override
  final double? largeSize;
  @override
  final TextStyle? textStyle;
  @override
  final EdgeInsets? padding;
// AlignmentGeometry? alignment,
  @override
  final Offset? offset;
  @override
  final int count;
  @override
  @JsonKey()
  final bool isLabelVisible;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.badgeCount(key: $key, backgroundColor: $backgroundColor, textColor: $textColor, smallSize: $smallSize, largeSize: $largeSize, textStyle: $textStyle, padding: $padding, offset: $offset, count: $count, isLabelVisible: $isLabelVisible, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BadgeCount &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.textColor, textColor) ||
                other.textColor == textColor) &&
            (identical(other.smallSize, smallSize) ||
                other.smallSize == smallSize) &&
            (identical(other.largeSize, largeSize) ||
                other.largeSize == largeSize) &&
            (identical(other.textStyle, textStyle) ||
                other.textStyle == textStyle) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.offset, offset) || other.offset == offset) &&
            (identical(other.count, count) || other.count == count) &&
            (identical(other.isLabelVisible, isLabelVisible) ||
                other.isLabelVisible == isLabelVisible) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      backgroundColor,
      textColor,
      smallSize,
      largeSize,
      textStyle,
      padding,
      offset,
      count,
      isLabelVisible,
      child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BadgeCountCopyWith<_$BadgeCount> get copyWith =>
      __$$BadgeCountCopyWithImpl<_$BadgeCount>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return badgeCount(key, backgroundColor, textColor, smallSize, largeSize,
        textStyle, this.padding, offset, count, isLabelVisible, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return badgeCount?.call(
        key,
        backgroundColor,
        textColor,
        smallSize,
        largeSize,
        textStyle,
        this.padding,
        offset,
        count,
        isLabelVisible,
        child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (badgeCount != null) {
      return badgeCount(key, backgroundColor, textColor, smallSize, largeSize,
          textStyle, this.padding, offset, count, isLabelVisible, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return badgeCount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return badgeCount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (badgeCount != null) {
      return badgeCount(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BadgeCountToJson(
      this,
    );
  }
}

abstract class BadgeCount implements Widget {
  const factory BadgeCount(
      {final Key? key,
      final Color? backgroundColor,
      final Color? textColor,
      final double? smallSize,
      final double? largeSize,
      final TextStyle? textStyle,
      final EdgeInsets? padding,
      final Offset? offset,
      required final int count,
      final bool isLabelVisible,
      final Widget? child}) = _$BadgeCount;

  factory BadgeCount.fromJson(Map<String, dynamic> json) =
      _$BadgeCount.fromJson;

  @override
  Key? get key;
  Color? get backgroundColor;
  Color? get textColor;
  double? get smallSize;
  double? get largeSize;
  TextStyle? get textStyle;
  EdgeInsets? get padding; // AlignmentGeometry? alignment,
  Offset? get offset;
  int get count;
  bool get isLabelVisible;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$BadgeCountCopyWith<_$BadgeCount> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$BadgeCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$BadgeCopyWith(_$Badge value, $Res Function(_$Badge) then) =
      __$$BadgeCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Color? backgroundColor,
      Color? textColor,
      double? smallSize,
      double? largeSize,
      TextStyle? textStyle,
      EdgeInsets? padding,
      Offset? offset,
      Widget? label,
      bool isLabelVisible,
      Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get textColor;
  $TextStyleCopyWith<$Res>? get textStyle;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $OffsetCopyWith<$Res>? get offset;
  $WidgetCopyWith<$Res>? get label;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$BadgeCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Badge>
    implements _$$BadgeCopyWith<$Res> {
  __$$BadgeCopyWithImpl(_$Badge _value, $Res Function(_$Badge) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? backgroundColor = freezed,
    Object? textColor = freezed,
    Object? smallSize = freezed,
    Object? largeSize = freezed,
    Object? textStyle = freezed,
    Object? padding = freezed,
    Object? offset = freezed,
    Object? label = freezed,
    Object? isLabelVisible = null,
    Object? child = freezed,
  }) {
    return _then(_$Badge(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      textColor: freezed == textColor
          ? _value.textColor
          : textColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      smallSize: freezed == smallSize
          ? _value.smallSize
          : smallSize // ignore: cast_nullable_to_non_nullable
              as double?,
      largeSize: freezed == largeSize
          ? _value.largeSize
          : largeSize // ignore: cast_nullable_to_non_nullable
              as double?,
      textStyle: freezed == textStyle
          ? _value.textStyle
          : textStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      offset: freezed == offset
          ? _value.offset
          : offset // ignore: cast_nullable_to_non_nullable
              as Offset?,
      label: freezed == label
          ? _value.label
          : label // ignore: cast_nullable_to_non_nullable
              as Widget?,
      isLabelVisible: null == isLabelVisible
          ? _value.isLabelVisible
          : isLabelVisible // ignore: cast_nullable_to_non_nullable
              as bool,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get textColor {
    if (_value.textColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.textColor!, (value) {
      return _then(_value.copyWith(textColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get textStyle {
    if (_value.textStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.textStyle!, (value) {
      return _then(_value.copyWith(textStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $OffsetCopyWith<$Res>? get offset {
    if (_value.offset == null) {
      return null;
    }

    return $OffsetCopyWith<$Res>(_value.offset!, (value) {
      return _then(_value.copyWith(offset: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get label {
    if (_value.label == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.label!, (value) {
      return _then(_value.copyWith(label: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Badge implements Badge {
  const _$Badge(
      {this.key,
      this.backgroundColor,
      this.textColor,
      this.smallSize,
      this.largeSize,
      this.textStyle,
      this.padding,
      this.offset,
      this.label,
      this.isLabelVisible = true,
      this.child,
      final String? $type})
      : $type = $type ?? 'badge';

  factory _$Badge.fromJson(Map<String, dynamic> json) => _$$BadgeFromJson(json);

  @override
  final Key? key;
  @override
  final Color? backgroundColor;
  @override
  final Color? textColor;
  @override
  final double? smallSize;
  @override
  final double? largeSize;
  @override
  final TextStyle? textStyle;
  @override
  final EdgeInsets? padding;
// AlignmentGeometry? alignment,
  @override
  final Offset? offset;
  @override
  final Widget? label;
  @override
  @JsonKey()
  final bool isLabelVisible;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.badge(key: $key, backgroundColor: $backgroundColor, textColor: $textColor, smallSize: $smallSize, largeSize: $largeSize, textStyle: $textStyle, padding: $padding, offset: $offset, label: $label, isLabelVisible: $isLabelVisible, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Badge &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.textColor, textColor) ||
                other.textColor == textColor) &&
            (identical(other.smallSize, smallSize) ||
                other.smallSize == smallSize) &&
            (identical(other.largeSize, largeSize) ||
                other.largeSize == largeSize) &&
            (identical(other.textStyle, textStyle) ||
                other.textStyle == textStyle) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.offset, offset) || other.offset == offset) &&
            (identical(other.label, label) || other.label == label) &&
            (identical(other.isLabelVisible, isLabelVisible) ||
                other.isLabelVisible == isLabelVisible) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      backgroundColor,
      textColor,
      smallSize,
      largeSize,
      textStyle,
      padding,
      offset,
      label,
      isLabelVisible,
      child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$BadgeCopyWith<_$Badge> get copyWith =>
      __$$BadgeCopyWithImpl<_$Badge>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return badge(key, backgroundColor, textColor, smallSize, largeSize,
        textStyle, this.padding, offset, label, isLabelVisible, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return badge?.call(key, backgroundColor, textColor, smallSize, largeSize,
        textStyle, this.padding, offset, label, isLabelVisible, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (badge != null) {
      return badge(key, backgroundColor, textColor, smallSize, largeSize,
          textStyle, this.padding, offset, label, isLabelVisible, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return badge(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return badge?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (badge != null) {
      return badge(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$BadgeToJson(
      this,
    );
  }
}

abstract class Badge implements Widget {
  const factory Badge(
      {final Key? key,
      final Color? backgroundColor,
      final Color? textColor,
      final double? smallSize,
      final double? largeSize,
      final TextStyle? textStyle,
      final EdgeInsets? padding,
      final Offset? offset,
      final Widget? label,
      final bool isLabelVisible,
      final Widget? child}) = _$Badge;

  factory Badge.fromJson(Map<String, dynamic> json) = _$Badge.fromJson;

  @override
  Key? get key;
  Color? get backgroundColor;
  Color? get textColor;
  double? get smallSize;
  double? get largeSize;
  TextStyle? get textStyle;
  EdgeInsets? get padding; // AlignmentGeometry? alignment,
  Offset? get offset;
  Widget? get label;
  bool get isLabelVisible;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$BadgeCopyWith<_$Badge> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AlertDialogCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$AlertDialogCopyWith(
          _$AlertDialog value, $Res Function(_$AlertDialog) then) =
      __$$AlertDialogCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget? icon,
      EdgeInsets? iconPadding,
      Color? iconColor,
      Widget? title,
      EdgeInsets? titlePadding,
      TextStyle? titleTextStyle,
      Widget? content,
      EdgeInsets? contentPadding,
      TextStyle? contentTextStyle,
      List<Widget>? actions,
      EdgeInsets? actionsPadding,
      MainAxisAlignment? actionsAlignment,
      OverflowBarAlignment? actionsOverflowAlignment,
      VerticalDirection? actionsOverflowDirection,
      double? actionsOverflowButtonSpacing,
      EdgeInsets? buttonPadding,
      Color? backgroundColor,
      double? elevation,
      Color? shadowColor,
      Color? surfaceTintColor,
      String? semanticLabel,
      EdgeInsets insetPadding,
      Clip clipBehavior,
      ShapeBorder? shape,
      bool scrollable});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get icon;
  $EdgeInsetsCopyWith<$Res>? get iconPadding;
  $ColorCopyWith<$Res>? get iconColor;
  $WidgetCopyWith<$Res>? get title;
  $EdgeInsetsCopyWith<$Res>? get titlePadding;
  $TextStyleCopyWith<$Res>? get titleTextStyle;
  $WidgetCopyWith<$Res>? get content;
  $EdgeInsetsCopyWith<$Res>? get contentPadding;
  $TextStyleCopyWith<$Res>? get contentTextStyle;
  $EdgeInsetsCopyWith<$Res>? get actionsPadding;
  $EdgeInsetsCopyWith<$Res>? get buttonPadding;
  $ColorCopyWith<$Res>? get backgroundColor;
  $ColorCopyWith<$Res>? get shadowColor;
  $ColorCopyWith<$Res>? get surfaceTintColor;
  $EdgeInsetsCopyWith<$Res> get insetPadding;
  $ShapeBorderCopyWith<$Res>? get shape;
}

/// @nodoc
class __$$AlertDialogCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$AlertDialog>
    implements _$$AlertDialogCopyWith<$Res> {
  __$$AlertDialogCopyWithImpl(
      _$AlertDialog _value, $Res Function(_$AlertDialog) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? icon = freezed,
    Object? iconPadding = freezed,
    Object? iconColor = freezed,
    Object? title = freezed,
    Object? titlePadding = freezed,
    Object? titleTextStyle = freezed,
    Object? content = freezed,
    Object? contentPadding = freezed,
    Object? contentTextStyle = freezed,
    Object? actions = freezed,
    Object? actionsPadding = freezed,
    Object? actionsAlignment = freezed,
    Object? actionsOverflowAlignment = freezed,
    Object? actionsOverflowDirection = freezed,
    Object? actionsOverflowButtonSpacing = freezed,
    Object? buttonPadding = freezed,
    Object? backgroundColor = freezed,
    Object? elevation = freezed,
    Object? shadowColor = freezed,
    Object? surfaceTintColor = freezed,
    Object? semanticLabel = freezed,
    Object? insetPadding = null,
    Object? clipBehavior = null,
    Object? shape = freezed,
    Object? scrollable = null,
  }) {
    return _then(_$AlertDialog(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      icon: freezed == icon
          ? _value.icon
          : icon // ignore: cast_nullable_to_non_nullable
              as Widget?,
      iconPadding: freezed == iconPadding
          ? _value.iconPadding
          : iconPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      iconColor: freezed == iconColor
          ? _value.iconColor
          : iconColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      title: freezed == title
          ? _value.title
          : title // ignore: cast_nullable_to_non_nullable
              as Widget?,
      titlePadding: freezed == titlePadding
          ? _value.titlePadding
          : titlePadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      titleTextStyle: freezed == titleTextStyle
          ? _value.titleTextStyle
          : titleTextStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      content: freezed == content
          ? _value.content
          : content // ignore: cast_nullable_to_non_nullable
              as Widget?,
      contentPadding: freezed == contentPadding
          ? _value.contentPadding
          : contentPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      contentTextStyle: freezed == contentTextStyle
          ? _value.contentTextStyle
          : contentTextStyle // ignore: cast_nullable_to_non_nullable
              as TextStyle?,
      actions: freezed == actions
          ? _value._actions
          : actions // ignore: cast_nullable_to_non_nullable
              as List<Widget>?,
      actionsPadding: freezed == actionsPadding
          ? _value.actionsPadding
          : actionsPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      actionsAlignment: freezed == actionsAlignment
          ? _value.actionsAlignment
          : actionsAlignment // ignore: cast_nullable_to_non_nullable
              as MainAxisAlignment?,
      actionsOverflowAlignment: freezed == actionsOverflowAlignment
          ? _value.actionsOverflowAlignment
          : actionsOverflowAlignment // ignore: cast_nullable_to_non_nullable
              as OverflowBarAlignment?,
      actionsOverflowDirection: freezed == actionsOverflowDirection
          ? _value.actionsOverflowDirection
          : actionsOverflowDirection // ignore: cast_nullable_to_non_nullable
              as VerticalDirection?,
      actionsOverflowButtonSpacing: freezed == actionsOverflowButtonSpacing
          ? _value.actionsOverflowButtonSpacing
          : actionsOverflowButtonSpacing // ignore: cast_nullable_to_non_nullable
              as double?,
      buttonPadding: freezed == buttonPadding
          ? _value.buttonPadding
          : buttonPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      backgroundColor: freezed == backgroundColor
          ? _value.backgroundColor
          : backgroundColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      elevation: freezed == elevation
          ? _value.elevation
          : elevation // ignore: cast_nullable_to_non_nullable
              as double?,
      shadowColor: freezed == shadowColor
          ? _value.shadowColor
          : shadowColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      surfaceTintColor: freezed == surfaceTintColor
          ? _value.surfaceTintColor
          : surfaceTintColor // ignore: cast_nullable_to_non_nullable
              as Color?,
      semanticLabel: freezed == semanticLabel
          ? _value.semanticLabel
          : semanticLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      insetPadding: null == insetPadding
          ? _value.insetPadding
          : insetPadding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      shape: freezed == shape
          ? _value.shape
          : shape // ignore: cast_nullable_to_non_nullable
              as ShapeBorder?,
      scrollable: null == scrollable
          ? _value.scrollable
          : scrollable // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get icon {
    if (_value.icon == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.icon!, (value) {
      return _then(_value.copyWith(icon: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get iconPadding {
    if (_value.iconPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.iconPadding!, (value) {
      return _then(_value.copyWith(iconPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get iconColor {
    if (_value.iconColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.iconColor!, (value) {
      return _then(_value.copyWith(iconColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get title {
    if (_value.title == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.title!, (value) {
      return _then(_value.copyWith(title: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get titlePadding {
    if (_value.titlePadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.titlePadding!, (value) {
      return _then(_value.copyWith(titlePadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get titleTextStyle {
    if (_value.titleTextStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.titleTextStyle!, (value) {
      return _then(_value.copyWith(titleTextStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get content {
    if (_value.content == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.content!, (value) {
      return _then(_value.copyWith(content: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get contentPadding {
    if (_value.contentPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.contentPadding!, (value) {
      return _then(_value.copyWith(contentPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $TextStyleCopyWith<$Res>? get contentTextStyle {
    if (_value.contentTextStyle == null) {
      return null;
    }

    return $TextStyleCopyWith<$Res>(_value.contentTextStyle!, (value) {
      return _then(_value.copyWith(contentTextStyle: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get actionsPadding {
    if (_value.actionsPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.actionsPadding!, (value) {
      return _then(_value.copyWith(actionsPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get buttonPadding {
    if (_value.buttonPadding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.buttonPadding!, (value) {
      return _then(_value.copyWith(buttonPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get backgroundColor {
    if (_value.backgroundColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.backgroundColor!, (value) {
      return _then(_value.copyWith(backgroundColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get shadowColor {
    if (_value.shadowColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.shadowColor!, (value) {
      return _then(_value.copyWith(shadowColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get surfaceTintColor {
    if (_value.surfaceTintColor == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.surfaceTintColor!, (value) {
      return _then(_value.copyWith(surfaceTintColor: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res> get insetPadding {
    return $EdgeInsetsCopyWith<$Res>(_value.insetPadding, (value) {
      return _then(_value.copyWith(insetPadding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ShapeBorderCopyWith<$Res>? get shape {
    if (_value.shape == null) {
      return null;
    }

    return $ShapeBorderCopyWith<$Res>(_value.shape!, (value) {
      return _then(_value.copyWith(shape: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$AlertDialog implements AlertDialog {
  const _$AlertDialog(
      {this.key,
      this.icon,
      this.iconPadding,
      this.iconColor,
      this.title,
      this.titlePadding,
      this.titleTextStyle,
      this.content,
      this.contentPadding,
      this.contentTextStyle,
      final List<Widget>? actions,
      this.actionsPadding,
      this.actionsAlignment,
      this.actionsOverflowAlignment,
      this.actionsOverflowDirection,
      this.actionsOverflowButtonSpacing,
      this.buttonPadding,
      this.backgroundColor,
      this.elevation,
      this.shadowColor,
      this.surfaceTintColor,
      this.semanticLabel,
      this.insetPadding =
          const EdgeInsets.symmetric(horizontal: 40.0, vertical: 24.0),
      this.clipBehavior = Clip.none,
      this.shape,
      this.scrollable = false,
      final String? $type})
      : _actions = actions,
        $type = $type ?? 'alertDialog';

  factory _$AlertDialog.fromJson(Map<String, dynamic> json) =>
      _$$AlertDialogFromJson(json);

  @override
  final Key? key;
  @override
  final Widget? icon;
  @override
  final EdgeInsets? iconPadding;
  @override
  final Color? iconColor;
  @override
  final Widget? title;
  @override
  final EdgeInsets? titlePadding;
  @override
  final TextStyle? titleTextStyle;
  @override
  final Widget? content;
  @override
  final EdgeInsets? contentPadding;
  @override
  final TextStyle? contentTextStyle;
  final List<Widget>? _actions;
  @override
  List<Widget>? get actions {
    final value = _actions;
    if (value == null) return null;
    if (_actions is EqualUnmodifiableListView) return _actions;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  final EdgeInsets? actionsPadding;
  @override
  final MainAxisAlignment? actionsAlignment;
  @override
  final OverflowBarAlignment? actionsOverflowAlignment;
  @override
  final VerticalDirection? actionsOverflowDirection;
  @override
  final double? actionsOverflowButtonSpacing;
  @override
  final EdgeInsets? buttonPadding;
  @override
  final Color? backgroundColor;
  @override
  final double? elevation;
  @override
  final Color? shadowColor;
  @override
  final Color? surfaceTintColor;
  @override
  final String? semanticLabel;
  @override
  @JsonKey()
  final EdgeInsets insetPadding;
//_defaultInsetPadding
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final ShapeBorder? shape;
// AlignmentGeometry? alignment,
  @override
  @JsonKey()
  final bool scrollable;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.alertDialog(key: $key, icon: $icon, iconPadding: $iconPadding, iconColor: $iconColor, title: $title, titlePadding: $titlePadding, titleTextStyle: $titleTextStyle, content: $content, contentPadding: $contentPadding, contentTextStyle: $contentTextStyle, actions: $actions, actionsPadding: $actionsPadding, actionsAlignment: $actionsAlignment, actionsOverflowAlignment: $actionsOverflowAlignment, actionsOverflowDirection: $actionsOverflowDirection, actionsOverflowButtonSpacing: $actionsOverflowButtonSpacing, buttonPadding: $buttonPadding, backgroundColor: $backgroundColor, elevation: $elevation, shadowColor: $shadowColor, surfaceTintColor: $surfaceTintColor, semanticLabel: $semanticLabel, insetPadding: $insetPadding, clipBehavior: $clipBehavior, shape: $shape, scrollable: $scrollable)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$AlertDialog &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.icon, icon) || other.icon == icon) &&
            (identical(other.iconPadding, iconPadding) ||
                other.iconPadding == iconPadding) &&
            (identical(other.iconColor, iconColor) ||
                other.iconColor == iconColor) &&
            (identical(other.title, title) || other.title == title) &&
            (identical(other.titlePadding, titlePadding) ||
                other.titlePadding == titlePadding) &&
            (identical(other.titleTextStyle, titleTextStyle) ||
                other.titleTextStyle == titleTextStyle) &&
            (identical(other.content, content) || other.content == content) &&
            (identical(other.contentPadding, contentPadding) ||
                other.contentPadding == contentPadding) &&
            (identical(other.contentTextStyle, contentTextStyle) ||
                other.contentTextStyle == contentTextStyle) &&
            const DeepCollectionEquality().equals(other._actions, _actions) &&
            (identical(other.actionsPadding, actionsPadding) ||
                other.actionsPadding == actionsPadding) &&
            (identical(other.actionsAlignment, actionsAlignment) ||
                other.actionsAlignment == actionsAlignment) &&
            (identical(
                    other.actionsOverflowAlignment, actionsOverflowAlignment) ||
                other.actionsOverflowAlignment == actionsOverflowAlignment) &&
            (identical(
                    other.actionsOverflowDirection, actionsOverflowDirection) ||
                other.actionsOverflowDirection == actionsOverflowDirection) &&
            (identical(other.actionsOverflowButtonSpacing,
                    actionsOverflowButtonSpacing) ||
                other.actionsOverflowButtonSpacing ==
                    actionsOverflowButtonSpacing) &&
            (identical(other.buttonPadding, buttonPadding) ||
                other.buttonPadding == buttonPadding) &&
            (identical(other.backgroundColor, backgroundColor) ||
                other.backgroundColor == backgroundColor) &&
            (identical(other.elevation, elevation) ||
                other.elevation == elevation) &&
            (identical(other.shadowColor, shadowColor) ||
                other.shadowColor == shadowColor) &&
            (identical(other.surfaceTintColor, surfaceTintColor) ||
                other.surfaceTintColor == surfaceTintColor) &&
            (identical(other.semanticLabel, semanticLabel) ||
                other.semanticLabel == semanticLabel) &&
            (identical(other.insetPadding, insetPadding) ||
                other.insetPadding == insetPadding) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.shape, shape) || other.shape == shape) &&
            (identical(other.scrollable, scrollable) ||
                other.scrollable == scrollable));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        icon,
        iconPadding,
        iconColor,
        title,
        titlePadding,
        titleTextStyle,
        content,
        contentPadding,
        contentTextStyle,
        const DeepCollectionEquality().hash(_actions),
        actionsPadding,
        actionsAlignment,
        actionsOverflowAlignment,
        actionsOverflowDirection,
        actionsOverflowButtonSpacing,
        buttonPadding,
        backgroundColor,
        elevation,
        shadowColor,
        surfaceTintColor,
        semanticLabel,
        insetPadding,
        clipBehavior,
        shape,
        scrollable
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AlertDialogCopyWith<_$AlertDialog> get copyWith =>
      __$$AlertDialogCopyWithImpl<_$AlertDialog>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return alertDialog(
        key,
        this.icon,
        iconPadding,
        iconColor,
        title,
        titlePadding,
        titleTextStyle,
        content,
        contentPadding,
        contentTextStyle,
        actions,
        actionsPadding,
        actionsAlignment,
        actionsOverflowAlignment,
        actionsOverflowDirection,
        actionsOverflowButtonSpacing,
        buttonPadding,
        backgroundColor,
        elevation,
        shadowColor,
        surfaceTintColor,
        semanticLabel,
        insetPadding,
        clipBehavior,
        shape,
        scrollable);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return alertDialog?.call(
        key,
        this.icon,
        iconPadding,
        iconColor,
        title,
        titlePadding,
        titleTextStyle,
        content,
        contentPadding,
        contentTextStyle,
        actions,
        actionsPadding,
        actionsAlignment,
        actionsOverflowAlignment,
        actionsOverflowDirection,
        actionsOverflowButtonSpacing,
        buttonPadding,
        backgroundColor,
        elevation,
        shadowColor,
        surfaceTintColor,
        semanticLabel,
        insetPadding,
        clipBehavior,
        shape,
        scrollable);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (alertDialog != null) {
      return alertDialog(
          key,
          this.icon,
          iconPadding,
          iconColor,
          title,
          titlePadding,
          titleTextStyle,
          content,
          contentPadding,
          contentTextStyle,
          actions,
          actionsPadding,
          actionsAlignment,
          actionsOverflowAlignment,
          actionsOverflowDirection,
          actionsOverflowButtonSpacing,
          buttonPadding,
          backgroundColor,
          elevation,
          shadowColor,
          surfaceTintColor,
          semanticLabel,
          insetPadding,
          clipBehavior,
          shape,
          scrollable);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return alertDialog(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return alertDialog?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (alertDialog != null) {
      return alertDialog(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AlertDialogToJson(
      this,
    );
  }
}

abstract class AlertDialog implements Widget {
  const factory AlertDialog(
      {final Key? key,
      final Widget? icon,
      final EdgeInsets? iconPadding,
      final Color? iconColor,
      final Widget? title,
      final EdgeInsets? titlePadding,
      final TextStyle? titleTextStyle,
      final Widget? content,
      final EdgeInsets? contentPadding,
      final TextStyle? contentTextStyle,
      final List<Widget>? actions,
      final EdgeInsets? actionsPadding,
      final MainAxisAlignment? actionsAlignment,
      final OverflowBarAlignment? actionsOverflowAlignment,
      final VerticalDirection? actionsOverflowDirection,
      final double? actionsOverflowButtonSpacing,
      final EdgeInsets? buttonPadding,
      final Color? backgroundColor,
      final double? elevation,
      final Color? shadowColor,
      final Color? surfaceTintColor,
      final String? semanticLabel,
      final EdgeInsets insetPadding,
      final Clip clipBehavior,
      final ShapeBorder? shape,
      final bool scrollable}) = _$AlertDialog;

  factory AlertDialog.fromJson(Map<String, dynamic> json) =
      _$AlertDialog.fromJson;

  @override
  Key? get key;
  Widget? get icon;
  EdgeInsets? get iconPadding;
  Color? get iconColor;
  Widget? get title;
  EdgeInsets? get titlePadding;
  TextStyle? get titleTextStyle;
  Widget? get content;
  EdgeInsets? get contentPadding;
  TextStyle? get contentTextStyle;
  List<Widget>? get actions;
  EdgeInsets? get actionsPadding;
  MainAxisAlignment? get actionsAlignment;
  OverflowBarAlignment? get actionsOverflowAlignment;
  VerticalDirection? get actionsOverflowDirection;
  double? get actionsOverflowButtonSpacing;
  EdgeInsets? get buttonPadding;
  Color? get backgroundColor;
  double? get elevation;
  Color? get shadowColor;
  Color? get surfaceTintColor;
  String? get semanticLabel;
  EdgeInsets get insetPadding; //_defaultInsetPadding
  Clip get clipBehavior;
  ShapeBorder? get shape; // AlignmentGeometry? alignment,
  bool get scrollable;
  @override
  @JsonKey(ignore: true)
  _$$AlertDialogCopyWith<_$AlertDialog> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ImageCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$ImageCopyWith(_$Image value, $Res Function(_$Image) then) =
      __$$ImageCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      ImageProvider image,
      String? semanticLabel,
      bool excludeFromSemantics,
      double? width,
      double? height,
      Color? color,
      BlendMode? colorBlendMode,
      BoxFit? fit,
      Alignment alignment,
      ImageRepeat repeat,
      Rect? centerSlice,
      bool matchTextDirection,
      bool gaplessPlayback,
      bool isAntiAlias,
      FilterQuality filterQuality});

  @override
  $KeyCopyWith<$Res>? get key;
  $ImageProviderCopyWith<$Res> get image;
  $ColorCopyWith<$Res>? get color;
  $AlignmentCopyWith<$Res> get alignment;
  $RectCopyWith<$Res>? get centerSlice;
}

/// @nodoc
class __$$ImageCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Image>
    implements _$$ImageCopyWith<$Res> {
  __$$ImageCopyWithImpl(_$Image _value, $Res Function(_$Image) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? image = null,
    Object? semanticLabel = freezed,
    Object? excludeFromSemantics = null,
    Object? width = freezed,
    Object? height = freezed,
    Object? color = freezed,
    Object? colorBlendMode = freezed,
    Object? fit = freezed,
    Object? alignment = null,
    Object? repeat = null,
    Object? centerSlice = freezed,
    Object? matchTextDirection = null,
    Object? gaplessPlayback = null,
    Object? isAntiAlias = null,
    Object? filterQuality = null,
  }) {
    return _then(_$Image(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      image: null == image
          ? _value.image
          : image // ignore: cast_nullable_to_non_nullable
              as ImageProvider,
      semanticLabel: freezed == semanticLabel
          ? _value.semanticLabel
          : semanticLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      excludeFromSemantics: null == excludeFromSemantics
          ? _value.excludeFromSemantics
          : excludeFromSemantics // ignore: cast_nullable_to_non_nullable
              as bool,
      width: freezed == width
          ? _value.width
          : width // ignore: cast_nullable_to_non_nullable
              as double?,
      height: freezed == height
          ? _value.height
          : height // ignore: cast_nullable_to_non_nullable
              as double?,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      colorBlendMode: freezed == colorBlendMode
          ? _value.colorBlendMode
          : colorBlendMode // ignore: cast_nullable_to_non_nullable
              as BlendMode?,
      fit: freezed == fit
          ? _value.fit
          : fit // ignore: cast_nullable_to_non_nullable
              as BoxFit?,
      alignment: null == alignment
          ? _value.alignment
          : alignment // ignore: cast_nullable_to_non_nullable
              as Alignment,
      repeat: null == repeat
          ? _value.repeat
          : repeat // ignore: cast_nullable_to_non_nullable
              as ImageRepeat,
      centerSlice: freezed == centerSlice
          ? _value.centerSlice
          : centerSlice // ignore: cast_nullable_to_non_nullable
              as Rect?,
      matchTextDirection: null == matchTextDirection
          ? _value.matchTextDirection
          : matchTextDirection // ignore: cast_nullable_to_non_nullable
              as bool,
      gaplessPlayback: null == gaplessPlayback
          ? _value.gaplessPlayback
          : gaplessPlayback // ignore: cast_nullable_to_non_nullable
              as bool,
      isAntiAlias: null == isAntiAlias
          ? _value.isAntiAlias
          : isAntiAlias // ignore: cast_nullable_to_non_nullable
              as bool,
      filterQuality: null == filterQuality
          ? _value.filterQuality
          : filterQuality // ignore: cast_nullable_to_non_nullable
              as FilterQuality,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $ImageProviderCopyWith<$Res> get image {
    return $ImageProviderCopyWith<$Res>(_value.image, (value) {
      return _then(_value.copyWith(image: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res> get alignment {
    return $AlignmentCopyWith<$Res>(_value.alignment, (value) {
      return _then(_value.copyWith(alignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RectCopyWith<$Res>? get centerSlice {
    if (_value.centerSlice == null) {
      return null;
    }

    return $RectCopyWith<$Res>(_value.centerSlice!, (value) {
      return _then(_value.copyWith(centerSlice: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Image implements Image {
  const _$Image(
      {this.key,
      required this.image,
      this.semanticLabel,
      this.excludeFromSemantics = false,
      this.width,
      this.height,
      this.color,
      this.colorBlendMode,
      this.fit,
      this.alignment = Alignment.center,
      this.repeat = ImageRepeat.noRepeat,
      this.centerSlice,
      this.matchTextDirection = false,
      this.gaplessPlayback = false,
      this.isAntiAlias = false,
      this.filterQuality = FilterQuality.low,
      final String? $type})
      : $type = $type ?? 'image';

  factory _$Image.fromJson(Map<String, dynamic> json) => _$$ImageFromJson(json);

  @override
  final Key? key;
  @override
  final ImageProvider image;
  @override
  final String? semanticLabel;
  @override
  @JsonKey()
  final bool excludeFromSemantics;
  @override
  final double? width;
  @override
  final double? height;
  @override
  final Color? color;
  @override
  final BlendMode? colorBlendMode;
  @override
  final BoxFit? fit;
  @override
  @JsonKey()
  final Alignment alignment;
  @override
  @JsonKey()
  final ImageRepeat repeat;
  @override
  final Rect? centerSlice;
  @override
  @JsonKey()
  final bool matchTextDirection;
  @override
  @JsonKey()
  final bool gaplessPlayback;
  @override
  @JsonKey()
  final bool isAntiAlias;
  @override
  @JsonKey()
  final FilterQuality filterQuality;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.image(key: $key, image: $image, semanticLabel: $semanticLabel, excludeFromSemantics: $excludeFromSemantics, width: $width, height: $height, color: $color, colorBlendMode: $colorBlendMode, fit: $fit, alignment: $alignment, repeat: $repeat, centerSlice: $centerSlice, matchTextDirection: $matchTextDirection, gaplessPlayback: $gaplessPlayback, isAntiAlias: $isAntiAlias, filterQuality: $filterQuality)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Image &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.image, image) || other.image == image) &&
            (identical(other.semanticLabel, semanticLabel) ||
                other.semanticLabel == semanticLabel) &&
            (identical(other.excludeFromSemantics, excludeFromSemantics) ||
                other.excludeFromSemantics == excludeFromSemantics) &&
            (identical(other.width, width) || other.width == width) &&
            (identical(other.height, height) || other.height == height) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.colorBlendMode, colorBlendMode) ||
                other.colorBlendMode == colorBlendMode) &&
            (identical(other.fit, fit) || other.fit == fit) &&
            (identical(other.alignment, alignment) ||
                other.alignment == alignment) &&
            (identical(other.repeat, repeat) || other.repeat == repeat) &&
            (identical(other.centerSlice, centerSlice) ||
                other.centerSlice == centerSlice) &&
            (identical(other.matchTextDirection, matchTextDirection) ||
                other.matchTextDirection == matchTextDirection) &&
            (identical(other.gaplessPlayback, gaplessPlayback) ||
                other.gaplessPlayback == gaplessPlayback) &&
            (identical(other.isAntiAlias, isAntiAlias) ||
                other.isAntiAlias == isAntiAlias) &&
            (identical(other.filterQuality, filterQuality) ||
                other.filterQuality == filterQuality));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      image,
      semanticLabel,
      excludeFromSemantics,
      width,
      height,
      color,
      colorBlendMode,
      fit,
      alignment,
      repeat,
      centerSlice,
      matchTextDirection,
      gaplessPlayback,
      isAntiAlias,
      filterQuality);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ImageCopyWith<_$Image> get copyWith =>
      __$$ImageCopyWithImpl<_$Image>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return image(
        key,
        this.image,
        semanticLabel,
        excludeFromSemantics,
        width,
        height,
        color,
        colorBlendMode,
        fit,
        alignment,
        repeat,
        centerSlice,
        matchTextDirection,
        gaplessPlayback,
        isAntiAlias,
        filterQuality);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return image?.call(
        key,
        this.image,
        semanticLabel,
        excludeFromSemantics,
        width,
        height,
        color,
        colorBlendMode,
        fit,
        alignment,
        repeat,
        centerSlice,
        matchTextDirection,
        gaplessPlayback,
        isAntiAlias,
        filterQuality);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (image != null) {
      return image(
          key,
          this.image,
          semanticLabel,
          excludeFromSemantics,
          width,
          height,
          color,
          colorBlendMode,
          fit,
          alignment,
          repeat,
          centerSlice,
          matchTextDirection,
          gaplessPlayback,
          isAntiAlias,
          filterQuality);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return image(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return image?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (image != null) {
      return image(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ImageToJson(
      this,
    );
  }
}

abstract class Image implements Widget {
  const factory Image(
      {final Key? key,
      required final ImageProvider image,
      final String? semanticLabel,
      final bool excludeFromSemantics,
      final double? width,
      final double? height,
      final Color? color,
      final BlendMode? colorBlendMode,
      final BoxFit? fit,
      final Alignment alignment,
      final ImageRepeat repeat,
      final Rect? centerSlice,
      final bool matchTextDirection,
      final bool gaplessPlayback,
      final bool isAntiAlias,
      final FilterQuality filterQuality}) = _$Image;

  factory Image.fromJson(Map<String, dynamic> json) = _$Image.fromJson;

  @override
  Key? get key;
  ImageProvider get image;
  String? get semanticLabel;
  bool get excludeFromSemantics;
  double? get width;
  double? get height;
  Color? get color;
  BlendMode? get colorBlendMode;
  BoxFit? get fit;
  Alignment get alignment;
  ImageRepeat get repeat;
  Rect? get centerSlice;
  bool get matchTextDirection;
  bool get gaplessPlayback;
  bool get isAntiAlias;
  FilterQuality get filterQuality;
  @override
  @JsonKey(ignore: true)
  _$$ImageCopyWith<_$Image> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SafeAreaCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$SafeAreaCopyWith(
          _$SafeArea value, $Res Function(_$SafeArea) then) =
      __$$SafeAreaCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      bool left,
      bool top,
      bool right,
      bool bottom,
      EdgeInsets minimum,
      bool maintainBottomViewPadding,
      Widget child});

  @override
  $KeyCopyWith<$Res>? get key;
  $EdgeInsetsCopyWith<$Res> get minimum;
  $WidgetCopyWith<$Res> get child;
}

/// @nodoc
class __$$SafeAreaCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$SafeArea>
    implements _$$SafeAreaCopyWith<$Res> {
  __$$SafeAreaCopyWithImpl(_$SafeArea _value, $Res Function(_$SafeArea) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? left = null,
    Object? top = null,
    Object? right = null,
    Object? bottom = null,
    Object? minimum = null,
    Object? maintainBottomViewPadding = null,
    Object? child = null,
  }) {
    return _then(_$SafeArea(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      left: null == left
          ? _value.left
          : left // ignore: cast_nullable_to_non_nullable
              as bool,
      top: null == top
          ? _value.top
          : top // ignore: cast_nullable_to_non_nullable
              as bool,
      right: null == right
          ? _value.right
          : right // ignore: cast_nullable_to_non_nullable
              as bool,
      bottom: null == bottom
          ? _value.bottom
          : bottom // ignore: cast_nullable_to_non_nullable
              as bool,
      minimum: null == minimum
          ? _value.minimum
          : minimum // ignore: cast_nullable_to_non_nullable
              as EdgeInsets,
      maintainBottomViewPadding: null == maintainBottomViewPadding
          ? _value.maintainBottomViewPadding
          : maintainBottomViewPadding // ignore: cast_nullable_to_non_nullable
              as bool,
      child: null == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res> get minimum {
    return $EdgeInsetsCopyWith<$Res>(_value.minimum, (value) {
      return _then(_value.copyWith(minimum: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res> get child {
    return $WidgetCopyWith<$Res>(_value.child, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$SafeArea implements SafeArea {
  const _$SafeArea(
      {this.key,
      this.left = true,
      this.top = true,
      this.right = true,
      this.bottom = true,
      this.minimum = EdgeInsets.zero,
      this.maintainBottomViewPadding = false,
      required this.child,
      final String? $type})
      : $type = $type ?? 'safeArea';

  factory _$SafeArea.fromJson(Map<String, dynamic> json) =>
      _$$SafeAreaFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final bool left;
  @override
  @JsonKey()
  final bool top;
  @override
  @JsonKey()
  final bool right;
  @override
  @JsonKey()
  final bool bottom;
  @override
  @JsonKey()
  final EdgeInsets minimum;
  @override
  @JsonKey()
  final bool maintainBottomViewPadding;
  @override
  final Widget child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.safeArea(key: $key, left: $left, top: $top, right: $right, bottom: $bottom, minimum: $minimum, maintainBottomViewPadding: $maintainBottomViewPadding, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SafeArea &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.left, left) || other.left == left) &&
            (identical(other.top, top) || other.top == top) &&
            (identical(other.right, right) || other.right == right) &&
            (identical(other.bottom, bottom) || other.bottom == bottom) &&
            (identical(other.minimum, minimum) || other.minimum == minimum) &&
            (identical(other.maintainBottomViewPadding,
                    maintainBottomViewPadding) ||
                other.maintainBottomViewPadding == maintainBottomViewPadding) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, key, left, top, right, bottom,
      minimum, maintainBottomViewPadding, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SafeAreaCopyWith<_$SafeArea> get copyWith =>
      __$$SafeAreaCopyWithImpl<_$SafeArea>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return safeArea(key, left, top, right, bottom, minimum,
        maintainBottomViewPadding, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return safeArea?.call(key, left, top, right, bottom, minimum,
        maintainBottomViewPadding, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (safeArea != null) {
      return safeArea(key, left, top, right, bottom, minimum,
          maintainBottomViewPadding, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return safeArea(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return safeArea?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (safeArea != null) {
      return safeArea(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SafeAreaToJson(
      this,
    );
  }
}

abstract class SafeArea implements Widget {
  const factory SafeArea(
      {final Key? key,
      final bool left,
      final bool top,
      final bool right,
      final bool bottom,
      final EdgeInsets minimum,
      final bool maintainBottomViewPadding,
      required final Widget child}) = _$SafeArea;

  factory SafeArea.fromJson(Map<String, dynamic> json) = _$SafeArea.fromJson;

  @override
  Key? get key;
  bool get left;
  bool get top;
  bool get right;
  bool get bottom;
  EdgeInsets get minimum;
  bool get maintainBottomViewPadding;
  Widget get child;
  @override
  @JsonKey(ignore: true)
  _$$SafeAreaCopyWith<_$SafeArea> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$SingleChildScrollViewCopyWith<$Res>
    implements $WidgetCopyWith<$Res> {
  factory _$$SingleChildScrollViewCopyWith(_$SingleChildScrollView value,
          $Res Function(_$SingleChildScrollView) then) =
      __$$SingleChildScrollViewCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Axis scrollDirection,
      bool reverse,
      EdgeInsets? padding,
      bool? primary,
      ScrollPhysics? physics,
      Widget? child,
      Clip clipBehavior,
      String? restorationId,
      ScrollViewKeyboardDismissBehavior keyboardDismissBehavior});

  @override
  $KeyCopyWith<$Res>? get key;
  $EdgeInsetsCopyWith<$Res>? get padding;
  $ScrollPhysicsCopyWith<$Res>? get physics;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$SingleChildScrollViewCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$SingleChildScrollView>
    implements _$$SingleChildScrollViewCopyWith<$Res> {
  __$$SingleChildScrollViewCopyWithImpl(_$SingleChildScrollView _value,
      $Res Function(_$SingleChildScrollView) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? scrollDirection = null,
    Object? reverse = null,
    Object? padding = freezed,
    Object? primary = freezed,
    Object? physics = freezed,
    Object? child = freezed,
    Object? clipBehavior = null,
    Object? restorationId = freezed,
    Object? keyboardDismissBehavior = null,
  }) {
    return _then(_$SingleChildScrollView(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      scrollDirection: null == scrollDirection
          ? _value.scrollDirection
          : scrollDirection // ignore: cast_nullable_to_non_nullable
              as Axis,
      reverse: null == reverse
          ? _value.reverse
          : reverse // ignore: cast_nullable_to_non_nullable
              as bool,
      padding: freezed == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets?,
      primary: freezed == primary
          ? _value.primary
          : primary // ignore: cast_nullable_to_non_nullable
              as bool?,
      physics: freezed == physics
          ? _value.physics
          : physics // ignore: cast_nullable_to_non_nullable
              as ScrollPhysics?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      restorationId: freezed == restorationId
          ? _value.restorationId
          : restorationId // ignore: cast_nullable_to_non_nullable
              as String?,
      keyboardDismissBehavior: null == keyboardDismissBehavior
          ? _value.keyboardDismissBehavior
          : keyboardDismissBehavior // ignore: cast_nullable_to_non_nullable
              as ScrollViewKeyboardDismissBehavior,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res>? get padding {
    if (_value.padding == null) {
      return null;
    }

    return $EdgeInsetsCopyWith<$Res>(_value.padding!, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ScrollPhysicsCopyWith<$Res>? get physics {
    if (_value.physics == null) {
      return null;
    }

    return $ScrollPhysicsCopyWith<$Res>(_value.physics!, (value) {
      return _then(_value.copyWith(physics: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$SingleChildScrollView implements SingleChildScrollView {
  const _$SingleChildScrollView(
      {this.key,
      this.scrollDirection = Axis.vertical,
      this.reverse = false,
      this.padding,
      this.primary,
      this.physics,
      this.child,
      this.clipBehavior = Clip.hardEdge,
      this.restorationId,
      this.keyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual,
      final String? $type})
      : $type = $type ?? 'singleChildScrollView';

  factory _$SingleChildScrollView.fromJson(Map<String, dynamic> json) =>
      _$$SingleChildScrollViewFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final Axis scrollDirection;
  @override
  @JsonKey()
  final bool reverse;
  @override
  final EdgeInsets? padding;
  @override
  final bool? primary;
  @override
  final ScrollPhysics? physics;
  @override
  final Widget? child;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final String? restorationId;
  @override
  @JsonKey()
  final ScrollViewKeyboardDismissBehavior keyboardDismissBehavior;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.singleChildScrollView(key: $key, scrollDirection: $scrollDirection, reverse: $reverse, padding: $padding, primary: $primary, physics: $physics, child: $child, clipBehavior: $clipBehavior, restorationId: $restorationId, keyboardDismissBehavior: $keyboardDismissBehavior)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$SingleChildScrollView &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.scrollDirection, scrollDirection) ||
                other.scrollDirection == scrollDirection) &&
            (identical(other.reverse, reverse) || other.reverse == reverse) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.primary, primary) || other.primary == primary) &&
            (identical(other.physics, physics) || other.physics == physics) &&
            (identical(other.child, child) || other.child == child) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.restorationId, restorationId) ||
                other.restorationId == restorationId) &&
            (identical(
                    other.keyboardDismissBehavior, keyboardDismissBehavior) ||
                other.keyboardDismissBehavior == keyboardDismissBehavior));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      key,
      scrollDirection,
      reverse,
      padding,
      primary,
      physics,
      child,
      clipBehavior,
      restorationId,
      keyboardDismissBehavior);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$SingleChildScrollViewCopyWith<_$SingleChildScrollView> get copyWith =>
      __$$SingleChildScrollViewCopyWithImpl<_$SingleChildScrollView>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return singleChildScrollView(
        key,
        scrollDirection,
        reverse,
        this.padding,
        primary,
        physics,
        child,
        clipBehavior,
        restorationId,
        keyboardDismissBehavior);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return singleChildScrollView?.call(
        key,
        scrollDirection,
        reverse,
        this.padding,
        primary,
        physics,
        child,
        clipBehavior,
        restorationId,
        keyboardDismissBehavior);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (singleChildScrollView != null) {
      return singleChildScrollView(
          key,
          scrollDirection,
          reverse,
          this.padding,
          primary,
          physics,
          child,
          clipBehavior,
          restorationId,
          keyboardDismissBehavior);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return singleChildScrollView(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return singleChildScrollView?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (singleChildScrollView != null) {
      return singleChildScrollView(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$SingleChildScrollViewToJson(
      this,
    );
  }
}

abstract class SingleChildScrollView implements Widget {
  const factory SingleChildScrollView(
          {final Key? key,
          final Axis scrollDirection,
          final bool reverse,
          final EdgeInsets? padding,
          final bool? primary,
          final ScrollPhysics? physics,
          final Widget? child,
          final Clip clipBehavior,
          final String? restorationId,
          final ScrollViewKeyboardDismissBehavior keyboardDismissBehavior}) =
      _$SingleChildScrollView;

  factory SingleChildScrollView.fromJson(Map<String, dynamic> json) =
      _$SingleChildScrollView.fromJson;

  @override
  Key? get key;
  Axis get scrollDirection;
  bool get reverse;
  EdgeInsets? get padding;
  bool? get primary;
  ScrollPhysics? get physics;
  Widget? get child;
  Clip get clipBehavior;
  String? get restorationId;
  ScrollViewKeyboardDismissBehavior get keyboardDismissBehavior;
  @override
  @JsonKey(ignore: true)
  _$$SingleChildScrollViewCopyWith<_$SingleChildScrollView> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$AlignCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$AlignCopyWith(_$Align value, $Res Function(_$Align) then) =
      __$$AlignCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Alignment alignment,
      double? widthFactor,
      double? heightFactor,
      Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $AlignmentCopyWith<$Res> get alignment;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$AlignCopyWithImpl<$Res> extends _$WidgetCopyWithImpl<$Res, _$Align>
    implements _$$AlignCopyWith<$Res> {
  __$$AlignCopyWithImpl(_$Align _value, $Res Function(_$Align) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? alignment = null,
    Object? widthFactor = freezed,
    Object? heightFactor = freezed,
    Object? child = freezed,
  }) {
    return _then(_$Align(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      alignment: null == alignment
          ? _value.alignment
          : alignment // ignore: cast_nullable_to_non_nullable
              as Alignment,
      widthFactor: freezed == widthFactor
          ? _value.widthFactor
          : widthFactor // ignore: cast_nullable_to_non_nullable
              as double?,
      heightFactor: freezed == heightFactor
          ? _value.heightFactor
          : heightFactor // ignore: cast_nullable_to_non_nullable
              as double?,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $AlignmentCopyWith<$Res> get alignment {
    return $AlignmentCopyWith<$Res>(_value.alignment, (value) {
      return _then(_value.copyWith(alignment: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Align implements Align {
  const _$Align(
      {this.key,
      this.alignment = Alignment.center,
      this.widthFactor,
      this.heightFactor,
      this.child,
      final String? $type})
      : $type = $type ?? 'align';

  factory _$Align.fromJson(Map<String, dynamic> json) => _$$AlignFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final Alignment alignment;
  @override
  final double? widthFactor;
  @override
  final double? heightFactor;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.align(key: $key, alignment: $alignment, widthFactor: $widthFactor, heightFactor: $heightFactor, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Align &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.alignment, alignment) ||
                other.alignment == alignment) &&
            (identical(other.widthFactor, widthFactor) ||
                other.widthFactor == widthFactor) &&
            (identical(other.heightFactor, heightFactor) ||
                other.heightFactor == heightFactor) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, key, alignment, widthFactor, heightFactor, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$AlignCopyWith<_$Align> get copyWith =>
      __$$AlignCopyWithImpl<_$Align>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return align(key, alignment, widthFactor, heightFactor, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return align?.call(key, alignment, widthFactor, heightFactor, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (align != null) {
      return align(key, alignment, widthFactor, heightFactor, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return align(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return align?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (align != null) {
      return align(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AlignToJson(
      this,
    );
  }
}

abstract class Align implements Widget {
  const factory Align(
      {final Key? key,
      final Alignment alignment,
      final double? widthFactor,
      final double? heightFactor,
      final Widget? child}) = _$Align;

  factory Align.fromJson(Map<String, dynamic> json) = _$Align.fromJson;

  @override
  Key? get key;
  Alignment get alignment;
  double? get widthFactor;
  double? get heightFactor;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$AlignCopyWith<_$Align> get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$PaddingCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$PaddingCopyWith(_$Padding value, $Res Function(_$Padding) then) =
      __$$PaddingCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({Key? key, EdgeInsets padding, Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $EdgeInsetsCopyWith<$Res> get padding;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$PaddingCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$Padding>
    implements _$$PaddingCopyWith<$Res> {
  __$$PaddingCopyWithImpl(_$Padding _value, $Res Function(_$Padding) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? padding = null,
    Object? child = freezed,
  }) {
    return _then(_$Padding(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      padding: null == padding
          ? _value.padding
          : padding // ignore: cast_nullable_to_non_nullable
              as EdgeInsets,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $EdgeInsetsCopyWith<$Res> get padding {
    return $EdgeInsetsCopyWith<$Res>(_value.padding, (value) {
      return _then(_value.copyWith(padding: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$Padding implements Padding {
  const _$Padding(
      {this.key, required this.padding, this.child, final String? $type})
      : $type = $type ?? 'padding';

  factory _$Padding.fromJson(Map<String, dynamic> json) =>
      _$$PaddingFromJson(json);

  @override
  final Key? key;
  @override
  final EdgeInsets padding;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.padding(key: $key, padding: $padding, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Padding &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.padding, padding) || other.padding == padding) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, key, padding, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$PaddingCopyWith<_$Padding> get copyWith =>
      __$$PaddingCopyWithImpl<_$Padding>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return padding(key, this.padding, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return padding?.call(key, this.padding, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (padding != null) {
      return padding(key, this.padding, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return padding(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return padding?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (padding != null) {
      return padding(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$PaddingToJson(
      this,
    );
  }
}

abstract class Padding implements Widget {
  const factory Padding(
      {final Key? key,
      required final EdgeInsets padding,
      final Widget? child}) = _$Padding;

  factory Padding.fromJson(Map<String, dynamic> json) = _$Padding.fromJson;

  @override
  Key? get key;
  EdgeInsets get padding;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$PaddingCopyWith<_$Padding> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$ClipRRectCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$ClipRRectCopyWith(
          _$ClipRRect value, $Res Function(_$ClipRRect) then) =
      __$$ClipRRectCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child});

  @override
  $KeyCopyWith<$Res>? get key;
  $BorderRadiusCopyWith<$Res>? get borderRadius;
  $WidgetCopyWith<$Res>? get child;
}

/// @nodoc
class __$$ClipRRectCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$ClipRRect>
    implements _$$ClipRRectCopyWith<$Res> {
  __$$ClipRRectCopyWithImpl(
      _$ClipRRect _value, $Res Function(_$ClipRRect) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? borderRadius = freezed,
    Object? clipBehavior = null,
    Object? child = freezed,
  }) {
    return _then(_$ClipRRect(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      borderRadius: freezed == borderRadius
          ? _value.borderRadius
          : borderRadius // ignore: cast_nullable_to_non_nullable
              as BorderRadius?,
      clipBehavior: null == clipBehavior
          ? _value.clipBehavior
          : clipBehavior // ignore: cast_nullable_to_non_nullable
              as Clip,
      child: freezed == child
          ? _value.child
          : child // ignore: cast_nullable_to_non_nullable
              as Widget?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $BorderRadiusCopyWith<$Res>? get borderRadius {
    if (_value.borderRadius == null) {
      return null;
    }

    return $BorderRadiusCopyWith<$Res>(_value.borderRadius!, (value) {
      return _then(_value.copyWith(borderRadius: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get child {
    if (_value.child == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.child!, (value) {
      return _then(_value.copyWith(child: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$ClipRRect implements ClipRRect {
  const _$ClipRRect(
      {this.key,
      this.borderRadius = BorderRadius.zero,
      this.clipBehavior = Clip.antiAlias,
      this.child,
      final String? $type})
      : $type = $type ?? 'clipRRect';

  factory _$ClipRRect.fromJson(Map<String, dynamic> json) =>
      _$$ClipRRectFromJson(json);

  @override
  final Key? key;
  @override
  @JsonKey()
  final BorderRadius? borderRadius;
  @override
  @JsonKey()
  final Clip clipBehavior;
  @override
  final Widget? child;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.clipRRect(key: $key, borderRadius: $borderRadius, clipBehavior: $clipBehavior, child: $child)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$ClipRRect &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.borderRadius, borderRadius) ||
                other.borderRadius == borderRadius) &&
            (identical(other.clipBehavior, clipBehavior) ||
                other.clipBehavior == clipBehavior) &&
            (identical(other.child, child) || other.child == child));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, key, borderRadius, clipBehavior, child);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$ClipRRectCopyWith<_$ClipRRect> get copyWith =>
      __$$ClipRRectCopyWithImpl<_$ClipRRect>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return clipRRect(key, borderRadius, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return clipRRect?.call(key, borderRadius, clipBehavior, child);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (clipRRect != null) {
      return clipRRect(key, borderRadius, clipBehavior, child);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return clipRRect(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return clipRRect?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (clipRRect != null) {
      return clipRRect(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$ClipRRectToJson(
      this,
    );
  }
}

abstract class ClipRRect implements Widget {
  const factory ClipRRect(
      {final Key? key,
      final BorderRadius? borderRadius,
      final Clip clipBehavior,
      final Widget? child}) = _$ClipRRect;

  factory ClipRRect.fromJson(Map<String, dynamic> json) = _$ClipRRect.fromJson;

  @override
  Key? get key;
  BorderRadius? get borderRadius;
  Clip get clipBehavior;
  Widget? get child;
  @override
  @JsonKey(ignore: true)
  _$$ClipRRectCopyWith<_$ClipRRect> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$MaterialAppCopyWith<$Res> implements $WidgetCopyWith<$Res> {
  factory _$$MaterialAppCopyWith(
          _$MaterialApp value, $Res Function(_$MaterialApp) then) =
      __$$MaterialAppCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {Key? key,
      Widget? home,
      String? initialRoute,
      String title,
      Color? color,
      ThemeData? theme,
      ThemeData? darkTheme,
      ThemeData? highContrastTheme,
      ThemeData? highContrastDarkTheme,
      ThemeMode? themeMode,
      Duration themeAnimationDuration,
      Curves themeAnimationCurve,
      Locale? locale,
      Iterable<Locale> supportedLocales,
      bool debugShowMaterialGrid,
      bool showPerformanceOverlay,
      bool checkerboardRasterCacheImages,
      bool checkerboardOffscreenLayers,
      bool showSemanticsDebugger,
      bool debugShowCheckedModeBanner,
      String? restorationScopeId,
      bool useInheritedMediaQuery,
      Map<String, Widget> routes});

  @override
  $KeyCopyWith<$Res>? get key;
  $WidgetCopyWith<$Res>? get home;
  $ColorCopyWith<$Res>? get color;
  $ThemeDataCopyWith<$Res>? get theme;
  $ThemeDataCopyWith<$Res>? get darkTheme;
  $ThemeDataCopyWith<$Res>? get highContrastTheme;
  $ThemeDataCopyWith<$Res>? get highContrastDarkTheme;
  $CurvesCopyWith<$Res> get themeAnimationCurve;
  $LocaleCopyWith<$Res>? get locale;
}

/// @nodoc
class __$$MaterialAppCopyWithImpl<$Res>
    extends _$WidgetCopyWithImpl<$Res, _$MaterialApp>
    implements _$$MaterialAppCopyWith<$Res> {
  __$$MaterialAppCopyWithImpl(
      _$MaterialApp _value, $Res Function(_$MaterialApp) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? key = freezed,
    Object? home = freezed,
    Object? initialRoute = freezed,
    Object? title = null,
    Object? color = freezed,
    Object? theme = freezed,
    Object? darkTheme = freezed,
    Object? highContrastTheme = freezed,
    Object? highContrastDarkTheme = freezed,
    Object? themeMode = freezed,
    Object? themeAnimationDuration = null,
    Object? themeAnimationCurve = null,
    Object? locale = freezed,
    Object? supportedLocales = null,
    Object? debugShowMaterialGrid = null,
    Object? showPerformanceOverlay = null,
    Object? checkerboardRasterCacheImages = null,
    Object? checkerboardOffscreenLayers = null,
    Object? showSemanticsDebugger = null,
    Object? debugShowCheckedModeBanner = null,
    Object? restorationScopeId = freezed,
    Object? useInheritedMediaQuery = null,
    Object? routes = null,
  }) {
    return _then(_$MaterialApp(
      key: freezed == key
          ? _value.key
          : key // ignore: cast_nullable_to_non_nullable
              as Key?,
      home: freezed == home
          ? _value.home
          : home // ignore: cast_nullable_to_non_nullable
              as Widget?,
      initialRoute: freezed == initialRoute
          ? _value.initialRoute
          : initialRoute // ignore: cast_nullable_to_non_nullable
              as String?,
      title: null == title
          ? _value.title
          : title // ignore: cast_nullable_to_non_nullable
              as String,
      color: freezed == color
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color?,
      theme: freezed == theme
          ? _value.theme
          : theme // ignore: cast_nullable_to_non_nullable
              as ThemeData?,
      darkTheme: freezed == darkTheme
          ? _value.darkTheme
          : darkTheme // ignore: cast_nullable_to_non_nullable
              as ThemeData?,
      highContrastTheme: freezed == highContrastTheme
          ? _value.highContrastTheme
          : highContrastTheme // ignore: cast_nullable_to_non_nullable
              as ThemeData?,
      highContrastDarkTheme: freezed == highContrastDarkTheme
          ? _value.highContrastDarkTheme
          : highContrastDarkTheme // ignore: cast_nullable_to_non_nullable
              as ThemeData?,
      themeMode: freezed == themeMode
          ? _value.themeMode
          : themeMode // ignore: cast_nullable_to_non_nullable
              as ThemeMode?,
      themeAnimationDuration: null == themeAnimationDuration
          ? _value.themeAnimationDuration
          : themeAnimationDuration // ignore: cast_nullable_to_non_nullable
              as Duration,
      themeAnimationCurve: null == themeAnimationCurve
          ? _value.themeAnimationCurve
          : themeAnimationCurve // ignore: cast_nullable_to_non_nullable
              as Curves,
      locale: freezed == locale
          ? _value.locale
          : locale // ignore: cast_nullable_to_non_nullable
              as Locale?,
      supportedLocales: null == supportedLocales
          ? _value.supportedLocales
          : supportedLocales // ignore: cast_nullable_to_non_nullable
              as Iterable<Locale>,
      debugShowMaterialGrid: null == debugShowMaterialGrid
          ? _value.debugShowMaterialGrid
          : debugShowMaterialGrid // ignore: cast_nullable_to_non_nullable
              as bool,
      showPerformanceOverlay: null == showPerformanceOverlay
          ? _value.showPerformanceOverlay
          : showPerformanceOverlay // ignore: cast_nullable_to_non_nullable
              as bool,
      checkerboardRasterCacheImages: null == checkerboardRasterCacheImages
          ? _value.checkerboardRasterCacheImages
          : checkerboardRasterCacheImages // ignore: cast_nullable_to_non_nullable
              as bool,
      checkerboardOffscreenLayers: null == checkerboardOffscreenLayers
          ? _value.checkerboardOffscreenLayers
          : checkerboardOffscreenLayers // ignore: cast_nullable_to_non_nullable
              as bool,
      showSemanticsDebugger: null == showSemanticsDebugger
          ? _value.showSemanticsDebugger
          : showSemanticsDebugger // ignore: cast_nullable_to_non_nullable
              as bool,
      debugShowCheckedModeBanner: null == debugShowCheckedModeBanner
          ? _value.debugShowCheckedModeBanner
          : debugShowCheckedModeBanner // ignore: cast_nullable_to_non_nullable
              as bool,
      restorationScopeId: freezed == restorationScopeId
          ? _value.restorationScopeId
          : restorationScopeId // ignore: cast_nullable_to_non_nullable
              as String?,
      useInheritedMediaQuery: null == useInheritedMediaQuery
          ? _value.useInheritedMediaQuery
          : useInheritedMediaQuery // ignore: cast_nullable_to_non_nullable
              as bool,
      routes: null == routes
          ? _value._routes
          : routes // ignore: cast_nullable_to_non_nullable
              as Map<String, Widget>,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $WidgetCopyWith<$Res>? get home {
    if (_value.home == null) {
      return null;
    }

    return $WidgetCopyWith<$Res>(_value.home!, (value) {
      return _then(_value.copyWith(home: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ColorCopyWith<$Res>? get color {
    if (_value.color == null) {
      return null;
    }

    return $ColorCopyWith<$Res>(_value.color!, (value) {
      return _then(_value.copyWith(color: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ThemeDataCopyWith<$Res>? get theme {
    if (_value.theme == null) {
      return null;
    }

    return $ThemeDataCopyWith<$Res>(_value.theme!, (value) {
      return _then(_value.copyWith(theme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ThemeDataCopyWith<$Res>? get darkTheme {
    if (_value.darkTheme == null) {
      return null;
    }

    return $ThemeDataCopyWith<$Res>(_value.darkTheme!, (value) {
      return _then(_value.copyWith(darkTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ThemeDataCopyWith<$Res>? get highContrastTheme {
    if (_value.highContrastTheme == null) {
      return null;
    }

    return $ThemeDataCopyWith<$Res>(_value.highContrastTheme!, (value) {
      return _then(_value.copyWith(highContrastTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $ThemeDataCopyWith<$Res>? get highContrastDarkTheme {
    if (_value.highContrastDarkTheme == null) {
      return null;
    }

    return $ThemeDataCopyWith<$Res>(_value.highContrastDarkTheme!, (value) {
      return _then(_value.copyWith(highContrastDarkTheme: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $CurvesCopyWith<$Res> get themeAnimationCurve {
    return $CurvesCopyWith<$Res>(_value.themeAnimationCurve, (value) {
      return _then(_value.copyWith(themeAnimationCurve: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $LocaleCopyWith<$Res>? get locale {
    if (_value.locale == null) {
      return null;
    }

    return $LocaleCopyWith<$Res>(_value.locale!, (value) {
      return _then(_value.copyWith(locale: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$MaterialApp implements MaterialApp {
  const _$MaterialApp(
      {this.key,
      this.home,
      this.initialRoute,
      this.title = '',
      this.color,
      this.theme,
      this.darkTheme,
      this.highContrastTheme,
      this.highContrastDarkTheme,
      this.themeMode = ThemeMode.system,
      this.themeAnimationDuration = const Duration(milliseconds: 200),
      this.themeAnimationCurve = const Curves.linear(),
      this.locale,
      this.supportedLocales = const [Locale('en', 'US')],
      this.debugShowMaterialGrid = false,
      this.showPerformanceOverlay = false,
      this.checkerboardRasterCacheImages = false,
      this.checkerboardOffscreenLayers = false,
      this.showSemanticsDebugger = false,
      this.debugShowCheckedModeBanner = true,
      this.restorationScopeId,
      this.useInheritedMediaQuery = false,
      final Map<String, Widget> routes = const {},
      final String? $type})
      : _routes = routes,
        $type = $type ?? 'materialApp';

  factory _$MaterialApp.fromJson(Map<String, dynamic> json) =>
      _$$MaterialAppFromJson(json);

  @override
  final Key? key;
  @override
  final Widget? home;
  @override
  final String? initialRoute;
  @override
  @JsonKey()
  final String title;
  @override
  final Color? color;
  @override
  final ThemeData? theme;
  @override
  final ThemeData? darkTheme;
  @override
  final ThemeData? highContrastTheme;
  @override
  final ThemeData? highContrastDarkTheme;
  @override
  @JsonKey()
  final ThemeMode? themeMode;
  @override
  @JsonKey()
  final Duration themeAnimationDuration;
  @override
  @JsonKey()
  final Curves themeAnimationCurve;
  @override
  final Locale? locale;
  @override
  @JsonKey()
  final Iterable<Locale> supportedLocales;
  @override
  @JsonKey()
  final bool debugShowMaterialGrid;
  @override
  @JsonKey()
  final bool showPerformanceOverlay;
  @override
  @JsonKey()
  final bool checkerboardRasterCacheImages;
  @override
  @JsonKey()
  final bool checkerboardOffscreenLayers;
  @override
  @JsonKey()
  final bool showSemanticsDebugger;
  @override
  @JsonKey()
  final bool debugShowCheckedModeBanner;
  @override
  final String? restorationScopeId;
  @override
  @JsonKey()
  final bool useInheritedMediaQuery;
  final Map<String, Widget> _routes;
  @override
  @JsonKey()
  Map<String, Widget> get routes {
    if (_routes is EqualUnmodifiableMapView) return _routes;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableMapView(_routes);
  }

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'Widget.materialApp(key: $key, home: $home, initialRoute: $initialRoute, title: $title, color: $color, theme: $theme, darkTheme: $darkTheme, highContrastTheme: $highContrastTheme, highContrastDarkTheme: $highContrastDarkTheme, themeMode: $themeMode, themeAnimationDuration: $themeAnimationDuration, themeAnimationCurve: $themeAnimationCurve, locale: $locale, supportedLocales: $supportedLocales, debugShowMaterialGrid: $debugShowMaterialGrid, showPerformanceOverlay: $showPerformanceOverlay, checkerboardRasterCacheImages: $checkerboardRasterCacheImages, checkerboardOffscreenLayers: $checkerboardOffscreenLayers, showSemanticsDebugger: $showSemanticsDebugger, debugShowCheckedModeBanner: $debugShowCheckedModeBanner, restorationScopeId: $restorationScopeId, useInheritedMediaQuery: $useInheritedMediaQuery, routes: $routes)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$MaterialApp &&
            (identical(other.key, key) || other.key == key) &&
            (identical(other.home, home) || other.home == home) &&
            (identical(other.initialRoute, initialRoute) ||
                other.initialRoute == initialRoute) &&
            (identical(other.title, title) || other.title == title) &&
            (identical(other.color, color) || other.color == color) &&
            (identical(other.theme, theme) || other.theme == theme) &&
            (identical(other.darkTheme, darkTheme) ||
                other.darkTheme == darkTheme) &&
            (identical(other.highContrastTheme, highContrastTheme) ||
                other.highContrastTheme == highContrastTheme) &&
            (identical(other.highContrastDarkTheme, highContrastDarkTheme) ||
                other.highContrastDarkTheme == highContrastDarkTheme) &&
            (identical(other.themeMode, themeMode) ||
                other.themeMode == themeMode) &&
            (identical(other.themeAnimationDuration, themeAnimationDuration) ||
                other.themeAnimationDuration == themeAnimationDuration) &&
            (identical(other.themeAnimationCurve, themeAnimationCurve) ||
                other.themeAnimationCurve == themeAnimationCurve) &&
            (identical(other.locale, locale) || other.locale == locale) &&
            const DeepCollectionEquality()
                .equals(other.supportedLocales, supportedLocales) &&
            (identical(other.debugShowMaterialGrid, debugShowMaterialGrid) ||
                other.debugShowMaterialGrid == debugShowMaterialGrid) &&
            (identical(other.showPerformanceOverlay, showPerformanceOverlay) ||
                other.showPerformanceOverlay == showPerformanceOverlay) &&
            (identical(other.checkerboardRasterCacheImages,
                    checkerboardRasterCacheImages) ||
                other.checkerboardRasterCacheImages ==
                    checkerboardRasterCacheImages) &&
            (identical(other.checkerboardOffscreenLayers,
                    checkerboardOffscreenLayers) ||
                other.checkerboardOffscreenLayers ==
                    checkerboardOffscreenLayers) &&
            (identical(other.showSemanticsDebugger, showSemanticsDebugger) ||
                other.showSemanticsDebugger == showSemanticsDebugger) &&
            (identical(other.debugShowCheckedModeBanner,
                    debugShowCheckedModeBanner) ||
                other.debugShowCheckedModeBanner ==
                    debugShowCheckedModeBanner) &&
            (identical(other.restorationScopeId, restorationScopeId) ||
                other.restorationScopeId == restorationScopeId) &&
            (identical(other.useInheritedMediaQuery, useInheritedMediaQuery) ||
                other.useInheritedMediaQuery == useInheritedMediaQuery) &&
            const DeepCollectionEquality().equals(other._routes, _routes));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        key,
        home,
        initialRoute,
        title,
        color,
        theme,
        darkTheme,
        highContrastTheme,
        highContrastDarkTheme,
        themeMode,
        themeAnimationDuration,
        themeAnimationCurve,
        locale,
        const DeepCollectionEquality().hash(supportedLocales),
        debugShowMaterialGrid,
        showPerformanceOverlay,
        checkerboardRasterCacheImages,
        checkerboardOffscreenLayers,
        showSemanticsDebugger,
        debugShowCheckedModeBanner,
        restorationScopeId,
        useInheritedMediaQuery,
        const DeepCollectionEquality().hash(_routes)
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$MaterialAppCopyWith<_$MaterialApp> get copyWith =>
      __$$MaterialAppCopyWithImpl<_$MaterialApp>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)
        card,
    required TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)
        elevatedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        filledTonalButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        outlinedButton,
    required TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)
        textButton,
    required TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)
        iconButton,
    required TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)
        scaffold,
    required TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButton,
    required TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback) floatingActionButtonExtended,
    required TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor) text,
    required TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior) container,
    required TResult Function(Key? key, double? width, double? height, Widget? child) sizedBox,
    required TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child) center,
    required TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection) icon,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) column,
    required TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children) row,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue) circularProgressIndicator,
    required TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue) linearProgressIndicator,
    required TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color) divider,
    required TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape) navigationRail,
    required TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior) navigationBar,
    required TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration) defaultTabController,
    required TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child) tab,
    required TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior) tabBarView,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior) customScrollView,
    required TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError) checkbox,
    required TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius) dropdownButtonFormField,
    required TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior) popupMenuButton,
    required TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip) navigationDestination,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme) actionChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) filterChip,
    required TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder) inputChip,
    required TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child) menuAnchor,
    required TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child) submenuButton,
    required TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child) menuItemButton,
    required TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus) materialSwitch,
    required TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height) bottomAppBar,
    required TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding) navigationDrawer,
    required TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label) navigationDrawerDestination,
    required TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus) textField,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child) badgeCount,
    required TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child) badge,
    required TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable) alertDialog,
    required TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality) image,
    required TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child) safeArea,
    required TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior) singleChildScrollView,
    required TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child) align,
    required TResult Function(Key? key, EdgeInsets padding, Widget? child) padding,
    required TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child) clipRRect,
    required TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes) materialApp,
  }) {
    return materialApp(
        key,
        home,
        initialRoute,
        title,
        color,
        theme,
        darkTheme,
        highContrastTheme,
        highContrastDarkTheme,
        themeMode,
        themeAnimationDuration,
        themeAnimationCurve,
        locale,
        supportedLocales,
        debugShowMaterialGrid,
        showPerformanceOverlay,
        checkerboardRasterCacheImages,
        checkerboardOffscreenLayers,
        showSemanticsDebugger,
        debugShowCheckedModeBanner,
        restorationScopeId,
        useInheritedMediaQuery,
        routes);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult? Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult? Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult? Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult? Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult? Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult? Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult? Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult? Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult? Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult? Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult? Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult? Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult? Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult? Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult? Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult? Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult? Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult? Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult? Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult? Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult? Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult? Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult? Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult? Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult? Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult? Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult? Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult? Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult? Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult? Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult? Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult? Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult? Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult? Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult? Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult? Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult? Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult? Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult? Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult? Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult? Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
  }) {
    return materialApp?.call(
        key,
        home,
        initialRoute,
        title,
        color,
        theme,
        darkTheme,
        highContrastTheme,
        highContrastDarkTheme,
        themeMode,
        themeAnimationDuration,
        themeAnimationCurve,
        locale,
        supportedLocales,
        debugShowMaterialGrid,
        showPerformanceOverlay,
        checkerboardRasterCacheImages,
        checkerboardOffscreenLayers,
        showSemanticsDebugger,
        debugShowCheckedModeBanner,
        restorationScopeId,
        useInheritedMediaQuery,
        routes);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            Key? key,
            Color? color,
            Color? shadowColor,
            Color? surfaceTintColor,
            double? elevation,
            ShapeBorder? shape,
            bool borderOnForeground,
            EdgeInsets? margin,
            Clip? clipBehavior,
            Widget? child,
            bool semanticContainer)?
        card,
    TResult Function(
            Key? key,
            Callback? onPressed,
            Callback? onLongPress,
            bool autofocus,
            Clip clipBehavior,
            Widget child,
            ButtonStyle? style)?
        elevatedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        filledTonalButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        outlinedButton,
    TResult Function(Key? key, Callback? onPressed, Callback? onLongPress, bool autofocus, Clip clipBehavior, Widget child)?
        textButton,
    TResult Function(
            Key? key,
            double? iconSize,
            VisualDensity? visualDensity,
            EdgeInsets? padding,
            Alignment? alignment,
            double? splashRadius,
            Color? color,
            Color? focusColor,
            Color? hoverColor,
            Color? highlightColor,
            Color? splashColor,
            Color? disabledColor,
            Callback onPressed,
            MouseCursor? mouseCursor,
            bool autofocus,
            String? tooltip,
            bool? enableFeedback,
            BoxConstraints? constraints,
            bool? isSelected,
            Widget? selectedIcon,
            Widget icon)?
        iconButton,
    TResult Function(
            Key? key,
            PreferredSizeWidget? appBar,
            Widget? body,
            Widget? floatingActionButton,
            FloatingActionButtonLocation? floatingActionButtonLocation,
            List<Widget>? persistentFooterButtons,
            Alignment persistentFooterAlignment,
            Widget? drawer,
            Widget? endDrawer,
            Widget? bottomNavigationBar,
            Widget? bottomSheet,
            Color? backgroundColor,
            bool? resizeToAvoidBottomInset,
            bool primary,
            bool extendBody,
            bool extendBodyBehindAppBar,
            Color? drawerScrimColor,
            double? drawerEdgeDragWidth,
            bool drawerEnableOpenDragGesture,
            bool endDrawerEnableOpenDragGesture,
            String? restorationId)?
        scaffold,
    TResult Function(Key? key, Widget? child, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, bool mini, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButton,
    TResult Function(Key? key, Widget label, Widget? icon, String? tooltip, Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? highlightElevation, double? disabledElevation, Callback? onPressed, MouseCursor? mouseCursor, ShapeBorder? shape, Clip clipBehavior, bool autofocus, MaterialTapTargetSize? materialTapTargetSize, bool isExtended, bool? enableFeedback)? floatingActionButtonExtended,
    TResult Function(String data, Key? key, TextStyle? style, StrutStyle? strutStyle, TextAlign? textAlign, TextDirection? textDirection, Locale? locale, bool? softWrap, TextOverflow? overflow, double? textScaleFactor, int? maxLines, String? semanticsLabel, TextWidthBasis? textWidthBasis, TextHeightBehavior? textHeightBehavior, Color? selectionColor)? text,
    TResult Function(Key? key, Alignment? alignment, EdgeInsets? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsets? margin, @matrixConverter Matrix4? transform, Alignment? transformAlignment, Widget? child, Clip clipBehavior)? container,
    TResult Function(Key? key, double? width, double? height, Widget? child)? sizedBox,
    TResult Function(Key? key, double? widthFactor, double? heightFactor, Widget child)? center,
    TResult Function(IconData? icon, Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection)? icon,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? column,
    TResult Function(Key? key, MainAxisAlignment mainAxisAlignment, MainAxisSize mainAxisSize, CrossAxisAlignment crossAxisAlignment, TextDirection? textDirection, VerticalDirection verticalDirection, TextBaseline? textBaseline, List<Widget> children)? row,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double strokeWidth, String? semanticsLabel, String? semanticsValue)? circularProgressIndicator,
    TResult Function(Key? key, double? value, Color? backgroundColor, Color? color, double? minHeight, String? semanticsLabel, String? semanticsValue)? linearProgressIndicator,
    TResult Function(Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color)? divider,
    TResult Function(Key? key, Color? backgroundColor, bool extended, Widget? leading, Widget? trailing, List<NavigationRailDestination> destinations, int? selectedIndex, IntSelectionCallback? onDestinationSelected, double? elevation, double? groupAlignment, NavigationRailLabelType? labelType, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? minWidth, double? minExtendedWidth, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape)? navigationRail,
    TResult Function(Key? key, Duration? animationDuration, int selectedIndex, List<Widget> destinations, IntSelectionCallback? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior)? navigationBar,
    TResult Function(Key? key, int length, int initialIndex, Widget child, Duration? animationDuration)? defaultTabController,
    TResult Function(Key? key, String? text, Widget? icon, EdgeInsets iconMargin, double? height, Widget? child)? tab,
    TResult Function(Key? key, List<Widget> children, ScrollPhysics? physics, DragStartBehavior dragStartBehavior, double viewportFraction, Clip clipBehavior)? tabBarView,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, bool? primary, ScrollPhysics? physics, bool shrinkWrap, Key? center, double anchor, double? cacheExtent, List<Sliver> slivers, int? semanticChildCount, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior, String? restorationId, Clip clipBehavior)? customScrollView,
    TResult Function(Key? key, bool? value, bool tristate, FormBoolField? field, MouseCursor? mouseCursor, Color? activeColor, MaterialStateProperty? fillColor, Color? checkColor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity, bool autofocus, ShapeBorder? shape, BorderSide? side, bool isError)? checkbox,
    TResult Function(Key? key, FormStringField? field, List<DropdownMenuItem> items, String? value, Widget? hint, Widget? disabledHint, Callback? onTap, int elevation, TextStyle? style, Widget? icon, Color? iconDisabledColor, Color? iconEnabledColor, double iconSize, bool isDense, bool isExpanded, double? itemHeight, Color? focusColor, bool autofocus, Color? dropdownColor, InputDecoration? decoration, Map<String, String>? validatorMessages, AutovalidateMode? autovalidateMode, double? menuMaxHeight, bool? enableFeedback, Alignment alignment, BorderRadius? borderRadius)? dropdownButtonFormField,
    TResult Function(Key? key, List<PopupMenuEntry> items, String? initialValue, Callback? onOpened, FormStringField? field, Callback? onCanceled, String? tooltip, double? elevation, Color? shadowColor, Color? surfaceTintColor, EdgeInsets padding, Widget? child, double? splashRadius, Widget? icon, double? iconSize, Offset offset, bool enabled, ShapeBorder? shape, Color? color, bool? enableFeedback, BoxConstraints? constraints, PopupMenuPosition? position, Clip clipBehavior)? popupMenuButton,
    TResult Function(Key? key, Widget icon, Widget? selectedIcon, String label, String? tooltip)? navigationDestination,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, Callback? onPressed, double? pressElevation, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, Color? disabledColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme)? actionChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, BoolSelectionCallback onSelected, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? filterChip,
    TResult Function(Key? key, Widget? avatar, Widget label, TextStyle? labelStyle, EdgeInsets? labelPadding, bool selected, bool isEnabled, BoolSelectionCallback? onSelected, Widget? deleteIcon, Callback? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, Callback? onPressed, double? pressElevation, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, ShapeBorder? shape, Clip clipBehavior, bool autofocus, Color? backgroundColor, EdgeInsets? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder)? inputChip,
    TResult Function(Key? key, Offset alignmentOffset, Clip clipBehavior, bool anchorTapClosesMenu, Callback? onOpen, Callback? onClose, bool crossAxisUnconstrained, List<Widget> menuChildren, Widget? child)? menuAnchor,
    TResult Function(Key? key, BoolSelectionCallback? onHover, BoolSelectionCallback? onFocusChange, Callback? onOpen, Callback? onClose, ButtonStyle? style, Offset? alignmentOffset, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, List<Widget> menuChildren, Widget child)? submenuButton,
    TResult Function(Key? key, Callback? onPressed, BoolSelectionCallback? onHover, bool requestFocusOnHover, BoolSelectionCallback? onFocusChange, ButtonStyle? style, Clip clipBehavior, Widget? leadingIcon, Widget? trailingIcon, bool closeOnActivate, Widget? child)? menuItemButton,
    TResult Function(Key? key, bool value, BoolSelectionCallback onChanged, Color? activeColor, Color? activeTrackColor, Color? inactiveThumbColor, Color? inactiveTrackColor, ImageProvider? activeThumbImage, ImageProvider? inactiveThumbImage, MaterialStateProperty? thumbColor, MaterialStateProperty? trackColor, MaterialStateProperty? trackOutlineColor, MaterialTapTargetSize? materialTapTargetSize, DragStartBehavior dragStartBehavior, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, MaterialStateProperty? overlayColor, double? splashRadius, BoolSelectionCallback? onFocusChange, bool autofocus)? materialSwitch,
    TResult Function(Key? key, Color? color, double? elevation, Clip clipBehavior, double notchMargin, Widget? child, EdgeInsets? padding, Color? surfaceTintColor, Color? shadowColor, double? height)? bottomAppBar,
    TResult Function(Key? key, List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, IntSelectionCallback? onDestinationSelected, int? selectedIndex, EdgeInsets? tilePadding)? navigationDrawer,
    TResult Function(Key? key, Color? backgroundColor, Widget icon, Widget? selectedIcon, Widget label)? navigationDrawerDestination,
    TResult Function(Key? key, InputDecoration? decoration, TextInputAction? textInputAction, TextCapitalization textCapitalization, TextStyle? style, StrutStyle? strutStyle, TextAlign textAlign, TextDirection? textDirection, bool readOnly, bool? showCursor, bool autofocus, String obscuringCharacter, bool obscureText, bool autocorrect, SmartDashesType? smartDashesType, SmartQuotesType? smartQuotesType, bool enableSuggestions, int? maxLines, int? minLines, bool expands, int? maxLength, MaxLengthEnforcement? maxLengthEnforcement, Callback? onEditingComplete, bool? enabled, double cursorWidth, double? cursorHeight, bool? cursorOpacityAnimates, Color? cursorColor, Brightness? keyboardAppearance, EdgeInsets scrollPadding, DragStartBehavior dragStartBehavior, bool? enableInteractiveSelection, MouseCursor? mouseCursor, ScrollPhysics? scrollPhysics, Clip clipBehavior, String? restorationId, bool scribbleEnabled, bool enableIMEPersonalizedLearning, bool canRequestFocus)? textField,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, int count, bool isLabelVisible, Widget? child)? badgeCount,
    TResult Function(Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsets? padding, Offset? offset, Widget? label, bool isLabelVisible, Widget? child)? badge,
    TResult Function(Key? key, Widget? icon, EdgeInsets? iconPadding, Color? iconColor, Widget? title, EdgeInsets? titlePadding, TextStyle? titleTextStyle, Widget? content, EdgeInsets? contentPadding, TextStyle? contentTextStyle, List<Widget>? actions, EdgeInsets? actionsPadding, MainAxisAlignment? actionsAlignment, OverflowBarAlignment? actionsOverflowAlignment, VerticalDirection? actionsOverflowDirection, double? actionsOverflowButtonSpacing, EdgeInsets? buttonPadding, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, String? semanticLabel, EdgeInsets insetPadding, Clip clipBehavior, ShapeBorder? shape, bool scrollable)? alertDialog,
    TResult Function(Key? key, ImageProvider image, String? semanticLabel, bool excludeFromSemantics, double? width, double? height, Color? color, BlendMode? colorBlendMode, BoxFit? fit, Alignment alignment, ImageRepeat repeat, Rect? centerSlice, bool matchTextDirection, bool gaplessPlayback, bool isAntiAlias, FilterQuality filterQuality)? image,
    TResult Function(Key? key, bool left, bool top, bool right, bool bottom, EdgeInsets minimum, bool maintainBottomViewPadding, Widget child)? safeArea,
    TResult Function(Key? key, Axis scrollDirection, bool reverse, EdgeInsets? padding, bool? primary, ScrollPhysics? physics, Widget? child, Clip clipBehavior, String? restorationId, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior)? singleChildScrollView,
    TResult Function(Key? key, Alignment alignment, double? widthFactor, double? heightFactor, Widget? child)? align,
    TResult Function(Key? key, EdgeInsets padding, Widget? child)? padding,
    TResult Function(Key? key, BorderRadius? borderRadius, Clip clipBehavior, Widget? child)? clipRRect,
    TResult Function(Key? key, Widget? home, String? initialRoute, String title, Color? color, ThemeData? theme, ThemeData? darkTheme, ThemeData? highContrastTheme, ThemeData? highContrastDarkTheme, ThemeMode? themeMode, Duration themeAnimationDuration, Curves themeAnimationCurve, Locale? locale, Iterable<Locale> supportedLocales, bool debugShowMaterialGrid, bool showPerformanceOverlay, bool checkerboardRasterCacheImages, bool checkerboardOffscreenLayers, bool showSemanticsDebugger, bool debugShowCheckedModeBanner, String? restorationScopeId, bool useInheritedMediaQuery, Map<String, Widget> routes)? materialApp,
    required TResult orElse(),
  }) {
    if (materialApp != null) {
      return materialApp(
          key,
          home,
          initialRoute,
          title,
          color,
          theme,
          darkTheme,
          highContrastTheme,
          highContrastDarkTheme,
          themeMode,
          themeAnimationDuration,
          themeAnimationCurve,
          locale,
          supportedLocales,
          debugShowMaterialGrid,
          showPerformanceOverlay,
          checkerboardRasterCacheImages,
          checkerboardOffscreenLayers,
          showSemanticsDebugger,
          debugShowCheckedModeBanner,
          restorationScopeId,
          useInheritedMediaQuery,
          routes);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Card value) card,
    required TResult Function(ElevatedButton value) elevatedButton,
    required TResult Function(FilledButton value) filledButton,
    required TResult Function(FilledTonalButton value) filledTonalButton,
    required TResult Function(OutlinedButton value) outlinedButton,
    required TResult Function(TextButton value) textButton,
    required TResult Function(IconButton value) iconButton,
    required TResult Function(Scaffold value) scaffold,
    required TResult Function(FloatingActionButton value) floatingActionButton,
    required TResult Function(FloatingActionButtonExtended value)
        floatingActionButtonExtended,
    required TResult Function(Text value) text,
    required TResult Function(Container value) container,
    required TResult Function(SizedBox value) sizedBox,
    required TResult Function(Center value) center,
    required TResult Function(Icon value) icon,
    required TResult Function(Column value) column,
    required TResult Function(Row value) row,
    required TResult Function(CircularProgressIndicator value)
        circularProgressIndicator,
    required TResult Function(LinearProgressIndicator value)
        linearProgressIndicator,
    required TResult Function(Divider value) divider,
    required TResult Function(NavigationRail value) navigationRail,
    required TResult Function(NavigationBar value) navigationBar,
    required TResult Function(DefaultTabController value) defaultTabController,
    required TResult Function(Tab value) tab,
    required TResult Function(TabBarView value) tabBarView,
    required TResult Function(CustomScrollView value) customScrollView,
    required TResult Function(Checkbox value) checkbox,
    required TResult Function(DropdownButtonFormField value)
        dropdownButtonFormField,
    required TResult Function(PopupMenuButton value) popupMenuButton,
    required TResult Function(NavigationDestination value)
        navigationDestination,
    required TResult Function(ActionChip value) actionChip,
    required TResult Function(FilterChip value) filterChip,
    required TResult Function(InputChip value) inputChip,
    required TResult Function(MenuAnchor value) menuAnchor,
    required TResult Function(SubmenuButton value) submenuButton,
    required TResult Function(MenuItemButton value) menuItemButton,
    required TResult Function(Switch value) materialSwitch,
    required TResult Function(BottomAppBar value) bottomAppBar,
    required TResult Function(NavigationDrawer value) navigationDrawer,
    required TResult Function(NavigationDrawerDestination value)
        navigationDrawerDestination,
    required TResult Function(TextField value) textField,
    required TResult Function(BadgeCount value) badgeCount,
    required TResult Function(Badge value) badge,
    required TResult Function(AlertDialog value) alertDialog,
    required TResult Function(Image value) image,
    required TResult Function(SafeArea value) safeArea,
    required TResult Function(SingleChildScrollView value)
        singleChildScrollView,
    required TResult Function(Align value) align,
    required TResult Function(Padding value) padding,
    required TResult Function(ClipRRect value) clipRRect,
    required TResult Function(MaterialApp value) materialApp,
  }) {
    return materialApp(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Card value)? card,
    TResult? Function(ElevatedButton value)? elevatedButton,
    TResult? Function(FilledButton value)? filledButton,
    TResult? Function(FilledTonalButton value)? filledTonalButton,
    TResult? Function(OutlinedButton value)? outlinedButton,
    TResult? Function(TextButton value)? textButton,
    TResult? Function(IconButton value)? iconButton,
    TResult? Function(Scaffold value)? scaffold,
    TResult? Function(FloatingActionButton value)? floatingActionButton,
    TResult? Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult? Function(Text value)? text,
    TResult? Function(Container value)? container,
    TResult? Function(SizedBox value)? sizedBox,
    TResult? Function(Center value)? center,
    TResult? Function(Icon value)? icon,
    TResult? Function(Column value)? column,
    TResult? Function(Row value)? row,
    TResult? Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult? Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult? Function(Divider value)? divider,
    TResult? Function(NavigationRail value)? navigationRail,
    TResult? Function(NavigationBar value)? navigationBar,
    TResult? Function(DefaultTabController value)? defaultTabController,
    TResult? Function(Tab value)? tab,
    TResult? Function(TabBarView value)? tabBarView,
    TResult? Function(CustomScrollView value)? customScrollView,
    TResult? Function(Checkbox value)? checkbox,
    TResult? Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult? Function(PopupMenuButton value)? popupMenuButton,
    TResult? Function(NavigationDestination value)? navigationDestination,
    TResult? Function(ActionChip value)? actionChip,
    TResult? Function(FilterChip value)? filterChip,
    TResult? Function(InputChip value)? inputChip,
    TResult? Function(MenuAnchor value)? menuAnchor,
    TResult? Function(SubmenuButton value)? submenuButton,
    TResult? Function(MenuItemButton value)? menuItemButton,
    TResult? Function(Switch value)? materialSwitch,
    TResult? Function(BottomAppBar value)? bottomAppBar,
    TResult? Function(NavigationDrawer value)? navigationDrawer,
    TResult? Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult? Function(TextField value)? textField,
    TResult? Function(BadgeCount value)? badgeCount,
    TResult? Function(Badge value)? badge,
    TResult? Function(AlertDialog value)? alertDialog,
    TResult? Function(Image value)? image,
    TResult? Function(SafeArea value)? safeArea,
    TResult? Function(SingleChildScrollView value)? singleChildScrollView,
    TResult? Function(Align value)? align,
    TResult? Function(Padding value)? padding,
    TResult? Function(ClipRRect value)? clipRRect,
    TResult? Function(MaterialApp value)? materialApp,
  }) {
    return materialApp?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Card value)? card,
    TResult Function(ElevatedButton value)? elevatedButton,
    TResult Function(FilledButton value)? filledButton,
    TResult Function(FilledTonalButton value)? filledTonalButton,
    TResult Function(OutlinedButton value)? outlinedButton,
    TResult Function(TextButton value)? textButton,
    TResult Function(IconButton value)? iconButton,
    TResult Function(Scaffold value)? scaffold,
    TResult Function(FloatingActionButton value)? floatingActionButton,
    TResult Function(FloatingActionButtonExtended value)?
        floatingActionButtonExtended,
    TResult Function(Text value)? text,
    TResult Function(Container value)? container,
    TResult Function(SizedBox value)? sizedBox,
    TResult Function(Center value)? center,
    TResult Function(Icon value)? icon,
    TResult Function(Column value)? column,
    TResult Function(Row value)? row,
    TResult Function(CircularProgressIndicator value)?
        circularProgressIndicator,
    TResult Function(LinearProgressIndicator value)? linearProgressIndicator,
    TResult Function(Divider value)? divider,
    TResult Function(NavigationRail value)? navigationRail,
    TResult Function(NavigationBar value)? navigationBar,
    TResult Function(DefaultTabController value)? defaultTabController,
    TResult Function(Tab value)? tab,
    TResult Function(TabBarView value)? tabBarView,
    TResult Function(CustomScrollView value)? customScrollView,
    TResult Function(Checkbox value)? checkbox,
    TResult Function(DropdownButtonFormField value)? dropdownButtonFormField,
    TResult Function(PopupMenuButton value)? popupMenuButton,
    TResult Function(NavigationDestination value)? navigationDestination,
    TResult Function(ActionChip value)? actionChip,
    TResult Function(FilterChip value)? filterChip,
    TResult Function(InputChip value)? inputChip,
    TResult Function(MenuAnchor value)? menuAnchor,
    TResult Function(SubmenuButton value)? submenuButton,
    TResult Function(MenuItemButton value)? menuItemButton,
    TResult Function(Switch value)? materialSwitch,
    TResult Function(BottomAppBar value)? bottomAppBar,
    TResult Function(NavigationDrawer value)? navigationDrawer,
    TResult Function(NavigationDrawerDestination value)?
        navigationDrawerDestination,
    TResult Function(TextField value)? textField,
    TResult Function(BadgeCount value)? badgeCount,
    TResult Function(Badge value)? badge,
    TResult Function(AlertDialog value)? alertDialog,
    TResult Function(Image value)? image,
    TResult Function(SafeArea value)? safeArea,
    TResult Function(SingleChildScrollView value)? singleChildScrollView,
    TResult Function(Align value)? align,
    TResult Function(Padding value)? padding,
    TResult Function(ClipRRect value)? clipRRect,
    TResult Function(MaterialApp value)? materialApp,
    required TResult orElse(),
  }) {
    if (materialApp != null) {
      return materialApp(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$MaterialAppToJson(
      this,
    );
  }
}

abstract class MaterialApp implements Widget {
  const factory MaterialApp(
      {final Key? key,
      final Widget? home,
      final String? initialRoute,
      final String title,
      final Color? color,
      final ThemeData? theme,
      final ThemeData? darkTheme,
      final ThemeData? highContrastTheme,
      final ThemeData? highContrastDarkTheme,
      final ThemeMode? themeMode,
      final Duration themeAnimationDuration,
      final Curves themeAnimationCurve,
      final Locale? locale,
      final Iterable<Locale> supportedLocales,
      final bool debugShowMaterialGrid,
      final bool showPerformanceOverlay,
      final bool checkerboardRasterCacheImages,
      final bool checkerboardOffscreenLayers,
      final bool showSemanticsDebugger,
      final bool debugShowCheckedModeBanner,
      final String? restorationScopeId,
      final bool useInheritedMediaQuery,
      final Map<String, Widget> routes}) = _$MaterialApp;

  factory MaterialApp.fromJson(Map<String, dynamic> json) =
      _$MaterialApp.fromJson;

  @override
  Key? get key;
  Widget? get home;
  String? get initialRoute;
  String get title;
  Color? get color;
  ThemeData? get theme;
  ThemeData? get darkTheme;
  ThemeData? get highContrastTheme;
  ThemeData? get highContrastDarkTheme;
  ThemeMode? get themeMode;
  Duration get themeAnimationDuration;
  Curves get themeAnimationCurve;
  Locale? get locale;
  Iterable<Locale> get supportedLocales;
  bool get debugShowMaterialGrid;
  bool get showPerformanceOverlay;
  bool get checkerboardRasterCacheImages;
  bool get checkerboardOffscreenLayers;
  bool get showSemanticsDebugger;
  bool get debugShowCheckedModeBanner;
  String? get restorationScopeId;
  bool get useInheritedMediaQuery;
  Map<String, Widget> get routes;
  @override
  @JsonKey(ignore: true)
  _$$MaterialAppCopyWith<_$MaterialApp> get copyWith =>
      throw _privateConstructorUsedError;
}
